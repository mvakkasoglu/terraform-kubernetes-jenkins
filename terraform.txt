2021/02/20 12:16:54 [INFO] Terraform version: 0.14.6  
2021/02/20 12:16:54 [INFO] Go runtime version: go1.15.6
2021/02/20 12:16:54 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2021/02/20 12:16:54 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:16:54 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:16:54 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:16:54 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:16:54 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:16:54 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:16:54 [INFO] CLI command args: []string{"init"}
2021/02/20 12:16:54 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:16:54 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:16:54 [DEBUG] New state was assigned lineage "20d13950-1dfb-f907-3687-ac95a31d1ec1"
2021/02/20 12:16:54 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:16:54 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:16:54 [DEBUG] checking for provisioner in "."
2021/02/20 12:16:55 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:16:55 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:16:55 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:16:55 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:16:55 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 12:16:55 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021/02/20 12:16:55 [TRACE] statemgr.Filesystem: read nil snapshot
2021/02/20 12:16:55 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2021/02/20 12:16:55 [TRACE] HTTP client GET request to https://registry.terraform.io/.well-known/terraform.json
2021/02/20 12:16:55 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/02/20 12:16:55 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/02/20 12:16:55 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:16:55 [TRACE] getproviders.SearchLocalDirectory: failed to resolve symlinks for .terraform/providers: lstat .terraform: no such file or directory
2021/02/20 12:16:55 [TRACE] providercache.fillMetaCache: error while scanning directory .terraform/providers: cannot search .terraform/providers: lstat .terraform/providers: no such file or directory
2021/02/20 12:16:55 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/kubernetes/2.0.2/download/darwin/amd64
2021/02/20 12:16:55 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/kubernetes/2.0.2/download/darwin/amd64
2021/02/20 12:16:55 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS
2021/02/20 12:16:55 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS
2021/02/20 12:16:55 [DEBUG] GET https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS.sig
2021/02/20 12:16:55 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_SHA256SUMS.sig
2021/02/20 12:16:55 [TRACE] providercache.Dir.InstallPackage: installing registry.terraform.io/hashicorp/kubernetes v2.0.2 from https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_darwin_amd64.zip
2021/02/20 12:16:55 [TRACE] HTTP client GET request to https://releases.hashicorp.com/terraform-provider-kubernetes/2.0.2/terraform-provider-kubernetes_2.0.2_darwin_amd64.zip
2021/02/20 12:16:58 [DEBUG] Provider signed by 51852D87348FFC4C HashiCorp Security <security@hashicorp.com>
2021/02/20 12:16:58 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:16:58 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:16:58 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:16:58 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:17:32 [INFO] Terraform version: 0.14.6  
2021/02/20 12:17:32 [INFO] Go runtime version: go1.15.6
2021/02/20 12:17:32 [INFO] CLI args: []string{"/usr/local/bin/terraform", "fmt"}
2021/02/20 12:17:32 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:17:32 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:17:32 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:17:32 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:17:32 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:17:32 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:17:32 [INFO] CLI command args: []string{"fmt"}
2021/02/20 12:17:32 [TRACE] terraform fmt: looking for files in .
2021/02/20 12:17:32 [TRACE] terraform fmt: Formatting kubernetes.tf
2021/02/20 12:17:39 [INFO] Terraform version: 0.14.6  
2021/02/20 12:17:39 [INFO] Go runtime version: go1.15.6
2021/02/20 12:17:39 [INFO] CLI args: []string{"/usr/local/bin/terraform", "validate"}
2021/02/20 12:17:39 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:17:39 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:17:39 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:17:39 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:17:39 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:17:39 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:17:39 [INFO] CLI command args: []string{"validate"}
2021/02/20 12:17:39 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:17:39 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:17:39 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:17:39 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:17:39 [DEBUG] checking for provisioner in "."
2021/02/20 12:17:39 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:17:39 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:17:39 [TRACE] terraform.NewContext: starting
2021/02/20 12:17:39 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:17:39 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:17:39.200-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:17:39.226-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:17:39.230-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=48752
2021-02-20T12:17:39.230-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:17:39.269-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:17:39.269-0500
2021-02-20T12:17:39.295-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin721179967 network=unix timestamp=2021-02-20T12:17:39.295-0500
2021-02-20T12:17:39.295-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:17:39 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:17:39.350-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:17:39 [TRACE] GRPCProvider: Close
2021-02-20T12:17:39.379-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:17:39.381-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=48752
2021-02-20T12:17:39.381-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:17:39 [TRACE] terraform.NewContext: complete
2021/02/20 12:17:39 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:17:39 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:17:39 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:17:39 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:17:39 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:17:39 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:17:39 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:17:39 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:17:39 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:17:39 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:17:39 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:17:39 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:17:39 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:17:39 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:17:39 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:17:39 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:17:39 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:17:39 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/02/20 12:17:39 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:17:39 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:17:39 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:17:39 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:17:39 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:17:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:17:39.391-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:17:39.416-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:17:39.421-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=48753
2021-02-20T12:17:39.421-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:17:39.460-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:17:39.460-0500
2021-02-20T12:17:39.485-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin285957852 network=unix timestamp=2021-02-20T12:17:39.485-0500
2021-02-20T12:17:39.485-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:17:39 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:17:39.539-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:17:39 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:17:39 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:17:39 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:17:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:17:39 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:17:39 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:17:39 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:17:39 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:17:39 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:17:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:17:39 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:17:39 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/02/20 12:17:39 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" errored, so skipping
2021/02/20 12:17:39 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021-02-20T12:17:39.606-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:17:39.609-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=48753
2021-02-20T12:17:39.609-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:24:36 [INFO] Terraform version: 0.14.6  
2021/02/20 12:24:36 [INFO] Go runtime version: go1.15.6
2021/02/20 12:24:36 [INFO] CLI args: []string{"/usr/local/bin/terraform", "fmt"}
2021/02/20 12:24:36 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:24:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:24:36 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:24:36 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:24:36 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:24:36 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:24:36 [INFO] CLI command args: []string{"fmt"}
2021/02/20 12:24:36 [TRACE] terraform fmt: looking for files in .
2021/02/20 12:24:36 [TRACE] terraform fmt: Formatting kubernetes.tf
2021/02/20 12:24:38 [INFO] Terraform version: 0.14.6  
2021/02/20 12:24:38 [INFO] Go runtime version: go1.15.6
2021/02/20 12:24:38 [INFO] CLI args: []string{"/usr/local/bin/terraform", "validate"}
2021/02/20 12:24:38 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:24:38 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:24:38 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:24:38 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:24:38 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:24:38 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:24:38 [INFO] CLI command args: []string{"validate"}
2021/02/20 12:24:38 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:24:38 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:24:38 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:24:38 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:24:38 [DEBUG] checking for provisioner in "."
2021/02/20 12:24:38 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:24:38 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:24:38 [TRACE] terraform.NewContext: starting
2021/02/20 12:24:38 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:24:38 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:24:38.603-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:24:38.646-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:24:38.651-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49108
2021-02-20T12:24:38.651-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:24:38.694-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:24:38.694-0500
2021-02-20T12:24:38.720-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:24:38.720-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin296511971 network=unix timestamp=2021-02-20T12:24:38.720-0500
2021-02-20T12:24:38.785-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:24:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:24:38 [TRACE] GRPCProvider: Close
2021-02-20T12:24:38.831-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:24:38.833-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49108
2021-02-20T12:24:38.833-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:24:38 [TRACE] terraform.NewContext: complete
2021/02/20 12:24:38 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:24:38 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:24:38 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:24:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:24:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:24:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:24:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:24:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:24:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:24:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:24:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:24:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:24:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:24:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:24:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:24:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask-app]
2021/02/20 12:24:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:24:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:24:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:38 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:24:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:24:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:24:38.845-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:24:38.870-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:24:38.875-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49109
2021-02-20T12:24:38.875-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:24:38.913-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:24:38.913-0500
2021-02-20T12:24:38.939-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:24:38.939-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin873776912 network=unix timestamp=2021-02-20T12:24:38.939-0500
2021/02/20 12:24:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:24:38.989-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:24:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:24:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:24:39 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:24:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:24:39 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:24:39 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:24:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:39 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:24:39 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:24:39 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:24:39 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:39 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:24:39 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:24:39 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:24:39 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:24:39 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:24:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:24:39 [TRACE] GRPCProvider: Close
2021-02-20T12:24:39.055-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:24:39.057-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49109
2021-02-20T12:24:39.057-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:24:39 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:24:39 [TRACE] dag/walk: visiting "root"
2021/02/20 12:24:39 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:24:39 [TRACE] vertex "root": visit complete
2021/02/20 12:24:52 [INFO] Terraform version: 0.14.6  
2021/02/20 12:24:52 [INFO] Go runtime version: go1.15.6
2021/02/20 12:24:52 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 12:24:52 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:24:52 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:24:52 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:24:52 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:24:52 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:24:52 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:24:52 [INFO] CLI command args: []string{"apply"}
2021/02/20 12:24:52 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:24:52 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:24:52 [DEBUG] New state was assigned lineage "5edf8224-7de5-1cbe-b3b2-68b1b0d798fb"
2021/02/20 12:24:52 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:24:52 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:24:52 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:24:52 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:24:52 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:24:52 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:24:52 [DEBUG] checking for provisioner in "."
2021/02/20 12:24:52 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:24:52 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:24:52 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:24:52 [INFO] backend/local: starting Apply operation
2021/02/20 12:24:52 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:24:52 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:24:52 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:24:52 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021/02/20 12:24:52 [TRACE] statemgr.Filesystem: read nil snapshot
2021/02/20 12:24:52 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:24:52 [TRACE] backend/local: building context for current working directory
2021/02/20 12:24:52 [TRACE] terraform.NewContext: starting
2021/02/20 12:24:52 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:24:52 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:24:52.464-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:24:52.492-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:24:52.497-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49148
2021-02-20T12:24:52.497-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:24:52.536-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:24:52.536-0500
2021-02-20T12:24:52.562-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:24:52.562-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin787615035 network=unix timestamp=2021-02-20T12:24:52.562-0500
2021/02/20 12:24:52 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:24:52.616-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:24:52 [TRACE] GRPCProvider: Close
2021-02-20T12:24:52.649-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:24:52.651-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49148
2021-02-20T12:24:52.651-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:24:52 [TRACE] terraform.NewContext: complete
2021/02/20 12:24:52 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:24:52 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:24:52 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:24:52 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:24:52 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:24:52 [TRACE] backend/local: running validation operation
2021/02/20 12:24:52 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:24:52 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:24:52 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:24:52 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:24:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:24:52 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:24:52 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:24:52 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:24:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:24:52 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:24:52 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask-app]
2021/02/20 12:24:52 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:52 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:24:52 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:24:52.655-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:24:52.679-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:24:52.684-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49149
2021-02-20T12:24:52.684-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:24:52.725-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:24:52.725-0500
2021-02-20T12:24:52.750-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin193043888 network=unix timestamp=2021-02-20T12:24:52.750-0500
2021-02-20T12:24:52.750-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:24:52.802-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:24:52 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:24:52 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:24:52 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:24:52 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:24:52 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:24:52 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:52 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:24:52 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:24:52 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:52 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:24:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:24:52 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:24:52 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:24:52 [TRACE] GRPCProvider: Close
2021-02-20T12:24:52.859-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:24:52.861-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49149
2021-02-20T12:24:52.861-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:24:52 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "root"
2021/02/20 12:24:52 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:24:52 [TRACE] vertex "root": visit complete
2021/02/20 12:24:52 [INFO] backend/local: apply calling Plan
2021/02/20 12:24:52 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:24:52 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:24:52 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:24:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:24:52 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:24:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/02/20 12:24:52 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:24:52 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:24:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:24:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:24:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/02/20 12:24:52 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:24:52 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:24:52 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:24:52 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:24:52 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:24:52 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask-app]
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:24:52 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:24:52 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:52 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:24:52 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:52 [DEBUG] Starting graph walk: walkPlan
2021/02/20 12:24:52 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:24:52 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:24:52.866-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:24:52.890-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:24:52.895-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49150
2021-02-20T12:24:52.895-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:24:52.934-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:24:52.934-0500
2021-02-20T12:24:52.959-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:24:52.959-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin056298757 timestamp=2021-02-20T12:24:52.959-0500
2021/02/20 12:24:53 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:53 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:24:53 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:24:53.012-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:24:53 [TRACE] GRPCProvider: Configure
2021-02-20T12:24:53.043-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:53 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:24:53.043-0500
2021-02-20T12:24:53.045-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:53 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:24:53.045-0500
2021/02/20 12:24:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:24:53 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:24:53 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:24:53 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:24:53 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:24:53 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:24:53 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 12:24:53 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 12:24:53 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 12:24:53 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:24:53 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:53 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:24:53 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 12:24:53 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:24:53 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:24:53 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:24:53 [DEBUG] Resource instance state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:24:53 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:24:53 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:24:53 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:24:53 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/02/20 12:24:53 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask
2021/02/20 12:24:53 [DEBUG] refresh: kubernetes_service.flask: no state, so not refreshing
2021/02/20 12:24:53 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/02/20 12:24:53 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/02/20 12:24:53 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/02/20 12:24:53 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:53 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:24:53 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:24:53 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:24:53 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/02/20 12:24:53 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:24:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:24:53 [TRACE] GRPCProvider: Close
2021/02/20 12:24:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:24:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:24:53.082-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:24:53.084-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49150
2021-02-20T12:24:53.084-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:24:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:24:53 [TRACE] dag/walk: visiting "root"
2021/02/20 12:24:53 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:24:53 [TRACE] vertex "root": visit complete
2021/02/20 12:24:53 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 12:24:55 [INFO] backend/local: apply calling Apply
2021/02/20 12:24:55 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:24:55 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:24:55 [TRACE] DiffTransformer starting
2021/02/20 12:24:55 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 12:24:55 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 12:24:55 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask 
2021/02/20 12:24:55 [TRACE] DiffTransformer: kubernetes_service.flask will be represented by kubernetes_service.flask
2021/02/20 12:24:55 [TRACE] DiffTransformer complete
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:24:55 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 12:24:55 [DEBUG] Resource state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-45
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:58,1-38
2021/02/20 12:24:55 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:24:55 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:24:55 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:24:55 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:55 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/02/20 12:24:55 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:55 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:24:55 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:55 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:24:55 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:24:55 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:24:55 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:24:55 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/02/20 12:24:55 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:24:55 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:24:55 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:24:55 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:24:55 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/02/20 12:24:55 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:24:55 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 12:24:55 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:24:55 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:24:55 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask-app]
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:24:55 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:24:55 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:55 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:24:55 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:24:55 [DEBUG] Starting graph walk: walkApply
2021/02/20 12:24:55 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:24:55 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:24:55.985-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:24:56.015-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:24:56.021-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49152
2021-02-20T12:24:56.021-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:24:56.060-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:24:56.059-0500
2021-02-20T12:24:56.085-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:24:56.085-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin502035807 network=unix timestamp=2021-02-20T12:24:56.085-0500
2021/02/20 12:24:56 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:24:56.138-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:24:56 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:24:56 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:24:56 [TRACE] GRPCProvider: Configure
2021-02-20T12:24:56.168-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:24:56.168-0500
2021-02-20T12:24:56.169-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:24:56.169-0500
2021/02/20 12:24:56 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:24:56 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/02/20 12:24:56 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:24:56 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:24:56 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/02/20 12:24:56 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 12:24:56 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:24:56 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:24:56 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:24:56 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 12:24:56 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 12:24:56 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:24:56 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 12:24:56 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:24:56.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T12:24:56.191-0500
2021-02-20T12:24:56.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:24:56.191-0500
2021-02-20T12:24:56.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:24:56.191-0500
2021-02-20T12:24:56.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:24:56.191-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:24:56.192-0500
2021-02-20T12:24:56.193-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:24:56.193-0500
2021-02-20T12:24:56.193-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:24:56.193-0500
2021-02-20T12:24:56.193-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:24:56.193-0500
2021-02-20T12:24:56.193-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T12:24:56.193-0500
2021-02-20T12:24:56.194-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000399cfc), Selector:(*v1.LabelSelector)(0xc0005a1480), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000399d10), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000399d04), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000399d09), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000399d08), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000399d00), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000399cf8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:24:56.194-0500
2021-02-20T12:24:56.196-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:24:56 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 873
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "ScalableNginxExample"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:24:56.196-0500
2021/02/20 12:24:56 [DEBUG] kubernetes_deployment.flask-app: apply errored, but we're indicating that via the Error pointer rather than returning it: Failed to create deployment: Post "https://127.0.0.1:59980/apis/apps/v1/namespaces/default/deployments": dial tcp 127.0.0.1:59980: connect: connection refused
2021/02/20 12:24:56 [TRACE] EvalMaybeTainted: kubernetes_deployment.flask-app encountered an error during creation, so it is now marked as tainted
2021/02/20 12:24:56 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] EvalApplyProvisioners: kubernetes_deployment.flask-app has no state, so skipping provisioners
2021/02/20 12:24:56 [TRACE] EvalMaybeTainted: kubernetes_deployment.flask-app encountered an error during creation, so it is now marked as tainted
2021/02/20 12:24:56 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 12:24:56 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:24:56 [TRACE] dag/walk: upstream of "kubernetes_service.flask" errored, so skipping
2021/02/20 12:24:56 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/02/20 12:24:56 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" errored, so skipping
2021/02/20 12:24:56 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: read nil snapshot
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: no original state snapshot to back up
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 1
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:24:56 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-02-20T12:24:56.230-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:24:56.234-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49152
2021-02-20T12:24:56.234-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:25:37 [INFO] Terraform version: 0.14.6  
2021/02/20 12:25:37 [INFO] Go runtime version: go1.15.6
2021/02/20 12:25:37 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 12:25:37 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:25:37 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:25:37 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:25:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:25:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:25:37 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:25:37 [INFO] CLI command args: []string{"apply"}
2021/02/20 12:25:37 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:25:37 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:25:37 [DEBUG] New state was assigned lineage "d2c64318-2dd4-2fdd-90b3-8b8f221e6b85"
2021/02/20 12:25:37 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:25:37 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:25:37 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:25:37 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:25:37 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:25:37 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:25:38 [DEBUG] checking for provisioner in "."
2021/02/20 12:25:38 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:25:38 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:25:38 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:25:38 [INFO] backend/local: starting Apply operation
2021/02/20 12:25:38 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:25:38 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:25:38 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:25:38 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:25:38 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 1
2021/02/20 12:25:38 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:25:38 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:25:38 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:25:38 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:25:38 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 1
2021/02/20 12:25:38 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:25:38 [TRACE] backend/local: building context for current working directory
2021/02/20 12:25:38 [TRACE] terraform.NewContext: starting
2021/02/20 12:25:38 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:25:38 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:25:38.177-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:25:38.212-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:25:38.217-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49258
2021-02-20T12:25:38.217-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:25:38.261-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:25:38.261-0500
2021-02-20T12:25:38.290-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin981771153 network=unix timestamp=2021-02-20T12:25:38.290-0500
2021-02-20T12:25:38.290-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:25:38.352-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:25:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:25:38 [TRACE] GRPCProvider: Close
2021-02-20T12:25:38.391-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:25:38.393-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49258
2021-02-20T12:25:38.393-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:25:38 [TRACE] terraform.NewContext: complete
2021/02/20 12:25:38 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:25:38 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:25:38 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:25:38 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:25:38 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:25:38 [TRACE] backend/local: running validation operation
2021/02/20 12:25:38 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:25:38 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:25:38 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:25:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:25:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:25:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:25:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:25:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask-app]
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:25:38 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:25:38.402-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:25:38.428-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:25:38.433-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49259
2021-02-20T12:25:38.433-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:25:38.477-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:25:38.477-0500
2021-02-20T12:25:38.505-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin474478446 network=unix timestamp=2021-02-20T12:25:38.505-0500
2021-02-20T12:25:38.505-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:25:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:25:38.556-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:25:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:25:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:25:38 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:25:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:25:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:25:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:25:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:25:38 [TRACE] GRPCProvider: Close
2021-02-20T12:25:38.621-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:25:38.623-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49259
2021-02-20T12:25:38.623-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "root"
2021/02/20 12:25:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:25:38 [TRACE] vertex "root": visit complete
2021/02/20 12:25:38 [INFO] backend/local: apply calling Plan
2021/02/20 12:25:38 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:25:38 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:25:38 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:25:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:25:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:25:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:25:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/02/20 12:25:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:25:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:25:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/02/20 12:25:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:25:38 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:25:38 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask-app]
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:25:38 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:25:38 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:25:38 [DEBUG] Starting graph walk: walkPlan
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:25:38.625-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:25:38.649-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:25:38.655-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49260
2021-02-20T12:25:38.655-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:25:38.704-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:25:38.703-0500
2021-02-20T12:25:38.733-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin015370339 timestamp=2021-02-20T12:25:38.732-0500
2021-02-20T12:25:38.733-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:25:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:25:38.786-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:25:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:25:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:25:38 [TRACE] GRPCProvider: Configure
2021-02-20T12:25:38.826-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:38 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:25:38.826-0500
2021-02-20T12:25:38.828-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:38 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:25:38.828-0500
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:25:38 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:25:38 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:25:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:25:38 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 12:25:38 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:25:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:25:38 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:25:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 12:25:38 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:25:38 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:25:38 [DEBUG] Resource instance state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:25:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:25:38 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:25:38 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:25:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask
2021/02/20 12:25:38 [DEBUG] refresh: kubernetes_service.flask: no state, so not refreshing
2021/02/20 12:25:38 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/02/20 12:25:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:25:38 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:25:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:25:38 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/02/20 12:25:38 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:25:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:25:38 [TRACE] GRPCProvider: Close
2021/02/20 12:25:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:25:38.854-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:25:38.856-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49260
2021-02-20T12:25:38.856-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:25:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:25:38 [TRACE] dag/walk: visiting "root"
2021/02/20 12:25:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:25:38 [TRACE] vertex "root": visit complete
2021/02/20 12:25:38 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 12:25:42 [INFO] backend/local: apply calling Apply
2021/02/20 12:25:42 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:25:42 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:25:42 [TRACE] DiffTransformer starting
2021/02/20 12:25:42 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 12:25:42 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask 
2021/02/20 12:25:42 [TRACE] DiffTransformer: kubernetes_service.flask will be represented by kubernetes_service.flask
2021/02/20 12:25:42 [TRACE] DiffTransformer complete
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:25:42 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 12:25:42 [DEBUG] Resource state not found for node "kubernetes_service.flask", instance kubernetes_service.flask
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-45
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:58,1-38
2021/02/20 12:25:42 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:25:42 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:25:42 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/02/20 12:25:42 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:42 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:25:42 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:42 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:25:42 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:42 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:25:42 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:25:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:25:42 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:25:42 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:25:42 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:42 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:25:42 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/02/20 12:25:42 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:25:42 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:25:42 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 12:25:42 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:25:42 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:25:42 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask-app]
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:25:42 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:25:42 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:25:42 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:25:42 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:25:42 [DEBUG] Starting graph walk: walkApply
2021/02/20 12:25:42 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:25:42 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:25:42.102-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:25:42.132-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:25:42.139-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49262
2021-02-20T12:25:42.139-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:25:42.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:25:42.190-0500
2021-02-20T12:25:42.225-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:25:42.225-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin119033773 network=unix timestamp=2021-02-20T12:25:42.225-0500
2021/02/20 12:25:42 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:25:42 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:25:42 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:25:42.291-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:25:42 [TRACE] GRPCProvider: Configure
2021-02-20T12:25:42.329-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:25:42.329-0500
2021-02-20T12:25:42.331-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:25:42.331-0500
2021/02/20 12:25:42 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:25:42 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:25:42 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:25:42 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:25:42 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:25:42 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/02/20 12:25:42 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/02/20 12:25:42 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:25:42 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:25:42 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:25:42 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 12:25:42 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 12:25:42 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:25:42 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:25:42 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:25:42 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 12:25:42 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:25:42.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:25:42.356-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.357-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:25:42.357-0500
2021-02-20T12:25:42.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:25:42.358-0500
2021-02-20T12:25:42.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:25:42.358-0500
2021-02-20T12:25:42.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:25:42.358-0500
2021-02-20T12:25:42.360-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0009638ec), Selector:(*v1.LabelSelector)(0xc0004d60a0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000963900), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0009638f4), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0009638f9), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0009638f8), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0009638f0), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0009638e8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:25:42.360-0500
2021-02-20T12:25:42.361-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 873
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "ScalableNginxExample"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:42.361-0500
2021-02-20T12:25:42.397-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:42 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:42.397-0500
2021-02-20T12:25:42.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Waiting for deployment default/scalable-flask-app to schedule 2 replicas: timestamp=2021-02-20T12:25:42.403-0500
2021-02-20T12:25:42.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [INFO] Waiting for deployment default/scalable-flask-app to rollout: timestamp=2021-02-20T12:25:42.403-0500
2021-02-20T12:25:42.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T12:25:42.403-0500
2021-02-20T12:25:42.403-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:25:42.403-0500
2021-02-20T12:25:42.416-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:42 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:42.415-0500
2021-02-20T12:25:42.416-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T12:25:42.415-0500
2021-02-20T12:25:42.918-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:25:42.918-0500
2021-02-20T12:25:42.926-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:42 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:42.925-0500
2021-02-20T12:25:42.926-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:42 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T12:25:42.926-0500
2021-02-20T12:25:43.930-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:43 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:25:43.929-0500
2021-02-20T12:25:43.936-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:43 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:43 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:43.936-0500
2021-02-20T12:25:43.936-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:43 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T12:25:43.936-0500
2021-02-20T12:25:45.937-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:45 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:25:45.937-0500
2021-02-20T12:25:45.942-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:45 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:45 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:45.942-0500
2021-02-20T12:25:45.942-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:45 [TRACE] Waiting 4s before next try: timestamp=2021-02-20T12:25:45.942-0500
2021/02/20 12:25:47 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:25:47 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:25:47 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:25:47 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021-02-20T12:25:49.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:49 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:25:49.945-0500
2021-02-20T12:25:49.953-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:49 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:49 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:49.951-0500
2021-02-20T12:25:49.954-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:49 [TRACE] Waiting 8s before next try: timestamp=2021-02-20T12:25:49.951-0500
2021/02/20 12:25:52 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:25:52 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:25:52 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:25:52 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:25:57 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:25:57 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:25:57 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:25:57 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021-02-20T12:25:57.953-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:25:57.953-0500
2021-02-20T12:25:57.962-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:25:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:25:57.962-0500
2021-02-20T12:25:57.962-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:25:57 [TRACE] Waiting 10s before next try: timestamp=2021-02-20T12:25:57.962-0500
2021/02/20 12:26:02 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:26:02 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:02 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:26:02 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:07 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:26:07 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:07 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:07 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021-02-20T12:26:07.967-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:07 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:07.967-0500
2021-02-20T12:26:07.974-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:07 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:07 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20470",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:07.974-0500
2021-02-20T12:26:07.974-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:07 [TRACE] Waiting 10s before next try: timestamp=2021-02-20T12:26:07.974-0500
2021/02/20 12:26:12 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:12 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:26:12 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:26:12 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:17 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:26:17 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:17 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:26:17 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021-02-20T12:26:17.975-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:17 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:17.975-0500
2021-02-20T12:26:17.980-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:17 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3480
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:17 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20600",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:09Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T17:26:09Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:09Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:17.980-0500
2021-02-20T12:26:17.980-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:17 [TRACE] Waiting 10s before next try: timestamp=2021-02-20T12:26:17.980-0500
2021/02/20 12:26:22 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021/02/20 12:26:22 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:22 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:22 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:26:27 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 12:26:27 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:27 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_service.flask"
2021/02/20 12:26:27 [TRACE] dag/walk: vertex "kubernetes_service.flask" is waiting for "kubernetes_deployment.flask-app"
2021-02-20T12:26:27.981-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:27.981-0500
2021-02-20T12:26:27.989-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:28 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:27.989-0500
2021-02-20T12:26:27.990-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"526b0f37-d4a1-43a1-95e1-136fbb53c518", ResourceVersion:"20470", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438742, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0011f4e40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011f4e60)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0011de978), Selector:(*v1.LabelSelector)(0xc0011f4e80), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0011dea70), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0011dea78), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0011dea79), SecurityContext:(*v1.PodSecurityContext)(0xc00002c930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0011dea7a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0011eacc0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0011dead4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0011dead8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:26:27.989-0500
2021-02-20T12:26:27.990-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [INFO] Checking deployment scalable-flask-app: timestamp=2021-02-20T12:26:27.990-0500
2021-02-20T12:26:27.991-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:27.991-0500
2021-02-20T12:26:27.996-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:28 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:27.996-0500
2021-02-20T12:26:27.997-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [INFO] Reading deployment scalable-flask-app: timestamp=2021-02-20T12:26:27.997-0500
2021-02-20T12:26:27.997-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:27 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:27.997-0500
2021-02-20T12:26:28.002-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:28 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:28.002-0500
2021-02-20T12:26:28.003-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"526b0f37-d4a1-43a1-95e1-136fbb53c518", ResourceVersion:"20637", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438742, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000f04100), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f04120)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000f04140), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f04160)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0008baef0), Selector:(*v1.LabelSelector)(0xc000f04180), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0008bb000), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0008bb008), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0008bb009), SecurityContext:(*v1.PodSecurityContext)(0xc0004ce690), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0008bb00a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000f4f190)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0008bb0b4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0008bb0b8)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438769, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:26:28.002-0500
2021/02/20 12:26:28 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 12:26:28 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:26:28 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:26:28 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:26:28 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 2
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:26:28 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:26:28 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:26:28 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 12:26:28 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalReadState: reading state for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalReadState: no state present for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/02/20 12:26:28 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:26:28 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:26:28 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:26:28 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 12:26:28 [TRACE] EvalReadState: reading state for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalReadState: no state present for kubernetes_service.flask
2021/02/20 12:26:28 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:26:28 [DEBUG] kubernetes_service.flask: applying the planned Create change
2021/02/20 12:26:28 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:26:28.060-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T12:26:28.060-0500
2021-02-20T12:26:28.061-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:26:28.061-0500
2021-02-20T12:26:28.062-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 311
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:28.062-0500
2021-02-20T12:26:28.082-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:28 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:28.082-0500
2021-02-20T12:26:28.083-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9022167a-6c6f-4d4f-96da-4a012d2b1c2d", ResourceVersion:"20662", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438788, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001169d60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001169d80)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.123.126", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:26:28.083-0500
2021-02-20T12:26:28.083-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [INFO] Checking service flask-app: timestamp=2021-02-20T12:26:28.083-0500
2021-02-20T12:26:28.083-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:28.083-0500
2021-02-20T12:26:28.094-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:28 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:28.093-0500
2021-02-20T12:26:28.094-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [INFO] Reading service flask-app: timestamp=2021-02-20T12:26:28.094-0500
2021-02-20T12:26:28.094-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:26:28.094-0500
2021-02-20T12:26:28.099-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:26:28 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:26:28.099-0500
2021-02-20T12:26:28.099-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9022167a-6c6f-4d4f-96da-4a012d2b1c2d", ResourceVersion:"20662", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438788, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0002856e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000285700)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.123.126", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:26:28.099-0500
2021-02-20T12:26:28.099-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:26:28 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.123.126", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T12:26:28.099-0500
2021/02/20 12:26:28 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 12:26:28 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:26:28 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:26:28 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:26:28 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:26:28 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:26:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:26:28 [TRACE] GRPCProvider: Close
2021/02/20 12:26:28 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:26:28.144-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:26:28.148-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49262
2021-02-20T12:26:28.148-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:26:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:26:28 [TRACE] dag/walk: visiting "root"
2021/02/20 12:26:28 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:26:28 [TRACE] vertex "root": visit complete
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 4
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:26:28 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 12:27:33 [INFO] Terraform version: 0.14.6  
2021/02/20 12:27:33 [INFO] Go runtime version: go1.15.6
2021/02/20 12:27:33 [INFO] CLI args: []string{"/usr/local/bin/terraform", "show"}
2021/02/20 12:27:33 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:27:33 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:27:33 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:27:33 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:27:33 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:27:33 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:27:33 [INFO] CLI command args: []string{"show"}
2021/02/20 12:27:33 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:27:33 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:27:33 [DEBUG] New state was assigned lineage "98ef8c5f-8e2f-2c7a-58fc-b1093b801d3d"
2021/02/20 12:27:33 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:27:33 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:27:33 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:27:33 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:27:33 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:27:33 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:27:33 [DEBUG] checking for provisioner in "."
2021/02/20 12:27:33 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:27:33 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:27:33 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:27:33 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:27:33 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:27:33 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:27:33 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:27:33 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 12:27:33 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:27:33 [DEBUG] backend/local: skipping refresh of managed resources
2021/02/20 12:27:33 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:27:33 [TRACE] backend/local: building context for current working directory
2021/02/20 12:27:33 [TRACE] terraform.NewContext: starting
2021/02/20 12:27:33 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:27:33 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:27:33.835-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:27:33.868-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:27:33.874-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49352
2021-02-20T12:27:33.874-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:27:33.915-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:27:33.915-0500
2021-02-20T12:27:33.941-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin069406383 network=unix timestamp=2021-02-20T12:27:33.941-0500
2021-02-20T12:27:33.941-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:27:34 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:27:34.012-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:27:34 [TRACE] GRPCProvider: Close
2021-02-20T12:27:34.049-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:27:34.052-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49352
2021-02-20T12:27:34.052-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:27:34 [TRACE] terraform.NewContext: complete
2021/02/20 12:27:34 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:27:34 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 12:27:34 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:28:37 [INFO] Terraform version: 0.14.6  
2021/02/20 12:28:37 [INFO] Go runtime version: go1.15.6
2021/02/20 12:28:37 [INFO] CLI args: []string{"/usr/local/bin/terraform", "show", "list"}
2021/02/20 12:28:37 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:28:37 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:28:37 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:28:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:28:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:28:37 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:28:37 [INFO] CLI command args: []string{"show", "list"}
2021/02/20 12:28:37 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:28:37 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:28:37 [DEBUG] New state was assigned lineage "df1e1e84-db3f-361a-7e0d-bd74636ecfd1"
2021/02/20 12:28:37 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:28:37 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:28:37 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:28:37 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:28:37 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:28:37 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:28:37 [DEBUG] checking for provisioner in "."
2021/02/20 12:28:37 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:28:37 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:28:37 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:28:37 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:28:37 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:28:37 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:28:37 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:28:37 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 12:28:37 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:28:37 [DEBUG] backend/local: skipping refresh of managed resources
2021/02/20 12:28:37 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:28:37 [TRACE] backend/local: building context for current working directory
2021/02/20 12:28:37 [TRACE] terraform.NewContext: starting
2021/02/20 12:28:37 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:28:37 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:28:37.763-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:28:37.803-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:28:37.808-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49403
2021-02-20T12:28:37.808-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:28:37.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:28:37.851-0500
2021-02-20T12:28:37.877-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin075669838 network=unix timestamp=2021-02-20T12:28:37.877-0500
2021-02-20T12:28:37.877-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:28:37 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:28:37.942-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:28:37 [TRACE] GRPCProvider: Close
2021-02-20T12:28:37.982-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:28:37.985-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49403
2021-02-20T12:28:37.985-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:28:37 [TRACE] terraform.NewContext: complete
2021/02/20 12:28:37 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:28:48 [INFO] Terraform version: 0.14.6  
2021/02/20 12:28:48 [INFO] Go runtime version: go1.15.6
2021/02/20 12:28:48 [INFO] CLI args: []string{"/usr/local/bin/terraform", "list"}
2021/02/20 12:28:48 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:28:48 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:28:48 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:28:48 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:28:48 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:28:48 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:28:48 [INFO] CLI command args: []string{"list"}
2021/02/20 12:28:58 [INFO] Terraform version: 0.14.6  
2021/02/20 12:28:58 [INFO] Go runtime version: go1.15.6
2021/02/20 12:28:58 [INFO] CLI args: []string{"/usr/local/bin/terraform", "terraform", "kuber", "show"}
2021/02/20 12:28:58 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:28:58 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:28:58 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:28:58 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:28:58 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:28:58 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:28:58 [INFO] CLI command args: []string{"terraform", "kuber", "show"}
2021/02/20 12:29:27 [INFO] Terraform version: 0.14.6  
2021/02/20 12:29:27 [INFO] Go runtime version: go1.15.6
2021/02/20 12:29:27 [INFO] CLI args: []string{"/usr/local/bin/terraform", "show", "kubernetes_deployment.flask-app"}
2021/02/20 12:29:27 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:29:27 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:29:27 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:29:27 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:29:27 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:29:27 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:29:27 [INFO] CLI command args: []string{"show", "kubernetes_deployment.flask-app"}
2021/02/20 12:29:27 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:29:27 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:29:27 [DEBUG] New state was assigned lineage "3fde2f86-c83c-f20f-c49a-9d2d3721b1db"
2021/02/20 12:29:27 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:29:27 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:29:27 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:29:27 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:29:27 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:29:27 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:29:27 [DEBUG] checking for provisioner in "."
2021/02/20 12:29:27 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:29:27 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:29:27 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:29:27 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:29:27 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:29:27 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:29:27 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:29:27 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 12:29:27 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:29:27 [DEBUG] backend/local: skipping refresh of managed resources
2021/02/20 12:29:27 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:29:27 [TRACE] backend/local: building context for current working directory
2021/02/20 12:29:27 [TRACE] terraform.NewContext: starting
2021/02/20 12:29:27 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:29:27 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:29:27.851-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:29:27.876-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:29:27.881-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49488
2021-02-20T12:29:27.882-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:29:27.923-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:29:27.922-0500
2021-02-20T12:29:27.949-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin957684535 network=unix timestamp=2021-02-20T12:29:27.949-0500
2021-02-20T12:29:27.949-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:29:28 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:29:28.010-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:29:28 [TRACE] GRPCProvider: Close
2021-02-20T12:29:28.044-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:29:28.048-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49488
2021-02-20T12:29:28.048-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:29:28 [TRACE] terraform.NewContext: complete
2021/02/20 12:29:28 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:29:40 [INFO] Terraform version: 0.14.6  
2021/02/20 12:29:40 [INFO] Go runtime version: go1.15.6
2021/02/20 12:29:40 [INFO] CLI args: []string{"/usr/local/bin/terraform", "state", "kubernetes_deployment.flask-app"}
2021/02/20 12:29:40 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:29:40 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:29:40 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:29:40 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:29:40 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:29:40 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:29:40 [INFO] CLI command args: []string{"state", "kubernetes_deployment.flask-app"}
2021/02/20 12:29:52 [INFO] Terraform version: 0.14.6  
2021/02/20 12:29:52 [INFO] Go runtime version: go1.15.6
2021/02/20 12:29:52 [INFO] CLI args: []string{"/usr/local/bin/terraform", "state", "flask-app"}
2021/02/20 12:29:52 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:29:52 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:29:52 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:29:52 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:29:52 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:29:52 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:29:52 [INFO] CLI command args: []string{"state", "flask-app"}
2021/02/20 12:30:31 [INFO] Terraform version: 0.14.6  
2021/02/20 12:30:31 [INFO] Go runtime version: go1.15.6
2021/02/20 12:30:31 [INFO] CLI args: []string{"/usr/local/bin/terraform", "state", "list"}
2021/02/20 12:30:31 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:30:31 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:30:31 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:30:31 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:30:31 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:30:31 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:30:31 [INFO] CLI command args: []string{"state", "list"}
2021/02/20 12:30:31 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:30:31 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:30:31 [DEBUG] New state was assigned lineage "2aef99fc-c798-2f85-f175-ea91bb02e0c2"
2021/02/20 12:30:31 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:30:31 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:30:31 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:30:31 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:30:31 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:30:31 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:30:31 [DEBUG] checking for provisioner in "."
2021/02/20 12:30:31 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:30:31 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:30:31 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:30:31 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:30:31 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 12:30:31 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:33:11 [INFO] Terraform version: 0.14.6  
2021/02/20 12:33:11 [INFO] Go runtime version: go1.15.6
2021/02/20 12:33:11 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 12:33:11 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:33:11 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:33:11 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:33:11 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:33:11 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:33:11 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:33:11 [INFO] CLI command args: []string{"apply"}
2021/02/20 12:33:11 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:33:11 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:33:11 [DEBUG] New state was assigned lineage "6aded09f-417d-a7a0-3170-45ef7fde6159"
2021/02/20 12:33:11 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:33:11 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:33:11 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:33:11 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:33:11 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:33:11 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:33:11 [DEBUG] checking for provisioner in "."
2021/02/20 12:33:11 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:33:11 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:33:11 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:33:11 [INFO] backend/local: starting Apply operation
2021/02/20 12:33:11 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:33:11 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:33:11 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:33:11 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:33:11 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:33:11 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:33:11 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:33:11 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:33:11 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:33:11 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 4
2021/02/20 12:33:11 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:33:11 [TRACE] backend/local: building context for current working directory
2021/02/20 12:33:11 [TRACE] terraform.NewContext: starting
2021/02/20 12:33:11 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:33:11 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:33:11.202-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:33:11.237-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:33:11.243-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49823
2021-02-20T12:33:11.243-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:33:11.284-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:33:11.284-0500
2021-02-20T12:33:11.310-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin143593130 network=unix timestamp=2021-02-20T12:33:11.310-0500
2021-02-20T12:33:11.310-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:33:11 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:33:11.373-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:33:11 [TRACE] GRPCProvider: Close
2021-02-20T12:33:11.411-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:33:11.413-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49823
2021-02-20T12:33:11.413-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:33:11 [TRACE] terraform.NewContext: complete
2021/02/20 12:33:11 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:33:11 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:33:11 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:33:11 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:33:11 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:33:11 [TRACE] backend/local: running validation operation
2021/02/20 12:33:11 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:33:11 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:33:11 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:33:11 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:33:11 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:33:11 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask
2021/02/20 12:33:11 [DEBUG] ProviderTransformer: "kubernetes_service.flask" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: [kubernetes_deployment.flask-app]
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:33:11 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:33:11.423-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:33:11.446-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:33:11.452-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49824
2021-02-20T12:33:11.452-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:33:11.492-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:33:11.491-0500
2021-02-20T12:33:11.517-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin154525119 network=unix timestamp=2021-02-20T12:33:11.517-0500
2021-02-20T12:33:11.517-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:33:11 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:33:11.571-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:33:11 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:33:11 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:33:11 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:33:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:33:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:33:11 [TRACE] GRPCProvider: Close
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:33:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:33:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:33:11.632-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:33:11.635-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49824
2021-02-20T12:33:11.635-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "root"
2021/02/20 12:33:11 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:33:11 [TRACE] vertex "root": visit complete
2021/02/20 12:33:11 [INFO] backend/local: apply calling Plan
2021/02/20 12:33:11 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:33:11 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:33:11 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:33:11 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:33:11 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:33:11 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/02/20 12:33:11 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:33:11 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:33:11 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask depends on [kubernetes_deployment.flask-app]
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:33:11 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:33:11 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:33:11 [DEBUG] Starting graph walk: walkPlan
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:33:11.636-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:33:11.659-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:33:11.664-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49825
2021-02-20T12:33:11.664-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:33:11.703-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:33:11.703-0500
2021-02-20T12:33:11.729-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin094477020 timestamp=2021-02-20T12:33:11.729-0500
2021-02-20T12:33:11.729-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:33:11 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:33:11.781-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:33:11 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:33:11 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:33:11 [TRACE] GRPCProvider: Configure
2021-02-20T12:33:11.811-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:33:11.811-0500
2021-02-20T12:33:11.813-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:33:11.812-0500
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:33:11 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:33:11 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:33:11 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:33:11 [TRACE] GRPCProvider: ReadResource
2021-02-20T12:33:11.825-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [INFO] Checking deployment scalable-flask-app: timestamp=2021-02-20T12:33:11.825-0500
2021-02-20T12:33:11.825-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:33:11.825-0500
2021-02-20T12:33:11.841-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:33:11 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:33:11.841-0500
2021-02-20T12:33:11.845-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [INFO] Reading deployment scalable-flask-app: timestamp=2021-02-20T12:33:11.845-0500
2021-02-20T12:33:11.845-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:33:11.845-0500
2021-02-20T12:33:11.849-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:33:11 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:33:11.849-0500
2021-02-20T12:33:11.850-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"526b0f37-d4a1-43a1-95e1-136fbb53c518", ResourceVersion:"20637", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438742, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000acbd40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000acbd60)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000acbd80), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000acbda0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0004326e0), Selector:(*v1.LabelSelector)(0xc000acbdc0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000432990), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000432998), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000432999), SecurityContext:(*v1.PodSecurityContext)(0xc00048dce0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00043299a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0005fac20)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000432a54), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000432a58)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438769, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:33:11.850-0500
2021/02/20 12:33:11 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app during refresh.
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
2021/02/20 12:33:11 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:33:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:33:11 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:33:11 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/02/20 12:33:11 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask-app
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_service.flask (expand)"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask (expand)": expanding dynamic subgraph
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask (expand)": entering dynamic subgraph
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": expanding dynamic subgraph
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:33:11 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask as *terraform.NodePlannableResourceInstance
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_service.flask" references: []
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": entering dynamic subgraph
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "kubernetes_service.flask"
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:33:11 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:33:11 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:33:11 [TRACE] GRPCProvider: ReadResource
2021-02-20T12:33:11.872-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [INFO] Checking service flask-app: timestamp=2021-02-20T12:33:11.872-0500
2021-02-20T12:33:11.872-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:33:11.872-0500
2021-02-20T12:33:11.876-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:33:11 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:33:11.876-0500
2021-02-20T12:33:11.877-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [INFO] Reading service flask-app: timestamp=2021-02-20T12:33:11.877-0500
2021-02-20T12:33:11.877-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:33:11.877-0500
2021-02-20T12:33:11.883-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:33:11 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:33:11.883-0500
2021-02-20T12:33:11.884-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9022167a-6c6f-4d4f-96da-4a012d2b1c2d", ResourceVersion:"20662", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438788, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0011f24e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011f2500)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.123.126", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:33:11.884-0500
2021-02-20T12:33:11.884-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:11 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.123.126", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T12:33:11.884-0500
2021/02/20 12:33:11 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask during refresh.
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
      - .metadata[0].labels: was null, but now cty.MapValEmpty(cty.String)
      - .spec[0].external_ips: was null, but now cty.SetValEmpty(cty.String)
      - .spec[0].load_balancer_source_ranges: was null, but now cty.SetValEmpty(cty.String)
2021/02/20 12:33:11 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] Re-validating config for "kubernetes_service.flask"
2021/02/20 12:33:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:33:11 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:33:11 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": dynamic subgraph completed successfully
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask": visit complete
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask (expand)": dynamic subgraph completed successfully
2021/02/20 12:33:11 [TRACE] vertex "kubernetes_service.flask (expand)": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:33:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:33:11 [TRACE] GRPCProvider: Close
2021/02/20 12:33:11 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:33:11.888-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:33:11.890-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49825
2021-02-20T12:33:11.890-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "root"
2021/02/20 12:33:11 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:33:11 [TRACE] vertex "root": visit complete
2021/02/20 12:33:11 [INFO] backend/local: apply calling Apply
2021/02/20 12:33:11 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:33:11 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:33:11 [TRACE] DiffTransformer starting
2021/02/20 12:33:11 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask-app 
2021/02/20 12:33:11 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask 
2021/02/20 12:33:11 [TRACE] DiffTransformer complete
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.DiffTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-38
2021/02/20 12:33:11 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask (expand)
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:33:11 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:33:11 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (expand)
2021/02/20 12:33:11 [DEBUG] ProviderTransformer: "kubernetes_service.flask (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:33:11 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:33:11 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (expand)
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:33:11 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (expand)" references: []
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:33:11 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:33:11 [DEBUG] pruneUnusedNodes: kubernetes_service.flask (expand) is no longer needed, removing
2021/02/20 12:33:11 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:33:11 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:33:11 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2021/02/20 12:33:11 [DEBUG] Starting graph walk: walkApply
2021/02/20 12:33:11 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:33:11 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:33:11.893-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:33:11.917-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:33:11.922-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49826
2021-02-20T12:33:11.922-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:33:11.961-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:33:11.961-0500
2021-02-20T12:33:11.986-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin834781865 network=unix timestamp=2021-02-20T12:33:11.986-0500
2021-02-20T12:33:11.986-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:33:12 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:33:12.036-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:33:12 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:33:12 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:33:12 [TRACE] GRPCProvider: Configure
2021-02-20T12:33:12.067-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:12 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:33:12.067-0500
2021-02-20T12:33:12.068-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:33:12 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:33:12.068-0500
2021/02/20 12:33:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:33:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:33:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:33:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:33:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:33:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:33:12 [TRACE] GRPCProvider: Close
2021-02-20T12:33:12.069-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:33:12.070-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49826
2021-02-20T12:33:12.070-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:33:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:33:12 [TRACE] dag/walk: visiting "root"
2021/02/20 12:33:12 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:33:12 [TRACE] vertex "root": visit complete
2021/02/20 12:33:12 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 12:33:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 5
2021/02/20 12:33:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:33:12 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:33:12 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 12:34:22 [INFO] Terraform version: 0.14.6  
2021/02/20 12:34:22 [INFO] Go runtime version: go1.15.6
2021/02/20 12:34:22 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 12:34:22 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:34:22 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:34:22 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:34:22 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:34:22 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:34:22 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:34:22 [INFO] CLI command args: []string{"apply"}
2021/02/20 12:34:22 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:34:22 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:34:22 [DEBUG] New state was assigned lineage "f96d7c20-308e-090b-63db-2b2c6b9a892b"
2021/02/20 12:34:22 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:34:22 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:34:22 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:34:22 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:34:22 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:34:22 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:34:22 [DEBUG] checking for provisioner in "."
2021/02/20 12:34:22 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:34:22 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:34:22 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:34:22 [INFO] backend/local: starting Apply operation
2021/02/20 12:34:22 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:34:22 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:34:22 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:34:22 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:34:22 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 5
2021/02/20 12:34:22 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:34:22 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:34:22 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:34:22 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:34:22 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 5
2021/02/20 12:34:22 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:34:22 [TRACE] backend/local: building context for current working directory
2021/02/20 12:34:22 [TRACE] terraform.NewContext: starting
2021/02/20 12:34:22 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:34:22 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:34:22.578-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:22.604-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:22.608-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49892
2021-02-20T12:34:22.608-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:22.651-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:22.651-0500
2021-02-20T12:34:22.677-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:34:22.677-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin130295739 network=unix timestamp=2021-02-20T12:34:22.677-0500
2021/02/20 12:34:22 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:34:22.737-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:22 [TRACE] GRPCProvider: Close
2021-02-20T12:34:22.772-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:22.775-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49892
2021-02-20T12:34:22.775-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:22 [TRACE] terraform.NewContext: complete
2021/02/20 12:34:22 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:34:22 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:34:22 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:34:22 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:34:22 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:34:22 [TRACE] backend/local: running validation operation
2021/02/20 12:34:22 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:34:22 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:34:22 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:34:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:34:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 12:34:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:34:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:22 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:34:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:34:22.778-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:22.802-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:22.809-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49893
2021-02-20T12:34:22.809-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:22.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:22.851-0500
2021-02-20T12:34:22.876-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin537125408 network=unix timestamp=2021-02-20T12:34:22.876-0500
2021-02-20T12:34:22.876-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:34:22.928-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:22 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:34:22 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:34:22 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:34:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:34:22 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:34:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:22 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:34:22 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:34:22 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:22 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:34:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:34:22 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:34:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:34:22 [TRACE] GRPCProvider: Close
2021-02-20T12:34:22.988-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:22.991-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49893
2021-02-20T12:34:22.991-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "root"
2021/02/20 12:34:22 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:34:22 [TRACE] vertex "root": visit complete
2021/02/20 12:34:22 [INFO] backend/local: apply calling Plan
2021/02/20 12:34:22 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:34:22 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:34:22 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for kubernetes_service.flask
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:34:22 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:34:22 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:34:22 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:34:22 [TRACE] ProviderTransformer: kubernetes_service.flask (orphan) is provided by provider["registry.terraform.io/hashicorp/kubernetes"] exactly
2021/02/20 12:34:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:34:22 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:34:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (orphan)
2021/02/20 12:34:22 [DEBUG] ProviderTransformer: "kubernetes_service.flask (orphan)" (*terraform.NodePlannableResourceInstanceOrphan) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:34:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:34:22 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (orphan)
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask (orphan)" references: []
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:34:22 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:34:22 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:34:22 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:34:22 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:34:22 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:34:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (orphan) - *terraform.NodePlannableResourceInstanceOrphan
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:22 [DEBUG] Starting graph walk: walkPlan
2021/02/20 12:34:22 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:34:22 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:34:22.993-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:23.017-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:23.023-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49894
2021-02-20T12:34:23.023-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:23.061-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:23.061-0500
2021-02-20T12:34:23.086-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin435334965 network=unix timestamp=2021-02-20T12:34:23.086-0500
2021-02-20T12:34:23.086-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:34:23 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:23 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:34:23 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:34:23.140-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:23 [TRACE] GRPCProvider: Configure
2021-02-20T12:34:23.170-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:34:23.170-0500
2021-02-20T12:34:23.172-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:34:23.172-0500
2021/02/20 12:34:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_service.flask (orphan)"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask (orphan)": starting visit (*terraform.NodePlannableResourceInstanceOrphan)
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:34:23 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:34:23 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:23 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:23 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:34:23 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:34:23 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:34:23 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:34:23 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:34:23 [TRACE] GRPCProvider: ReadResource
2021-02-20T12:34:23.178-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [INFO] Checking service flask-app: timestamp=2021-02-20T12:34:23.178-0500
2021-02-20T12:34:23.178-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:34:23.178-0500
2021/02/20 12:34:23 [TRACE] GRPCProvider: ReadResource
2021-02-20T12:34:23.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [INFO] Checking deployment scalable-flask-app: timestamp=2021-02-20T12:34:23.184-0500
2021-02-20T12:34:23.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:34:23.184-0500
2021-02-20T12:34:23.196-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:23.196-0500
2021-02-20T12:34:23.198-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:23.197-0500
2021-02-20T12:34:23.199-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [INFO] Reading service flask-app: timestamp=2021-02-20T12:34:23.198-0500
2021-02-20T12:34:23.199-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:34:23.199-0500
2021-02-20T12:34:23.201-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [INFO] Reading deployment scalable-flask-app: timestamp=2021-02-20T12:34:23.201-0500
2021-02-20T12:34:23.202-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:34:23.201-0500
2021-02-20T12:34:23.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 880
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d",
  "resourceVersion": "20662",
  "creationTimestamp": "2021-02-20T17:26:28Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:26:28Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.123.126",
  "clusterIPs": [
   "10.96.123.126"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:23.203-0500
2021-02-20T12:34:23.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9022167a-6c6f-4d4f-96da-4a012d2b1c2d", ResourceVersion:"20662", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438788, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000657ca0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000657cc0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.123.126", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:34:23.203-0500
2021-02-20T12:34:23.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.123.126", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T12:34:23.203-0500
2021/02/20 12:34:23 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask
2021/02/20 12:34:23 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask
2021/02/20 12:34:23 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask
2021/02/20 12:34:23 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask (orphan)": visit complete
2021-02-20T12:34:23.207-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:23 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518",
  "resourceVersion": "20637",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:25:42Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:25:42Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:26:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:26:19Z",
    "lastTransitionTime": "2021-02-20T17:26:09Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:23.207-0500
2021-02-20T12:34:23.207-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:23 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"526b0f37-d4a1-43a1-95e1-136fbb53c518", ResourceVersion:"20637", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749438742, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000c5cd00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c5cd20)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000c5cd40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c5cd60)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000829ac0), Selector:(*v1.LabelSelector)(0xc000c5cd80), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000829b80), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000829b88), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000829b89), SecurityContext:(*v1.PodSecurityContext)(0xc000464930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000829b8a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000c603d0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000829be4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000829be8)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438779, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749438769, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:34:23.207-0500
2021/02/20 12:34:23 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 12:34:23 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:34:23 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:34:23 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:34:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:23 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:34:23 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/02/20 12:34:23 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:34:23 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask-app
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:34:23 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:23 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:34:23 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:34:23 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:34:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:34:23 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 12:34:23 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 12:34:23 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 12:34:23 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 12:34:23 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 12:34:23 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 12:34:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:23 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:34:23 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:34:23 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 12:34:23 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:34:23 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:34:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:34:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:34:23 [TRACE] GRPCProvider: Close
2021/02/20 12:34:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:34:23.238-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:23.240-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49894
2021-02-20T12:34:23.240-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:23 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:34:23 [TRACE] dag/walk: visiting "root"
2021/02/20 12:34:23 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:34:23 [TRACE] vertex "root": visit complete
2021/02/20 12:34:23 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 12:34:25 [INFO] backend/local: apply calling Apply
2021/02/20 12:34:25 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:34:25 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:34:25 [TRACE] DiffTransformer starting
2021/02/20 12:34:25 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask 
2021/02/20 12:34:25 [TRACE] DiffTransformer: kubernetes_service.flask will be represented for destruction by kubernetes_service.flask (destroy)
2021/02/20 12:34:25 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask-app 
2021/02/20 12:34:25 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 12:34:25 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] DiffTransformer complete
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:25 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:34:25 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:34:25 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:34:25 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:58,1-42
2021/02/20 12:34:25 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:34:25 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:34:25 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:34:25 [TRACE] ProviderTransformer: kubernetes_service.flask (destroy) is provided by provider["registry.terraform.io/hashicorp/kubernetes"] exactly
2021/02/20 12:34:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:34:25 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:34:25 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask (destroy)
2021/02/20 12:34:25 [DEBUG] ProviderTransformer: "kubernetes_service.flask (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:25 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 12:34:25 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:34:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:34:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:34:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:34:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask (destroy)
2021/02/20 12:34:25 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:34:25 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:34:25 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 12:34:25 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:34:25 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:34:25 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:34:25 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:34:25 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:34:25 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:25 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:34:25 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:25 [DEBUG] Starting graph walk: walkApply
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:34:25 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:34:25.563-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:25.593-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:25.598-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49895
2021-02-20T12:34:25.598-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:25.645-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:25.645-0500
2021-02-20T12:34:25.671-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:34:25.671-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin544347090 network=unix timestamp=2021-02-20T12:34:25.671-0500
2021/02/20 12:34:25 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:34:25.724-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:25 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:34:25 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:34:25 [TRACE] GRPCProvider: Configure
2021-02-20T12:34:25.759-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:34:25.759-0500
2021-02-20T12:34:25.760-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:34:25.760-0500
2021/02/20 12:34:25 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "kubernetes_service.flask (destroy)"
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 12:34:25 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 12:34:25 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask
2021/02/20 12:34:25 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask
2021/02/20 12:34:25 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:34:25 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:34:25 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 12:34:25 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:25 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:34:25 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:34:25 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 12:34:25 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 12:34:25 [DEBUG] kubernetes_service.flask: applying the planned Delete change
2021/02/20 12:34:25 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 12:34:25 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:34:25 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 12:34:25 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:34:25.770-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T12:34:25.770-0500
2021-02-20T12:34:25.770-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:25.770-0500
2021-02-20T12:34:25.771-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T12:34:25.770-0500
2021-02-20T12:34:25.772-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:34:25.772-0500
2021-02-20T12:34:25.772-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 311
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:25.772-0500
2021-02-20T12:34:25.796-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 422 Unprocessable Entity
Content-Length: 418
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:25 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "Service \"flask-app\" is invalid: spec.ports[0].nodePort: Invalid value: 31000: provided port is already allocated",
 "reason": "Invalid",
 "details": {
  "name": "flask-app",
  "kind": "Service",
  "causes": [
   {
    "reason": "FieldValueInvalid",
    "message": "Invalid value: 31000: provided port is already allocated",
    "field": "spec.ports[0].nodePort"
   }
  ]
 },
 "code": 422
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:25.796-0500
2021/02/20 12:34:25 [DEBUG] kubernetes_service.flask-app: apply errored, but we're indicating that via the Error pointer rather than returning it: Service "flask-app" is invalid: spec.ports[0].nodePort: Invalid value: 31000: provided port is already allocated
2021/02/20 12:34:25 [TRACE] EvalMaybeTainted: kubernetes_service.flask-app encountered an error during creation, so it is now marked as tainted
2021/02/20 12:34:25 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] EvalApplyProvisioners: kubernetes_service.flask-app has no state, so skipping provisioners
2021/02/20 12:34:25 [TRACE] EvalMaybeTainted: kubernetes_service.flask-app encountered an error during creation, so it is now marked as tainted
2021/02/20 12:34:25 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021-02-20T12:34:25.809-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:25 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "9022167a-6c6f-4d4f-96da-4a012d2b1c2d"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:25.809-0500
2021-02-20T12:34:25.809-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T12:34:25.809-0500
2021-02-20T12:34:25.810-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:34:25.810-0500
2021-02-20T12:34:25.817-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:34:25 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T12:34:25.817-0500
2021-02-20T12:34:25.817-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:34:25 [INFO] Service flask-app deleted: timestamp=2021-02-20T12:34:25.817-0500
2021/02/20 12:34:25 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 6
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:34:25 [TRACE] vertex "kubernetes_service.flask (destroy)": visit complete
2021/02/20 12:34:25 [TRACE] dag/walk: upstream of "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" errored, so skipping
2021/02/20 12:34:25 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/02/20 12:34:25 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 7
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:34:25 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-02-20T12:34:25.881-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:25.884-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=49895
2021-02-20T12:34:25.884-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:50 [INFO] Terraform version: 0.14.6  
2021/02/20 12:34:50 [INFO] Go runtime version: go1.15.6
2021/02/20 12:34:50 [INFO] CLI args: []string{"/usr/local/bin/terraform", "terraform", "de", "terraform"}
2021/02/20 12:34:50 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:34:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:34:50 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:34:50 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:34:50 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:34:50 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:34:50 [INFO] CLI command args: []string{"terraform", "de", "terraform"}
2021/02/20 12:34:52 [INFO] Terraform version: 0.14.6  
2021/02/20 12:34:52 [INFO] Go runtime version: go1.15.6
2021/02/20 12:34:52 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy", "stroy"}
2021/02/20 12:34:52 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:34:52 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:34:52 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:34:52 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:34:52 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:34:52 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:34:52 [INFO] CLI command args: []string{"destroy", "stroy"}
2021/02/20 12:34:58 [INFO] Terraform version: 0.14.6  
2021/02/20 12:34:58 [INFO] Go runtime version: go1.15.6
2021/02/20 12:34:58 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 12:34:58 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:34:58 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:34:58 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:34:58 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:34:58 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:34:58 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:34:58 [INFO] CLI command args: []string{"destroy"}
2021/02/20 12:34:58 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:34:58 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:34:58 [DEBUG] New state was assigned lineage "fe897c4e-9c07-a477-4859-04ab67e36d6b"
2021/02/20 12:34:58 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:34:58 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:34:58 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:34:58 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:34:58 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:34:58 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:34:58 [DEBUG] checking for provisioner in "."
2021/02/20 12:34:58 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:34:58 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:34:58 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:34:58 [INFO] backend/local: starting Apply operation
2021/02/20 12:34:58 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:34:58 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:34:58 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:34:58 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:34:58 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 7
2021/02/20 12:34:58 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:34:58 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:34:58 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:34:58 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:34:58 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 7
2021/02/20 12:34:58 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:34:58 [TRACE] backend/local: building context for current working directory
2021/02/20 12:34:58 [TRACE] terraform.NewContext: starting
2021/02/20 12:34:58 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:34:58 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:34:58.506-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:58.551-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:58.557-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50015
2021-02-20T12:34:58.557-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:58.607-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:58.607-0500
2021-02-20T12:34:58.632-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin066174266 network=unix timestamp=2021-02-20T12:34:58.632-0500
2021-02-20T12:34:58.632-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:34:58 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:34:58.735-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:58 [TRACE] GRPCProvider: Close
2021-02-20T12:34:58.786-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:58.788-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50015
2021-02-20T12:34:58.789-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:58 [TRACE] terraform.NewContext: complete
2021/02/20 12:34:58 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:34:58 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:34:58 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:34:58 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:34:58 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:34:58 [TRACE] backend/local: running validation operation
2021/02/20 12:34:58 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:34:58 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:34:58 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:34:58 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:34:58 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:34:58 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:34:58 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:34:58 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:34:58 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:34:58 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:58 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 12:34:58 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:34:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:34:58 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 12:34:58 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:58 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:34:58 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:34:58 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 12:34:58 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:58 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:34:58 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:58 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:34:58 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:34:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:34:58.805-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:58.830-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:58.837-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50016
2021-02-20T12:34:58.837-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:58.880-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:58.880-0500
2021-02-20T12:34:58.907-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin215652743 network=unix timestamp=2021-02-20T12:34:58.906-0500
2021-02-20T12:34:58.907-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:34:58 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:34:58.960-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:58 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:34:58 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:34:58 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:34:59 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:34:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:59 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:34:59 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:34:59 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:34:59 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:34:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:34:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:34:59 [TRACE] GRPCProvider: Close
2021-02-20T12:34:59.034-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:59.037-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50016
2021-02-20T12:34:59.037-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "root"
2021/02/20 12:34:59 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:34:59 [TRACE] vertex "root": visit complete
2021/02/20 12:34:59 [INFO] backend/local: apply calling Plan
2021/02/20 12:34:59 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:34:59 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 12:34:59 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:34:59 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-45
2021/02/20 12:34:59 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:34:59 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:34:59 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:34:59 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:34:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:34:59 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:59 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:34:59 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:34:59 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:34:59.039-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:34:59.063-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:34:59.069-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50017
2021-02-20T12:34:59.069-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:34:59.108-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:34:59.108-0500
2021-02-20T12:34:59.134-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin276718772 network=unix timestamp=2021-02-20T12:34:59.134-0500
2021-02-20T12:34:59.134-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:34:59 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:34:59.186-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:34:59 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 12:34:59 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:34:59 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:34:59 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:34:59 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:34:59 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 12:34:59 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:34:59 [TRACE] GRPCProvider: Close
2021-02-20T12:34:59.228-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:34:59.230-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50017
2021-02-20T12:34:59.230-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:34:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:34:59 [TRACE] dag/walk: visiting "root"
2021/02/20 12:34:59 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:34:59 [TRACE] vertex "root": visit complete
2021/02/20 12:34:59 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 12:35:01 [INFO] backend/local: apply calling Apply
2021/02/20 12:35:01 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:35:01 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:35:01 [TRACE] DiffTransformer starting
2021/02/20 12:35:01 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 12:35:01 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 12:35:01 [TRACE] DiffTransformer complete
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:35:01 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:35:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:01 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:35:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:35:01 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-45
2021/02/20 12:35:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:35:01 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:35:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:01 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:35:01 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 12:35:01 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:35:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:35:01 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 12:35:01 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:01 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:01 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:35:01 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:35:01 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:35:01 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:35:01 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:35:01 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:35:01 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 12:35:01 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:01 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:35:01 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:01 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 12:35:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:35:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:35:01.235-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:35:01.260-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:35:01.266-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50018
2021-02-20T12:35:01.266-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:35:01.309-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:35:01.309-0500
2021-02-20T12:35:01.338-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin250100569 network=unix timestamp=2021-02-20T12:35:01.338-0500
2021-02-20T12:35:01.338-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:35:01 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:01 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:35:01 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:35:01.391-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:35:01 [TRACE] GRPCProvider: Configure
2021-02-20T12:35:01.422-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:35:01.422-0500
2021-02-20T12:35:01.424-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:35:01.424-0500
2021/02/20 12:35:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:35:01 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 12:35:01 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 12:35:01 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 12:35:01 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:35:01 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:35:01 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:35:01 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:35:01 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 12:35:01 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:35:01.436-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [INFO] Deleting deployment: "scalable-flask-app": timestamp=2021-02-20T12:35:01.436-0500
2021-02-20T12:35:01.436-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:01.436-0500
2021-02-20T12:35:01.454-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 190
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:01 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "scalable-flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "526b0f37-d4a1-43a1-95e1-136fbb53c518"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:01.454-0500
2021-02-20T12:35:01.454-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T12:35:01.454-0500
2021-02-20T12:35:01.455-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:01.455-0500
2021-02-20T12:35:01.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 238
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:01 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"scalable-flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "scalable-flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:01.461-0500
2021-02-20T12:35:01.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:01 [INFO] Deployment scalable-flask-app deleted: timestamp=2021-02-20T12:35:01.461-0500
2021/02/20 12:35:01 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 8
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:35:01 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021/02/20 12:35:01 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:35:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:35:01 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:35:01 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:35:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:35:01 [TRACE] GRPCProvider: Close
2021-02-20T12:35:01.493-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:35:01.497-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50018
2021-02-20T12:35:01.497-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:35:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:35:01 [TRACE] dag/walk: visiting "root"
2021/02/20 12:35:01 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:35:01 [TRACE] vertex "root": visit complete
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 9
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:35:01 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 12:35:15 [INFO] Terraform version: 0.14.6  
2021/02/20 12:35:15 [INFO] Go runtime version: go1.15.6
2021/02/20 12:35:15 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 12:35:15 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:35:15 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:35:15 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:35:15 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:35:15 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:35:15 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:35:15 [INFO] CLI command args: []string{"apply"}
2021/02/20 12:35:15 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:35:15 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:35:15 [DEBUG] New state was assigned lineage "798aa32f-1a8e-a2f7-bfca-70082494fc8e"
2021/02/20 12:35:15 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:35:15 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:35:15 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:35:15 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:35:15 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:35:15 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:35:15 [DEBUG] checking for provisioner in "."
2021/02/20 12:35:15 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:35:15 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:35:15 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:35:15 [INFO] backend/local: starting Apply operation
2021/02/20 12:35:15 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:35:15 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:35:15 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:35:15 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:35:15 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 9
2021/02/20 12:35:15 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:35:15 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:35:15 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:35:15 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:35:15 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 9
2021/02/20 12:35:15 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:35:15 [TRACE] backend/local: building context for current working directory
2021/02/20 12:35:15 [TRACE] terraform.NewContext: starting
2021/02/20 12:35:15 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:35:15 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:35:15.159-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:35:15.185-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:35:15.189-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50065
2021-02-20T12:35:15.189-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:35:15.230-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:35:15.229-0500
2021-02-20T12:35:15.255-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin233279756 network=unix timestamp=2021-02-20T12:35:15.254-0500
2021-02-20T12:35:15.255-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:35:15 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:35:15.313-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:35:15 [TRACE] GRPCProvider: Close
2021-02-20T12:35:15.347-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:35:15.350-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50065
2021-02-20T12:35:15.350-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:35:15 [TRACE] terraform.NewContext: complete
2021/02/20 12:35:15 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:35:15 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:35:15 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:35:15 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:35:15 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:35:15 [TRACE] backend/local: running validation operation
2021/02/20 12:35:15 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:35:15 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:35:15 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:35:15 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:35:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 12:35:15 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:35:15 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:35:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:15 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:35:15.352-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:35:15.377-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:35:15.382-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50066
2021-02-20T12:35:15.382-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:35:15.422-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:35:15.421-0500
2021-02-20T12:35:15.448-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin288119801 network=unix timestamp=2021-02-20T12:35:15.447-0500
2021-02-20T12:35:15.448-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:35:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:35:15 [TRACE] GRPCProvider: GetSchema
2021-02-20T12:35:15.498-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:35:15 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:35:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:35:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:35:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:35:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:35:15 [TRACE] GRPCProvider: Close
2021-02-20T12:35:15.556-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:35:15.558-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50066
2021-02-20T12:35:15.559-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "root"
2021/02/20 12:35:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:35:15 [TRACE] vertex "root": visit complete
2021/02/20 12:35:15 [INFO] backend/local: apply calling Plan
2021/02/20 12:35:15 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:35:15 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:35:15 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:35:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:35:15 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:35:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:15 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:35:15 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:35:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:35:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:35:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:35:15 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:35:15 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:35:15 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:35:15 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:15 [DEBUG] Starting graph walk: walkPlan
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:35:15.561-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:35:15.585-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:35:15.590-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50067
2021-02-20T12:35:15.590-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:35:15.629-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:35:15.629-0500
2021-02-20T12:35:15.655-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin359719238 network=unix timestamp=2021-02-20T12:35:15.655-0500
2021-02-20T12:35:15.655-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:35:15.713-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:35:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:35:15 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:35:15 [TRACE] GRPCProvider: Configure
2021-02-20T12:35:15.744-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:15 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:35:15.744-0500
2021-02-20T12:35:15.745-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:15 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:35:15.745-0500
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:35:15 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:35:15 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:35:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:35:15 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 12:35:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:35:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:35:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:35:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 12:35:15 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:35:15 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:35:15 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:35:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:35:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:35:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:35:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 12:35:15 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 12:35:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 12:35:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:35:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:35:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:35:15 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:35:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:35:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:35:15 [TRACE] GRPCProvider: Close
2021-02-20T12:35:15.780-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 12:35:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:35:15.782-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50067
2021-02-20T12:35:15.782-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:35:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:35:15 [TRACE] dag/walk: visiting "root"
2021/02/20 12:35:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:35:15 [TRACE] vertex "root": visit complete
2021/02/20 12:35:15 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 12:35:17 [INFO] backend/local: apply calling Apply
2021/02/20 12:35:17 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:35:17 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:35:17 [TRACE] DiffTransformer starting
2021/02/20 12:35:17 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 12:35:17 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 12:35:17 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 12:35:17 [TRACE] DiffTransformer complete
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:35:17 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 12:35:17 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-45
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:58,1-42
2021/02/20 12:35:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:35:17 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:35:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:35:17 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:35:17 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 12:35:17 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:17 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:35:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:35:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:35:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:35:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 12:35:17 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:35:17 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:35:17 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 12:35:17 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:35:17 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 12:35:17 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:35:17 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:35:17 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:35:17 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:35:17 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:35:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:35:17 [DEBUG] Starting graph walk: walkApply
2021/02/20 12:35:17 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:35:17 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:35:17.713-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:35:17.737-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:35:17.746-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50068
2021-02-20T12:35:17.746-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:35:17.785-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:35:17.784-0500
2021-02-20T12:35:17.810-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin893144707 network=unix timestamp=2021-02-20T12:35:17.809-0500
2021-02-20T12:35:17.810-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:35:17 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:35:17.865-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:35:17 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:35:17 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:35:17 [TRACE] GRPCProvider: Configure
2021-02-20T12:35:17.897-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:35:17.897-0500
2021-02-20T12:35:17.898-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:35:17.898-0500
2021/02/20 12:35:17 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:35:17 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:35:17 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:35:17 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:35:17 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:35:17 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 12:35:17 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 12:35:17 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:35:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:35:17 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:35:17 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/02/20 12:35:17 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 12:35:17 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:35:17 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 12:35:17 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:35:17 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 12:35:17 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.921-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:35:17.921-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.922-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:35:17.922-0500
2021-02-20T12:35:17.923-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T12:35:17.923-0500
2021-02-20T12:35:17.923-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T12:35:17.923-0500
2021-02-20T12:35:17.923-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T12:35:17.923-0500
2021-02-20T12:35:17.924-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000097dac), Selector:(*v1.LabelSelector)(0xc0007c1c60), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000097dd0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000097db4), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000097db9), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000097db8), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000097db0), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000097da8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:35:17.924-0500
2021-02-20T12:35:17.925-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 873
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "ScalableNginxExample"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:17.925-0500
2021-02-20T12:35:17.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:17 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21576",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:17.945-0500
2021-02-20T12:35:17.948-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Waiting for deployment default/scalable-flask-app to schedule 2 replicas: timestamp=2021-02-20T12:35:17.948-0500
2021-02-20T12:35:17.948-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [INFO] Waiting for deployment default/scalable-flask-app to rollout: timestamp=2021-02-20T12:35:17.948-0500
2021-02-20T12:35:17.948-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T12:35:17.948-0500
2021-02-20T12:35:17.949-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:17.949-0500
2021-02-20T12:35:17.955-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2243
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:17 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21576",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:17.955-0500
2021-02-20T12:35:17.956-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:17 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T12:35:17.955-0500
2021-02-20T12:35:18.456-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:18.456-0500
2021-02-20T12:35:18.464-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3480
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21593",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T17:35:17Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:18Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:18.464-0500
2021-02-20T12:35:18.464-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:18 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T12:35:18.464-0500
2021-02-20T12:35:19.465-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:19 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:19.465-0500
2021-02-20T12:35:19.481-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:19 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3566
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:19 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21605",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 1,
  "availableReplicas": 1,
  "unavailableReplicas": 1,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T17:35:17Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:19.481-0500
2021-02-20T12:35:19.481-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:19 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T12:35:19.481-0500
2021-02-20T12:35:21.486-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:21.486-0500
2021-02-20T12:35:21.495-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21607",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.495-0500
2021-02-20T12:35:21.495-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"c474c0e5-1822-4f27-8bbf-0527e1b7ddfa", ResourceVersion:"21576", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749439317, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0002d9be0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0002d9c00)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0009d4fd8), Selector:(*v1.LabelSelector)(0xc0002d9c20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0009d50d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0009d50d8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0009d50d9), SecurityContext:(*v1.PodSecurityContext)(0xc0003e0a80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0009d50da), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000cb3250)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0009d5134), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0009d5138)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:35:21.495-0500
2021-02-20T12:35:21.496-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Checking deployment scalable-flask-app: timestamp=2021-02-20T12:35:21.495-0500
2021-02-20T12:35:21.496-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:21.496-0500
2021-02-20T12:35:21.504-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21607",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.504-0500
2021-02-20T12:35:21.505-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Reading deployment scalable-flask-app: timestamp=2021-02-20T12:35:21.505-0500
2021-02-20T12:35:21.505-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:21.505-0500
2021-02-20T12:35:21.510-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21607",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.510-0500
2021-02-20T12:35:21.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"c474c0e5-1822-4f27-8bbf-0527e1b7ddfa", ResourceVersion:"21607", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749439317, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00059c400), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00059c420)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00059c440), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00059c460)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00059a4c0), Selector:(*v1.LabelSelector)(0xc00059c480), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00059a580), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00059a588), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00059a589), SecurityContext:(*v1.PodSecurityContext)(0xc000370070), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00059a58a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc001068390)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00059a5e4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00059a5e8)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439319, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439319, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439319, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439317, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:35:21.511-0500
2021/02/20 12:35:21 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 12:35:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:35:21 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:35:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:35:21 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 10
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:35:21 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:35:21 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:35:21 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 12:35:21 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 12:35:21 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:35:21 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:35:21 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 12:35:21 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 12:35:21 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 12:35:21 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 12:35:21 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 12:35:21 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T12:35:21.554-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T12:35:21.553-0500
2021-02-20T12:35:21.554-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:35:21.554-0500
2021-02-20T12:35:21.554-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 311
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.554-0500
2021-02-20T12:35:21.565-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 878
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "c6c7e0b3-38f8-417f-9610-5b15277fa825",
  "resourceVersion": "21613",
  "creationTimestamp": "2021-02-20T17:35:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:35:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.88.248",
  "clusterIPs": [
   "10.96.88.248"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.565-0500
2021-02-20T12:35:21.565-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"c6c7e0b3-38f8-417f-9610-5b15277fa825", ResourceVersion:"21613", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749439321, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001014e80), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001014ea0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.88.248", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:35:21.565-0500
2021-02-20T12:35:21.566-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Checking service flask-app: timestamp=2021-02-20T12:35:21.566-0500
2021-02-20T12:35:21.566-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:21.566-0500
2021-02-20T12:35:21.570-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 878
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "c6c7e0b3-38f8-417f-9610-5b15277fa825",
  "resourceVersion": "21613",
  "creationTimestamp": "2021-02-20T17:35:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:35:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.88.248",
  "clusterIPs": [
   "10.96.88.248"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.570-0500
2021-02-20T12:35:21.570-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Reading service flask-app: timestamp=2021-02-20T12:35:21.570-0500
2021-02-20T12:35:21.570-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:35:21.570-0500
2021-02-20T12:35:21.574-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 878
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:35:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "c6c7e0b3-38f8-417f-9610-5b15277fa825",
  "resourceVersion": "21613",
  "creationTimestamp": "2021-02-20T17:35:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:35:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.88.248",
  "clusterIPs": [
   "10.96.88.248"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:35:21.574-0500
2021-02-20T12:35:21.574-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"c6c7e0b3-38f8-417f-9610-5b15277fa825", ResourceVersion:"21613", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749439321, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00084eb20), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00084eb40)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.88.248", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:35:21.574-0500
2021-02-20T12:35:21.574-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:35:21 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.88.248", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T12:35:21.574-0500
2021/02/20 12:35:21 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 12:35:21 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 11
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:35:21 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:35:21 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:35:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:35:21 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:35:21 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:35:21 [TRACE] GRPCProvider: Close
2021/02/20 12:35:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:35:21.603-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:35:21.606-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50068
2021-02-20T12:35:21.606-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:35:21 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:35:21 [TRACE] dag/walk: visiting "root"
2021/02/20 12:35:21 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:35:21 [TRACE] vertex "root": visit complete
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 12
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:35:21 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 12:42:11 [INFO] Terraform version: 0.14.6  
2021/02/20 12:42:11 [INFO] Go runtime version: go1.15.6
2021/02/20 12:42:11 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 12:42:11 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 12:42:11 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 12:42:11 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 12:42:11 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 12:42:11 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 12:42:11 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 12:42:11 [INFO] CLI command args: []string{"apply"}
2021/02/20 12:42:11 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 12:42:11 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 12:42:11 [DEBUG] New state was assigned lineage "32f0e068-971e-1d1c-63e8-10dc8e20d4e2"
2021/02/20 12:42:11 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 12:42:11 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 12:42:11 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 12:42:11 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 12:42:11 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 12:42:11 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 12:42:12 [DEBUG] checking for provisioner in "."
2021/02/20 12:42:12 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 12:42:12 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 12:42:12 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 12:42:12 [INFO] backend/local: starting Apply operation
2021/02/20 12:42:12 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 12:42:12 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 12:42:12 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 12:42:12 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 12:42:12 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 12
2021/02/20 12:42:12 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 12:42:12 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 12:42:12 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 12:42:12 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 12:42:12 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 12
2021/02/20 12:42:12 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 12:42:12 [TRACE] backend/local: building context for current working directory
2021/02/20 12:42:12 [TRACE] terraform.NewContext: starting
2021/02/20 12:42:12 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 12:42:12 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T12:42:12.137-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:42:12.174-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:42:12.179-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50518
2021-02-20T12:42:12.179-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:42:12.222-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:42:12.221-0500
2021-02-20T12:42:12.254-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:42:12.254-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin667509909 network=unix timestamp=2021-02-20T12:42:12.254-0500
2021-02-20T12:42:12.328-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:42:12 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:42:12 [TRACE] GRPCProvider: Close
2021-02-20T12:42:12.372-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:42:12.375-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50518
2021-02-20T12:42:12.375-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:42:12 [TRACE] terraform.NewContext: complete
2021/02/20 12:42:12 [TRACE] backend/local: finished building terraform.Context
2021/02/20 12:42:12 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 12:42:12 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 12:42:12 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 12:42:12 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 12:42:12 [TRACE] backend/local: running validation operation
2021/02/20 12:42:12 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:42:12 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:42:12 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:42:12 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:42:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 12:42:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 12:42:12 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:42:12 [DEBUG] Starting graph walk: walkValidate
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:42:12.385-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:42:12.408-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:42:12.414-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50519
2021-02-20T12:42:12.414-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:42:12.457-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:42:12.457-0500
2021-02-20T12:42:12.484-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin809567058 timestamp=2021-02-20T12:42:12.484-0500
2021-02-20T12:42:12.484-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:42:12 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:42:12.539-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:42:12 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:42:12 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:42:12 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:42:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 12:42:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:42:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:42:12 [TRACE] GRPCProvider: Close
2021/02/20 12:42:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:42:12.604-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:42:12.607-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50519
2021-02-20T12:42:12.607-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "root"
2021/02/20 12:42:12 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:42:12 [TRACE] vertex "root": visit complete
2021/02/20 12:42:12 [INFO] backend/local: apply calling Plan
2021/02/20 12:42:12 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:42:12 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 12:42:12 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:42:12 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:42:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:42:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:42:12 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:42:12 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 12:42:12 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:42:12 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:42:12 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:42:12 [DEBUG] Starting graph walk: walkPlan
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:42:12.609-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:42:12.633-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:42:12.639-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50520
2021-02-20T12:42:12.639-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:42:12.679-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:42:12.678-0500
2021-02-20T12:42:12.704-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin747270159 network=unix timestamp=2021-02-20T12:42:12.704-0500
2021-02-20T12:42:12.704-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T12:42:12.756-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:42:12 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:42:12 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:42:12 [TRACE] GRPCProvider: Configure
2021-02-20T12:42:12.785-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:42:12.785-0500
2021-02-20T12:42:12.786-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:42:12.786-0500
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:42:12 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:42:12 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:42:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:42:12 [TRACE] GRPCProvider: ReadResource
2021-02-20T12:42:12.802-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [INFO] Checking deployment scalable-flask-app: timestamp=2021-02-20T12:42:12.802-0500
2021-02-20T12:42:12.802-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:42:12.802-0500
2021-02-20T12:42:12.816-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:42:12 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21607",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:42:12.816-0500
2021-02-20T12:42:12.821-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [INFO] Reading deployment scalable-flask-app: timestamp=2021-02-20T12:42:12.821-0500
2021-02-20T12:42:12.821-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:42:12.821-0500
2021-02-20T12:42:12.825-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3520
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:42:12 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "scalable-flask-app",
  "namespace": "default",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa",
  "resourceVersion": "21607",
  "generation": 1,
  "creationTimestamp": "2021-02-20T17:35:17Z",
  "labels": {
   "App": "ScalableNginxExample"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:17Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"example\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T17:35:19Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "ScalableFlaskApp"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "ScalableFlaskApp"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "example",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:19Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T17:35:19Z",
    "lastTransitionTime": "2021-02-20T17:35:17Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:42:12.825-0500
2021-02-20T12:42:12.825-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"scalable-flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"c474c0e5-1822-4f27-8bbf-0527e1b7ddfa", ResourceVersion:"21607", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749439317, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableNginxExample"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc001074100), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001074120)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc001074140), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001074160)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0005f5530), Selector:(*v1.LabelSelector)(0xc001074180), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"ScalableFlaskApp"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"example", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0005f55f0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0005f55f8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0005f55f9), SecurityContext:(*v1.PodSecurityContext)(0xc0004e61c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0005f55fa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000f4a520)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0005f5654), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0005f5658)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439319, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439319, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439319, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749439317, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"scalable-flask-app-5d798fc456\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T12:42:12.825-0500
2021/02/20 12:42:12 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app during refresh.
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
2021/02/20 12:42:12 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 12:42:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:42:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:42:12 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/02/20 12:42:12 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_deployment.flask-app
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 12:42:12 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 12:42:12 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 12:42:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 12:42:12 [TRACE] GRPCProvider: ReadResource
2021-02-20T12:42:12.847-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [INFO] Checking service flask-app: timestamp=2021-02-20T12:42:12.847-0500
2021-02-20T12:42:12.848-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:42:12.848-0500
2021-02-20T12:42:12.852-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 878
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:42:12 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "c6c7e0b3-38f8-417f-9610-5b15277fa825",
  "resourceVersion": "21613",
  "creationTimestamp": "2021-02-20T17:35:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:35:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.88.248",
  "clusterIPs": [
   "10.96.88.248"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:42:12.851-0500
2021-02-20T12:42:12.852-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [INFO] Reading service flask-app: timestamp=2021-02-20T12:42:12.852-0500
2021-02-20T12:42:12.852-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T12:42:12.852-0500
2021-02-20T12:42:12.856-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 878
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 17:42:12 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "c6c7e0b3-38f8-417f-9610-5b15277fa825",
  "resourceVersion": "21613",
  "creationTimestamp": "2021-02-20T17:35:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T17:35:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "ScalableFlaskApp"
  },
  "clusterIP": "10.96.88.248",
  "clusterIPs": [
   "10.96.88.248"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T12:42:12.856-0500
2021-02-20T12:42:12.856-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"c6c7e0b3-38f8-417f-9610-5b15277fa825", ResourceVersion:"21613", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749439321, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00051ef60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00051efa0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"ScalableFlaskApp"}, ClusterIP:"10.96.88.248", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T12:42:12.856-0500
2021-02-20T12:42:12.856-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:12 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.88.248", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"ScalableFlaskApp"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T12:42:12.856-0500
2021/02/20 12:42:12 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app during refresh.
      - .spec[0].load_balancer_source_ranges: was null, but now cty.SetValEmpty(cty.String)
      - .spec[0].external_ips: was null, but now cty.SetValEmpty(cty.String)
      - .metadata[0].labels: was null, but now cty.MapValEmpty(cty.String)
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
2021/02/20 12:42:12 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 12:42:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 12:42:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 12:42:12 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask-app
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 12:42:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:42:12 [TRACE] GRPCProvider: Close
2021/02/20 12:42:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:42:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:42:12.861-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:42:12.863-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50520
2021-02-20T12:42:12.863-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "root"
2021/02/20 12:42:12 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:42:12 [TRACE] vertex "root": visit complete
2021/02/20 12:42:12 [INFO] backend/local: apply calling Apply
2021/02/20 12:42:12 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 12:42:12 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 12:42:12 [TRACE] DiffTransformer starting
2021/02/20 12:42:12 [TRACE] DiffTransformer: found NoOp change for kubernetes_deployment.flask-app 
2021/02/20 12:42:12 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask-app 
2021/02/20 12:42:12 [TRACE] DiffTransformer complete
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.DiffTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:58,1-42
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-45
2021/02/20 12:42:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 12:42:12 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 12:42:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 12:42:12 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 12:42:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 12:42:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 12:42:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 12:42:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 12:42:12 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 12:42:12 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 12:42:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 12:42:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2021/02/20 12:42:12 [DEBUG] Starting graph walk: walkApply
2021/02/20 12:42:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 12:42:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T12:42:12.865-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T12:42:12.890-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T12:42:12.897-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50521
2021-02-20T12:42:12.897-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T12:42:12.936-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T12:42:12.936-0500
2021-02-20T12:42:12.962-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin091351716 network=unix timestamp=2021-02-20T12:42:12.962-0500
2021-02-20T12:42:12.963-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 12:42:13 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T12:42:13.015-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 12:42:13 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 12:42:13 [TRACE] GRPCProvider: GetSchema
2021/02/20 12:42:13 [TRACE] GRPCProvider: Configure
2021-02-20T12:42:13.046-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:13 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T12:42:13.046-0500
2021-02-20T12:42:13.047-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 12:42:13 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T12:42:13.047-0500
2021/02/20 12:42:13 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 12:42:13 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 12:42:13 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 12:42:13 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 12:42:13 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 12:42:13 [TRACE] GRPCProvider: Close
2021/02/20 12:42:13 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T12:42:13.047-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T12:42:13.049-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50521
2021-02-20T12:42:13.049-0500 [DEBUG] plugin: plugin exited
2021/02/20 12:42:13 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 12:42:13 [TRACE] dag/walk: visiting "root"
2021/02/20 12:42:13 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 12:42:13 [TRACE] vertex "root": visit complete
2021/02/20 12:42:13 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 12:42:13 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 13
2021/02/20 12:42:13 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 12:42:13 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 12:42:13 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:10:37 [INFO] Terraform version: 0.14.6  
2021/02/20 13:10:37 [INFO] Go runtime version: go1.15.6
2021/02/20 13:10:37 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:10:37 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:10:37 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:10:37 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:10:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:10:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:10:37 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:10:37 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:10:37 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:10:37 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:10:37 [DEBUG] New state was assigned lineage "95cc0244-3583-c8c8-9465-6d9e2502531d"
2021/02/20 13:10:37 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:10:37 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:10:37 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:10:37 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:10:37 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:10:37 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:10:37 [DEBUG] checking for provisioner in "."
2021/02/20 13:10:37 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:10:37 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:10:37 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:10:37 [INFO] backend/local: starting Apply operation
2021/02/20 13:10:37 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:10:37 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:10:37 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:10:37 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:10:37 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 13
2021/02/20 13:10:37 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:10:37 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:10:37 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:10:37 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:10:37 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 13
2021/02/20 13:10:37 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:10:37 [TRACE] backend/local: building context for current working directory
2021/02/20 13:10:37 [TRACE] terraform.NewContext: starting
2021/02/20 13:10:37 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:10:37 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:10:37.766-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:37.801-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:37.805-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50991
2021-02-20T13:10:37.806-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:37.881-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:37.881-0500
2021-02-20T13:10:37.912-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin184984866 network=unix timestamp=2021-02-20T13:10:37.911-0500
2021-02-20T13:10:37.912-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:10:37 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:10:37.977-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:38 [TRACE] GRPCProvider: Close
2021-02-20T13:10:38.017-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:38.020-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50991
2021-02-20T13:10:38.020-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:38 [TRACE] terraform.NewContext: complete
2021/02/20 13:10:38 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:10:38 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:10:38 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:10:38 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:10:38 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:10:38 [TRACE] backend/local: running validation operation
2021/02/20 13:10:38 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:10:38 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:10:38 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:10:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:10:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:10:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:10:38 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:10:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:10:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:10:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:10:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:10:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:10:38 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:38 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:10:38.032-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:38.058-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:38.065-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50992
2021-02-20T13:10:38.065-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:38.106-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:38.106-0500
2021-02-20T13:10:38.133-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin460269591 network=unix timestamp=2021-02-20T13:10:38.133-0500
2021-02-20T13:10:38.133-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:10:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:10:38.185-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:10:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:10:38 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:10:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:10:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:10:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:10:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:10:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:10:38 [TRACE] GRPCProvider: Close
2021-02-20T13:10:38.254-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:38.256-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50992
2021-02-20T13:10:38.256-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "root"
2021/02/20 13:10:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:10:38 [TRACE] vertex "root": visit complete
2021/02/20 13:10:38 [INFO] backend/local: apply calling Plan
2021/02/20 13:10:38 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:10:38 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:10:38 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:10:38 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:10:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:10:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:10:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:10:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:10:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:10:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:10:38 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:10:38 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:10:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:38 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:10:38.258-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:38.281-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:38.287-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50993
2021-02-20T13:10:38.287-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:38.326-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:38.326-0500
2021-02-20T13:10:38.353-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin262352180 network=unix timestamp=2021-02-20T13:10:38.353-0500
2021-02-20T13:10:38.353-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:10:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021-02-20T13:10:38.409-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:10:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:10:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:10:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:10:38 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:10:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:10:38 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:10:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:10:38 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:10:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:10:38 [TRACE] GRPCProvider: Close
2021-02-20T13:10:38.457-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:38.459-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50993
2021-02-20T13:10:38.460-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:10:38 [TRACE] dag/walk: visiting "root"
2021/02/20 13:10:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:10:38 [TRACE] vertex "root": visit complete
2021/02/20 13:10:38 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:10:40 [INFO] backend/local: apply calling Apply
2021/02/20 13:10:40 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:10:40 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:10:40 [TRACE] DiffTransformer starting
2021/02/20 13:10:40 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:10:40 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:10:40 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] DiffTransformer complete
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:10:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:10:40 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:10:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:40 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:10:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:10:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:10:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:10:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:10:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:10:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:40 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:10:40 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:10:40 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:10:40 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:10:40 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:10:40 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:10:40 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:10:40 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:10:40 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:10:40 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:10:40 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:10:40 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:40 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:10:40 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:40 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:10:40 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:10:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:10:40.815-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:40.848-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:40.854-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50994
2021-02-20T13:10:40.854-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:40.899-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:40.899-0500
2021-02-20T13:10:40.928-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:10:40.928-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin817291185 network=unix timestamp=2021-02-20T13:10:40.928-0500
2021/02/20 13:10:40 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:40 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:10:40 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:10:40.981-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:41 [TRACE] GRPCProvider: Configure
2021-02-20T13:10:41.011-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:10:41.011-0500
2021-02-20T13:10:41.014-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:10:41.014-0500
2021/02/20 13:10:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:10:41 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:10:41 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:10:41 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:10:41 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:10:41 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:10:41 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:10:41 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:10:41 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:10:41 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:10:41.018-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:10:41.018-0500
2021-02-20T13:10:41.018-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:41.018-0500
2021-02-20T13:10:41.082-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "c6c7e0b3-38f8-417f-9610-5b15277fa825"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:41.082-0500
2021-02-20T13:10:41.082-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:10:41.082-0500
2021-02-20T13:10:41.083-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:41.083-0500
2021-02-20T13:10:41.101-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:41.101-0500
2021-02-20T13:10:41.101-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:10:41.101-0500
2021/02/20 13:10:41 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 14
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:41 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:10:41 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:10:41 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:10:41 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:10:41 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:10:41 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:10:41 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:10:41 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:10:41 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:10:41 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:10:41.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [INFO] Deleting deployment: "scalable-flask-app": timestamp=2021-02-20T13:10:41.143-0500
2021-02-20T13:10:41.144-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:41.144-0500
2021-02-20T13:10:41.169-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 190
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "scalable-flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "c474c0e5-1822-4f27-8bbf-0527e1b7ddfa"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:41.169-0500
2021-02-20T13:10:41.169-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:10:41.169-0500
2021-02-20T13:10:41.169-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/scalable-flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:41.169-0500
2021-02-20T13:10:41.181-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 238
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"scalable-flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "scalable-flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:41.180-0500
2021-02-20T13:10:41.181-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:41 [INFO] Deployment scalable-flask-app deleted: timestamp=2021-02-20T13:10:41.181-0500
2021/02/20 13:10:41 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 15
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:41 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021/02/20 13:10:41 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:10:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:10:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:10:41 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:10:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:10:41 [TRACE] GRPCProvider: Close
2021-02-20T13:10:41.209-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:41.213-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=50994
2021-02-20T13:10:41.213-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:10:41 [TRACE] dag/walk: visiting "root"
2021/02/20 13:10:41 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:10:41 [TRACE] vertex "root": visit complete
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 16
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:10:41 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:10:47 [INFO] Terraform version: 0.14.6  
2021/02/20 13:10:47 [INFO] Go runtime version: go1.15.6
2021/02/20 13:10:47 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:10:47 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:10:47 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:10:47 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:10:47 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:10:47 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:10:47 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:10:47 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:10:47 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:10:47 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:10:47 [DEBUG] New state was assigned lineage "16b48604-2eaa-cc61-d813-8db26f286a62"
2021/02/20 13:10:47 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:10:47 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:10:47 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:10:47 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:10:47 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:10:47 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:10:47 [DEBUG] checking for provisioner in "."
2021/02/20 13:10:47 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:10:47 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:10:47 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:10:47 [INFO] backend/local: starting Apply operation
2021/02/20 13:10:47 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:10:47 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:10:47 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:10:47 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:10:47 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 16
2021/02/20 13:10:47 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:10:47 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:10:47 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:10:47 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:10:47 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 16
2021/02/20 13:10:47 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:10:47 [TRACE] backend/local: building context for current working directory
2021/02/20 13:10:47 [TRACE] terraform.NewContext: starting
2021/02/20 13:10:47 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:10:47 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:10:47.235-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:47.262-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:47.268-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51034
2021-02-20T13:10:47.268-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:47.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:47.314-0500
2021-02-20T13:10:47.345-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin986737257 timestamp=2021-02-20T13:10:47.345-0500
2021-02-20T13:10:47.345-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:10:47 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:10:47.402-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:47 [TRACE] GRPCProvider: Close
2021-02-20T13:10:47.439-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:47.441-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51034
2021-02-20T13:10:47.441-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:47 [TRACE] terraform.NewContext: complete
2021/02/20 13:10:47 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:10:47 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:10:47 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:10:47 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:10:47 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:10:47 [TRACE] backend/local: running validation operation
2021/02/20 13:10:47 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:10:47 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:10:47 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:10:47 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:10:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:10:47 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:10:47 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:47 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:10:47.446-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:47.472-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:47.478-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51035
2021-02-20T13:10:47.479-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:47.520-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:47.520-0500
2021-02-20T13:10:47.547-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin046868006 timestamp=2021-02-20T13:10:47.547-0500
2021-02-20T13:10:47.547-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:10:47 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:10:47.602-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:47 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:10:47 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:10:47 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:10:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:10:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:10:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:10:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:10:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:10:47 [TRACE] GRPCProvider: Close
2021-02-20T13:10:47.670-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:47.672-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51035
2021-02-20T13:10:47.672-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "root"
2021/02/20 13:10:47 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:10:47 [TRACE] vertex "root": visit complete
2021/02/20 13:10:47 [INFO] backend/local: apply calling Plan
2021/02/20 13:10:47 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:10:47 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:10:47 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:10:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:10:47 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:10:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:47 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:10:47 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:10:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:10:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:10:47 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:10:47 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:10:47 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:10:47 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:10:47 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:10:47 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:47 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:10:47.675-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:47.699-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:47.704-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51036
2021-02-20T13:10:47.705-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:47.743-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:47.743-0500
2021-02-20T13:10:47.768-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin093727011 network=unix timestamp=2021-02-20T13:10:47.768-0500
2021-02-20T13:10:47.768-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:10:47 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:47 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:10:47 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:10:47.822-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:47 [TRACE] GRPCProvider: Configure
2021-02-20T13:10:47.854-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:47 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:10:47.854-0500
2021-02-20T13:10:47.856-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:47 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:10:47.856-0500
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:10:47 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:47 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:10:47 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:47 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:10:47 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:10:47 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:10:47 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:10:47 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:10:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:47 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:10:47 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:10:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:47 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:10:47 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:10:47 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:10:47 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:10:47 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:47 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:47 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:10:47 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:10:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:10:47 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:10:47 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:10:47 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:10:47 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:47 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:10:47 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:10:47 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:10:47 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:10:47 [TRACE] GRPCProvider: Close
2021/02/20 13:10:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021-02-20T13:10:47.883-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 13:10:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:10:47.886-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51036
2021-02-20T13:10:47.886-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:10:47 [TRACE] dag/walk: visiting "root"
2021/02/20 13:10:47 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:10:47 [TRACE] vertex "root": visit complete
2021/02/20 13:10:47 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:10:49 [INFO] backend/local: apply calling Apply
2021/02/20 13:10:49 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:10:49 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:10:49 [TRACE] DiffTransformer starting
2021/02/20 13:10:49 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:10:49 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:10:49 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:10:49 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:10:49 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:10:49 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:10:49 [TRACE] DiffTransformer complete
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:10:49 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:10:49 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:10:49 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:10:49 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:10:49 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:10:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:10:49 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:10:49 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:10:49 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:10:49 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:49 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:49 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:10:49 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:10:49 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 13:10:49 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:10:49 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:10:49 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:10:49 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:10:49 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:10:49 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:10:49 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:49 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:10:49 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:10:49 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:10:49 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:10:49 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:10:49.889-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:10:49.918-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:10:49.924-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51055
2021-02-20T13:10:49.924-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:10:49.963-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:10:49.963-0500
2021-02-20T13:10:49.989-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:10:49.989-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin663728818 network=unix timestamp=2021-02-20T13:10:49.989-0500
2021/02/20 13:10:50 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:10:50.057-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:10:50 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:10:50 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:10:50 [TRACE] GRPCProvider: Configure
2021-02-20T13:10:50.099-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:10:50.097-0500
2021-02-20T13:10:50.099-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:10:50.099-0500
2021/02/20 13:10:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:10:50 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:10:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:50 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:10:50 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:10:50 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:10:50 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:10:50 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:10:50 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:10:50 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:10:50 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:10:50 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:10:50 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021-02-20T13:10:50.109-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:10:50.109-0500
2021/02/20 13:10:50 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:10:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-02-20T13:10:50.109-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.109-0500
2021/02/20 13:10:50 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:10:50 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/02/20 13:10:50 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:10:50 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:10:50 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:10:50 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:10:50 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:10:50 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:10:50.133-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:10:50.133-0500
2021-02-20T13:10:50.133-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:10:50.133-0500
2021-02-20T13:10:50.133-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:10:50.133-0500
2021-02-20T13:10:50.133-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:10:50.133-0500
2021-02-20T13:10:50.133-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:10:50.133-0500
2021-02-20T13:10:50.133-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:10:50.133-0500
2021-02-20T13:10:50.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:10:50.134-0500
2021-02-20T13:10:50.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:10:50.134-0500
2021-02-20T13:10:50.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:10:50.134-0500
2021-02-20T13:10:50.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:10:50.134-0500
2021-02-20T13:10:50.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:10:50.134-0500
2021-02-20T13:10:50.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:10:50.134-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:10:50.135-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:10:50.135-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:10:50.135-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:10:50.135-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:10:50.135-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:10:50.135-0500
2021-02-20T13:10:50.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:10:50.136-0500
2021-02-20T13:10:50.138-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000eccbcc), Selector:(*v1.LabelSelector)(0xc001030d40), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000eccbe0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000eccbd4), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000eccbd9), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000eccbd8), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000eccbd0), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000eccbc8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:10:50.138-0500
2021-02-20T13:10:50.141-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.141-0500
2021-02-20T13:10:50.165-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24382",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.165-0500
2021-02-20T13:10:50.166-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24381",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.165-0500
2021-02-20T13:10:50.166-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"42e32f2c-3def-433f-b8eb-f7d1f0bd911c", ResourceVersion:"24382", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441450, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008109c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008109e0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:10:50.166-0500
2021-02-20T13:10:50.166-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:10:50.166-0500
2021-02-20T13:10:50.167-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:50.167-0500
2021-02-20T13:10:50.171-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:10:50.170-0500
2021-02-20T13:10:50.171-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:10:50.170-0500
2021-02-20T13:10:50.171-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:10:50.171-0500
2021-02-20T13:10:50.171-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:50.171-0500
2021-02-20T13:10:50.177-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24382",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.177-0500
2021-02-20T13:10:50.177-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:10:50.177-0500
2021-02-20T13:10:50.178-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:10:50.177-0500
2021-02-20T13:10:50.178-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:50.178-0500
2021-02-20T13:10:50.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24381",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.185-0500
2021-02-20T13:10:50.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:10:50.185-0500
2021-02-20T13:10:50.206-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24382",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.205-0500
2021-02-20T13:10:50.206-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"42e32f2c-3def-433f-b8eb-f7d1f0bd911c", ResourceVersion:"24382", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441450, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0013f8300), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013f8320)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:10:50.206-0500
2021/02/20 13:10:50 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:10:50 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:10:50 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:10:50 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 17
2021/02/20 13:10:50 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:50 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:10:50.686-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:50.686-0500
2021-02-20T13:10:50.692-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24403",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:10:50Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:50Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:50.692-0500
2021-02-20T13:10:50.693-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:50 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:10:50.692-0500
2021-02-20T13:10:51.693-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:51 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:51.693-0500
2021-02-20T13:10:51.704-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:51 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:51 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24403",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:10:50Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:50Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:51.703-0500
2021-02-20T13:10:51.704-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:51 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:10:51.704-0500
2021-02-20T13:10:53.704-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:53.704-0500
2021-02-20T13:10:53.716-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24428",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:52Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:52Z",
    "lastTransitionTime": "2021-02-20T18:10:52Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:52Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.716-0500
2021-02-20T13:10:53.716-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"6d9b3281-aaae-4745-9153-fe287091ebf8", ResourceVersion:"24381", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441450, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000ca9540), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ca9560)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000c7b1b8), Selector:(*v1.LabelSelector)(0xc000ca9580), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000c7b2a0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000c7b2a8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000c7b2a9), SecurityContext:(*v1.PodSecurityContext)(0xc000482c40), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000c7b2aa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000c9fbe0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000c7b304), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000c7b308)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:10:53.716-0500
2021-02-20T13:10:53.717-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:10:53.717-0500
2021-02-20T13:10:53.717-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:53.717-0500
2021-02-20T13:10:53.725-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24428",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:52Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:52Z",
    "lastTransitionTime": "2021-02-20T18:10:52Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:52Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.725-0500
2021-02-20T13:10:53.726-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:10:53.726-0500
2021-02-20T13:10:53.726-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:53.726-0500
2021-02-20T13:10:53.732-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8",
  "resourceVersion": "24428",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:10:52Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:52Z",
    "lastTransitionTime": "2021-02-20T18:10:52Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:10:52Z",
    "lastTransitionTime": "2021-02-20T18:10:50Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.732-0500
2021-02-20T13:10:53.732-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"6d9b3281-aaae-4745-9153-fe287091ebf8", ResourceVersion:"24428", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441450, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00067cec0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00067cee0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00067cf00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00067cf40)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0008f1a20), Selector:(*v1.LabelSelector)(0xc00067cf60), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0008f1ae0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0008f1ae8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0008f1ae9), SecurityContext:(*v1.PodSecurityContext)(0xc000472150), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0008f1aea), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000eceb20)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0008f1b44), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0008f1b48)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441452, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441452, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441452, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441450, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:10:53.732-0500
2021/02/20 13:10:53 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:10:53 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:10:53 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:10:53 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:10:53 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 18
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:53 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:10:53 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:10:53 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:10:53 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:10:53 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:10:53 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:10:53 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:10:53 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:10:53 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:10:53 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:10:53 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:10:53 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:10:53.769-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:10:53.768-0500
2021-02-20T13:10:53.769-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:10:53.769-0500
2021-02-20T13:10:53.770-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.770-0500
2021-02-20T13:10:53.794-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "7c19ab3b-768f-4336-96fe-2ba4c53a720a",
  "resourceVersion": "24431",
  "creationTimestamp": "2021-02-20T18:10:53Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:53Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.102.107",
  "clusterIPs": [
   "10.96.102.107"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.794-0500
2021-02-20T13:10:53.795-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"7c19ab3b-768f-4336-96fe-2ba4c53a720a", ResourceVersion:"24431", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441453, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001511920), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001511940)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.102.107", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:10:53.795-0500
2021-02-20T13:10:53.797-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Checking service flask-app: timestamp=2021-02-20T13:10:53.796-0500
2021-02-20T13:10:53.797-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:53.796-0500
2021-02-20T13:10:53.807-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "7c19ab3b-768f-4336-96fe-2ba4c53a720a",
  "resourceVersion": "24431",
  "creationTimestamp": "2021-02-20T18:10:53Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:53Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.102.107",
  "clusterIPs": [
   "10.96.102.107"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.807-0500
2021-02-20T13:10:53.807-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Reading service flask-app: timestamp=2021-02-20T13:10:53.807-0500
2021-02-20T13:10:53.808-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:10:53.808-0500
2021-02-20T13:10:53.822-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:10:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "7c19ab3b-768f-4336-96fe-2ba4c53a720a",
  "resourceVersion": "24431",
  "creationTimestamp": "2021-02-20T18:10:53Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:53Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.102.107",
  "clusterIPs": [
   "10.96.102.107"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:10:53.821-0500
2021-02-20T13:10:53.822-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"7c19ab3b-768f-4336-96fe-2ba4c53a720a", ResourceVersion:"24431", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441453, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001030440), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001030460)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.102.107", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:10:53.822-0500
2021-02-20T13:10:53.822-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:10:53 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.102.107", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30201, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:10:53.822-0500
2021/02/20 13:10:53 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:10:53 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 19
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:53 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:10:53 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:10:53 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:10:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:10:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:10:53 [TRACE] GRPCProvider: Close
2021/02/20 13:10:53 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:10:53.852-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:10:53.855-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51055
2021-02-20T13:10:53.855-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:10:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:10:53 [TRACE] dag/walk: visiting "root"
2021/02/20 13:10:53 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:10:53 [TRACE] vertex "root": visit complete
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 20
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:10:53 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:11:14 [INFO] Terraform version: 0.14.6  
2021/02/20 13:11:14 [INFO] Go runtime version: go1.15.6
2021/02/20 13:11:14 [INFO] CLI args: []string{"/usr/local/bin/terraform", "show"}
2021/02/20 13:11:14 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:11:14 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:11:14 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:11:14 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:11:14 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:11:14 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:11:14 [INFO] CLI command args: []string{"show"}
2021/02/20 13:11:14 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:11:14 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:11:14 [DEBUG] New state was assigned lineage "a1d04a94-750f-e846-8896-8c183d7bdc69"
2021/02/20 13:11:14 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:11:14 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:11:14 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:11:14 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:11:14 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:11:14 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:11:14 [DEBUG] checking for provisioner in "."
2021/02/20 13:11:14 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:11:14 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:11:14 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:11:14 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:11:14 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:11:14 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:11:14 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:11:14 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 13:11:14 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 20
2021/02/20 13:11:14 [DEBUG] backend/local: skipping refresh of managed resources
2021/02/20 13:11:14 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:11:14 [TRACE] backend/local: building context for current working directory
2021/02/20 13:11:14 [TRACE] terraform.NewContext: starting
2021/02/20 13:11:14 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:11:14 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:11:14.867-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:11:14.893-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:11:14.897-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51096
2021-02-20T13:11:14.898-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:11:14.938-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:11:14.938-0500
2021-02-20T13:11:14.965-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin562059743 network=unix timestamp=2021-02-20T13:11:14.965-0500
2021-02-20T13:11:14.966-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:11:15 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:11:15.025-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:11:15 [TRACE] GRPCProvider: Close
2021-02-20T13:11:15.058-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:11:15.060-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51096
2021-02-20T13:11:15.061-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:11:15 [TRACE] terraform.NewContext: complete
2021/02/20 13:11:15 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:11:15 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 13:11:15 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 20
2021/02/20 13:12:33 [INFO] Terraform version: 0.14.6  
2021/02/20 13:12:33 [INFO] Go runtime version: go1.15.6
2021/02/20 13:12:33 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:12:33 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:12:33 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:12:33 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:12:33 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:12:33 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:12:33 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:12:33 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:12:33 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:12:33 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:12:33 [DEBUG] New state was assigned lineage "03f3e2f4-b17f-c3fa-2d8e-e6cd2c5fd2f1"
2021/02/20 13:12:33 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:12:33 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:12:33 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:12:33 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:12:33 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:12:33 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:12:33 [DEBUG] checking for provisioner in "."
2021/02/20 13:12:33 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:12:33 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:12:33 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:12:33 [INFO] backend/local: starting Apply operation
2021/02/20 13:12:33 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:12:33 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:12:33 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:12:33 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:12:33 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 20
2021/02/20 13:12:33 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:12:33 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:12:33 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:12:33 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:12:33 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 20
2021/02/20 13:12:33 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:12:33 [TRACE] backend/local: building context for current working directory
2021/02/20 13:12:33 [TRACE] terraform.NewContext: starting
2021/02/20 13:12:33 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:12:33 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:12:33.629-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:33.662-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:33.667-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51199
2021-02-20T13:12:33.667-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:33.709-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:33.709-0500
2021-02-20T13:12:33.735-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin322259658 network=unix timestamp=2021-02-20T13:12:33.735-0500
2021-02-20T13:12:33.735-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:12:33 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:12:33.809-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:33 [TRACE] GRPCProvider: Close
2021-02-20T13:12:33.851-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:33.853-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51199
2021-02-20T13:12:33.853-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:33 [TRACE] terraform.NewContext: complete
2021/02/20 13:12:33 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:12:33 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:12:33 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:12:33 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:12:33 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:12:33 [TRACE] backend/local: running validation operation
2021/02/20 13:12:33 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:12:33 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:12:33 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:12:33 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:12:33 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:12:33 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:12:33 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:12:33 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:12:33 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:12:33 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:12:33 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:12:33 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:33 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:12:33 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:33 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:12:33 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:12:33 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:12:33 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:12:33 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:33 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:12:33 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:33 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:12:33 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:12:33 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:12:33 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:33 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:12:33 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:33 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:12:33 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:12:33 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:12:33.864-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:33.889-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:33.896-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51200
2021-02-20T13:12:33.896-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:33.938-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:33.937-0500
2021-02-20T13:12:33.963-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:12:33.964-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin492481591 timestamp=2021-02-20T13:12:33.963-0500
2021/02/20 13:12:34 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:12:34.016-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:34 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:12:34 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:12:34 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:12:34 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:12:34 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:12:34 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:12:34 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:12:34 [TRACE] GRPCProvider: Close
2021/02/20 13:12:34 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:12:34.081-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:34.084-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51200
2021-02-20T13:12:34.084-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "root"
2021/02/20 13:12:34 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:12:34 [TRACE] vertex "root": visit complete
2021/02/20 13:12:34 [INFO] backend/local: apply calling Plan
2021/02/20 13:12:34 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:12:34 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:12:34 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_namespace.flaskapp current object
2021/02/20 13:12:34 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:12:34 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:12:34 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:12:34 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:12:34 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:12:34 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:12:34 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:12:34 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:12:34 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:12:34 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:12:34 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:34 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:12:34 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:34 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:12:34 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:12:34 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:12:34 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:12:34 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:12:34 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:12:34 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:34 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:12:34 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:34 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:12:34.086-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:34.109-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:34.117-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51201
2021-02-20T13:12:34.117-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:34.155-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:34.155-0500
2021-02-20T13:12:34.181-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin493465844 network=unix timestamp=2021-02-20T13:12:34.181-0500
2021-02-20T13:12:34.181-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:12:34 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021-02-20T13:12:34.232-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:12:34 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:12:34 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:12:34 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:12:34 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:12:34 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:12:34 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:12:34 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:12:34 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_namespace.flaskapp
2021/02/20 13:12:34 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:12:34 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:12:34 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:12:34 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:12:34 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:12:34 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:12:34 [TRACE] GRPCProvider: Close
2021-02-20T13:12:34.275-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:34.277-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51201
2021-02-20T13:12:34.277-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:34 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:12:34 [TRACE] dag/walk: visiting "root"
2021/02/20 13:12:34 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:12:34 [TRACE] vertex "root": visit complete
2021/02/20 13:12:34 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:12:35 [INFO] backend/local: apply calling Apply
2021/02/20 13:12:35 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:12:35 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:12:35 [TRACE] DiffTransformer starting
2021/02/20 13:12:35 [TRACE] DiffTransformer: found Delete change for kubernetes_namespace.flaskapp 
2021/02/20 13:12:35 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented for destruction by kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:12:35 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:12:35 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:12:35 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] DiffTransformer complete
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:12:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:12:35 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:12:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:12:35 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:12:35 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:35 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:35 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:12:35 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:12:35 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:12:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:12:35 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:12:35 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:12:35 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:12:35 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:12:35 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:12:35 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:12:35 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:12:35 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:12:35 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:12:35 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:12:35 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:12:35 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:12:35 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:35 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:12:35 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:35 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:12:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:12:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:12:35.952-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:35.979-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:35.985-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51202
2021-02-20T13:12:35.985-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:36.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:36.027-0500
2021-02-20T13:12:36.054-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin416937465 network=unix timestamp=2021-02-20T13:12:36.054-0500
2021-02-20T13:12:36.054-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:12:36 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:12:36.108-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:36 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:12:36 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:12:36 [TRACE] GRPCProvider: Configure
2021-02-20T13:12:36.141-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:12:36.141-0500
2021-02-20T13:12:36.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:12:36.143-0500
2021/02/20 13:12:36 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:12:36 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:12:36 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:12:36 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:12:36 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:12:36 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:12:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:12:36 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:12:36 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:12:36 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:12:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:12:36 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:12:36 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:12:36 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:12:36 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Delete change
2021/02/20 13:12:36 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:12:36 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:12:36 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:12:36 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:12:36.147-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [INFO] Deleting namespace: "flask-app": timestamp=2021-02-20T13:12:36.147-0500
2021-02-20T13:12:36.148-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:12:36.148-0500
2021-02-20T13:12:36.148-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.148-0500
2021-02-20T13:12:36.148-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.148-0500
2021-02-20T13:12:36.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24608",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "deletionTimestamp": "2021-02-20T18:12:36Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.216-0500
2021-02-20T13:12:36.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Waiting for state to become: []: timestamp=2021-02-20T13:12:36.216-0500
2021-02-20T13:12:36.217-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:36.217-0500
2021-02-20T13:12:36.226-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24608",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "deletionTimestamp": "2021-02-20T18:12:36Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.226-0500
2021-02-20T13:12:36.227-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:12:36.227-0500
2021-02-20T13:12:36.227-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [TRACE] Waiting 200ms before next try: timestamp=2021-02-20T13:12:36.227-0500
2021-02-20T13:12:36.248-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "7c19ab3b-768f-4336-96fe-2ba4c53a720a"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.248-0500
2021-02-20T13:12:36.248-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:12:36.248-0500
2021-02-20T13:12:36.248-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:36.248-0500
2021-02-20T13:12:36.260-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.260-0500
2021-02-20T13:12:36.260-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:12:36.260-0500
2021/02/20 13:12:36 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:12:36 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:12:36 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 21
2021/02/20 13:12:36 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:36 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:12:36 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:12:36 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:12:36 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:12:36 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:12:36 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:12:36 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:12:36 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:12:36 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:12:36 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:12:36.299-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [INFO] Deleting deployment: "flask-app": timestamp=2021-02-20T13:12:36.299-0500
2021-02-20T13:12:36.300-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.299-0500
2021-02-20T13:12:36.318-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 181
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "6d9b3281-aaae-4745-9153-fe287091ebf8"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.318-0500
2021-02-20T13:12:36.318-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:12:36.318-0500
2021-02-20T13:12:36.318-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:36.318-0500
2021-02-20T13:12:36.323-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 220
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.323-0500
2021-02-20T13:12:36.323-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [INFO] Deployment flask-app deleted: timestamp=2021-02-20T13:12:36.323-0500
2021/02/20 13:12:36 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:12:36 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:12:36 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 22
2021/02/20 13:12:36 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:36 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021-02-20T13:12:36.428-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:36.428-0500
2021-02-20T13:12:36.433-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24608",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "deletionTimestamp": "2021-02-20T18:12:36Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.433-0500
2021-02-20T13:12:36.433-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:12:36.433-0500
2021-02-20T13:12:36.433-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [TRACE] Waiting 400ms before next try: timestamp=2021-02-20T13:12:36.433-0500
2021-02-20T13:12:36.834-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:36.834-0500
2021-02-20T13:12:36.839-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:36 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24608",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "deletionTimestamp": "2021-02-20T18:12:36Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:36.839-0500
2021-02-20T13:12:36.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:12:36.839-0500
2021-02-20T13:12:36.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:36 [TRACE] Waiting 800ms before next try: timestamp=2021-02-20T13:12:36.840-0500
2021-02-20T13:12:37.643-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:37 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:37.643-0500
2021-02-20T13:12:37.653-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:37 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:37 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24608",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "deletionTimestamp": "2021-02-20T18:12:36Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:37.653-0500
2021-02-20T13:12:37.653-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:37 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:12:37.653-0500
2021-02-20T13:12:37.653-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:37 [TRACE] Waiting 1.6s before next try: timestamp=2021-02-20T13:12:37.653-0500
2021-02-20T13:12:39.253-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:39 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:39.253-0500
2021-02-20T13:12:39.259-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:39 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:39 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "42e32f2c-3def-433f-b8eb-f7d1f0bd911c",
  "resourceVersion": "24608",
  "creationTimestamp": "2021-02-20T18:10:50Z",
  "deletionTimestamp": "2021-02-20T18:12:36Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:10:50Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:39.259-0500
2021-02-20T13:12:39.259-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:39 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:12:39.259-0500
2021-02-20T13:12:39.259-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:39 [TRACE] Waiting 3.2s before next try: timestamp=2021-02-20T13:12:39.259-0500
2021/02/20 13:12:40 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:12:40 [TRACE] dag/walk: vertex "root" is waiting for "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:41 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021-02-20T13:12:42.459-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:42 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:42.459-0500
2021-02-20T13:12:42.466-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:42 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 198
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:42 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "namespaces \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "namespaces"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:42.466-0500
2021-02-20T13:12:42.466-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:42 [INFO] Namespace flask-app deleted: timestamp=2021-02-20T13:12:42.466-0500
2021/02/20 13:12:42 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 23
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:42 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": visit complete
2021/02/20 13:12:42 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:12:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:12:42 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:12:42 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:42 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:12:42 [TRACE] GRPCProvider: Close
2021-02-20T13:12:42.492-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:42.496-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51202
2021-02-20T13:12:42.496-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:42 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:12:42 [TRACE] dag/walk: visiting "root"
2021/02/20 13:12:42 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:12:42 [TRACE] vertex "root": visit complete
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 24
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:12:42 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:12:50 [INFO] Terraform version: 0.14.6  
2021/02/20 13:12:50 [INFO] Go runtime version: go1.15.6
2021/02/20 13:12:50 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:12:50 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:12:50 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:12:50 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:12:50 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:12:50 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:12:50 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:12:50 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:12:50 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:12:50 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:12:50 [DEBUG] New state was assigned lineage "4248e46c-2152-be8b-9143-878938a30b42"
2021/02/20 13:12:50 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:12:50 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:12:50 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:12:50 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:12:50 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:12:50 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:12:51 [DEBUG] checking for provisioner in "."
2021/02/20 13:12:51 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:12:51 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:12:51 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:12:51 [INFO] backend/local: starting Apply operation
2021/02/20 13:12:51 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:12:51 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:12:51 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:12:51 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:12:51 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 24
2021/02/20 13:12:51 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:12:51 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:12:51 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:12:51 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:12:51 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 24
2021/02/20 13:12:51 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:12:51 [TRACE] backend/local: building context for current working directory
2021/02/20 13:12:51 [TRACE] terraform.NewContext: starting
2021/02/20 13:12:51 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:12:51 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:12:51.131-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:51.157-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:51.164-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51243
2021-02-20T13:12:51.164-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:51.210-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:51.210-0500
2021-02-20T13:12:51.238-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin577606798 timestamp=2021-02-20T13:12:51.238-0500
2021-02-20T13:12:51.238-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:12:51 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:12:51.298-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:51 [TRACE] GRPCProvider: Close
2021-02-20T13:12:51.339-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:51.342-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51243
2021-02-20T13:12:51.342-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:51 [TRACE] terraform.NewContext: complete
2021/02/20 13:12:51 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:12:51 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:12:51 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:12:51 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:12:51 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:12:51 [TRACE] backend/local: running validation operation
2021/02/20 13:12:51 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:12:51 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:12:51 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:12:51 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:12:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:12:51 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:12:51 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:51 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:12:51.346-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:51.374-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:51.382-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51244
2021-02-20T13:12:51.382-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:51.429-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:51.429-0500
2021-02-20T13:12:51.456-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin009889163 network=unix timestamp=2021-02-20T13:12:51.456-0500
2021-02-20T13:12:51.456-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:12:51 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:12:51 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:12:51.509-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:51 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:12:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:12:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:12:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:12:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:12:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:12:51 [TRACE] GRPCProvider: Close
2021-02-20T13:12:51.570-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:51.572-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51244
2021-02-20T13:12:51.572-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "root"
2021/02/20 13:12:51 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:12:51 [TRACE] vertex "root": visit complete
2021/02/20 13:12:51 [INFO] backend/local: apply calling Plan
2021/02/20 13:12:51 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:12:51 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:12:51 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:12:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:12:51 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:12:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:51 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:12:51 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:51 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:12:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:12:51 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:12:51 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:12:51 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:12:51 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:12:51 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:12:51 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:12:51 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:51 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:12:51.574-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:51.597-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:51.604-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51245
2021-02-20T13:12:51.604-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:51.644-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:51.644-0500
2021-02-20T13:12:51.671-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:12:51.672-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin313096152 network=unix timestamp=2021-02-20T13:12:51.670-0500
2021/02/20 13:12:51 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:12:51.724-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:51 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:12:51 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:12:51 [TRACE] GRPCProvider: Configure
2021-02-20T13:12:51.755-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:51 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:12:51.755-0500
2021-02-20T13:12:51.757-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:51 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:12:51.757-0500
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:12:51 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:51 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:12:51 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:51 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:12:51 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:12:51 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:12:51 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:12:51 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:12:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:51 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:12:51 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:12:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:51 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:12:51 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:12:51 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:12:51 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:12:51 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:51 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:51 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:12:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:12:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:12:51 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:12:51 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:12:51 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:12:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:51 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:12:51 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:12:51 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:12:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:12:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:12:51 [TRACE] GRPCProvider: Close
2021-02-20T13:12:51.785-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 13:12:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:12:51.788-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51245
2021-02-20T13:12:51.788-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:12:51 [TRACE] dag/walk: visiting "root"
2021/02/20 13:12:51 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:12:51 [TRACE] vertex "root": visit complete
2021/02/20 13:12:51 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:12:54 [INFO] backend/local: apply calling Apply
2021/02/20 13:12:54 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:12:54 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:12:54 [TRACE] DiffTransformer starting
2021/02/20 13:12:54 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:12:54 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:12:54 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:12:54 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:12:54 [TRACE] DiffTransformer complete
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:12:54 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:12:54 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:12:54 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:12:54 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:12:54 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:12:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:12:54 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:54 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:12:54 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:12:54 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:54 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:12:54 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:12:54 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app kubernetes_deployment.flask-app kubernetes_deployment.flask-app (expand)]
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:12:54 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:12:54 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:12:54 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:12:54 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:12:54 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:12:54 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:12:54 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:54 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:12:54 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:12:54 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:12:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:12:54.139-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:12:54.172-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:12:54.178-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51248
2021-02-20T13:12:54.178-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:12:54.219-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:12:54.218-0500
2021-02-20T13:12:54.245-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin548310719 network=unix timestamp=2021-02-20T13:12:54.244-0500
2021-02-20T13:12:54.245-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:12:54.301-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:12:54 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:12:54 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:12:54 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:12:54 [TRACE] GRPCProvider: Configure
2021-02-20T13:12:54.331-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:12:54.331-0500
2021-02-20T13:12:54.334-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:12:54.334-0500
2021/02/20 13:12:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:12:54 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:12:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:12:54 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:54 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:12:54 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:12:54 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:54 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:12:54 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:12:54 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:12:54 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:12:54.339-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:12:54.339-0500
2021-02-20T13:12:54.340-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.340-0500
2021/02/20 13:12:54 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:12:54 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:12:54 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:12:54 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:12:54 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:12:54 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:12:54 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:12:54 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:12:54.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:12:54.356-0500
2021-02-20T13:12:54.356-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:12:54.356-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:12:54.356-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:12:54.357-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:12:54.357-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:12:54.357-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:12:54.357-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.358-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:12:54.358-0500
2021-02-20T13:12:54.359-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:12:54.359-0500
2021-02-20T13:12:54.359-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:12:54.359-0500
2021-02-20T13:12:54.359-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:12:54.359-0500
2021-02-20T13:12:54.359-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:12:54.359-0500
2021-02-20T13:12:54.359-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:12:54.359-0500
2021-02-20T13:12:54.360-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0006a53b0), Selector:(*v1.LabelSelector)(0xc000fb5d00), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0006a53c0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0006a53b8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0006a53bd), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0006a53bc), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0006a53b4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0006a53ac)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:12:54.360-0500
2021-02-20T13:12:54.362-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.362-0500
2021-02-20T13:12:54.372-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24658",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.372-0500
2021-02-20T13:12:54.373-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"fe3d5ba3-4f18-4b5c-82cd-5b567406900a", ResourceVersion:"24658", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441574, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0004f5f40), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0004f5f60)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:12:54.373-0500
2021-02-20T13:12:54.373-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:12:54.373-0500
2021-02-20T13:12:54.373-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:54.373-0500
2021-02-20T13:12:54.380-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24659",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.380-0500
2021-02-20T13:12:54.384-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:12:54.384-0500
2021-02-20T13:12:54.384-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:12:54.384-0500
2021-02-20T13:12:54.384-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:12:54.384-0500
2021-02-20T13:12:54.384-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:54.384-0500
2021-02-20T13:12:54.400-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24659",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.399-0500
2021-02-20T13:12:54.400-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:12:54.400-0500
2021-02-20T13:12:54.405-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24658",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.405-0500
2021-02-20T13:12:54.405-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:12:54.405-0500
2021-02-20T13:12:54.406-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:12:54.406-0500
2021-02-20T13:12:54.406-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:54.406-0500
2021-02-20T13:12:54.413-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24658",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.413-0500
2021-02-20T13:12:54.413-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"fe3d5ba3-4f18-4b5c-82cd-5b567406900a", ResourceVersion:"24658", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441574, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000d25b00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d25b20)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:12:54.413-0500
2021/02/20 13:12:54 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:12:54 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:12:54 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:12:54 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 25
2021/02/20 13:12:54 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:54 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:12:54.901-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:54.901-0500
2021-02-20T13:12:54.909-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24680",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:12:54Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:54Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:54.909-0500
2021-02-20T13:12:54.909-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:54 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:12:54.909-0500
2021-02-20T13:12:55.910-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:55 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:55.909-0500
2021-02-20T13:12:55.930-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:55 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:55 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24680",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:12:54Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:54Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:55.930-0500
2021-02-20T13:12:55.930-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:55 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:12:55.930-0500
2021-02-20T13:12:57.934-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:57.934-0500
2021-02-20T13:12:57.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24697",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:56Z",
    "lastTransitionTime": "2021-02-20T18:12:56Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:56Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:57.944-0500
2021-02-20T13:12:57.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"d911fee4-ea17-4c8a-ae09-d2420d3baf04", ResourceVersion:"24659", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441574, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000e12ba0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e12bc0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000e0e398), Selector:(*v1.LabelSelector)(0xc000e12be0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000e0e480), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000e0e488), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000e0e489), SecurityContext:(*v1.PodSecurityContext)(0xc0000da700), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000e0e48a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000e0c5f0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000e0e4e4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000e0e4e8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:12:57.945-0500
2021-02-20T13:12:57.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:12:57.945-0500
2021-02-20T13:12:57.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:57.945-0500
2021-02-20T13:12:57.953-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24697",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:56Z",
    "lastTransitionTime": "2021-02-20T18:12:56Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:56Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:57.952-0500
2021-02-20T13:12:57.953-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:12:57.953-0500
2021-02-20T13:12:57.953-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:57.953-0500
2021-02-20T13:12:57.960-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04",
  "resourceVersion": "24697",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:12:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:56Z",
    "lastTransitionTime": "2021-02-20T18:12:56Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:12:56Z",
    "lastTransitionTime": "2021-02-20T18:12:54Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:57.960-0500
2021-02-20T13:12:57.960-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"d911fee4-ea17-4c8a-ae09-d2420d3baf04", ResourceVersion:"24697", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441574, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0011d44e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011d4500)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0011d4520), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011d4540)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0011d2540), Selector:(*v1.LabelSelector)(0xc0011d4560), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0011d2600), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0011d2608), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0011d2609), SecurityContext:(*v1.PodSecurityContext)(0xc0001bc070), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0011d260a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0011da370)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0011d2664), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0011d2668)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441576, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441576, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441576, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441574, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:12:57.960-0500
2021/02/20 13:12:57 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:12:57 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:12:57 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:12:57 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:12:57 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:12:57 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:12:57 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 26
2021/02/20 13:12:57 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:57 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:12:57 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:12:57 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:12:57 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:12:57 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:12:57 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:12:57 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:12:57 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:12:57 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:12:57 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:12:57 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:12:57 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:12:57 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:12:57 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:12:57 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:12:57 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:12:57 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:12:57.996-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:12:57.996-0500
2021-02-20T13:12:57.997-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30200}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:12:57.997-0500
2021-02-20T13:12:57.997-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30200
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:57.997-0500
2021-02-20T13:12:58.015-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:58 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "453c3877-b21e-496c-8625-ba4acd282f13",
  "resourceVersion": "24701",
  "creationTimestamp": "2021-02-20T18:12:58Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:58Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30200
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.101.45",
  "clusterIPs": [
   "10.96.101.45"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:58.015-0500
2021-02-20T13:12:58.016-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"453c3877-b21e-496c-8625-ba4acd282f13", ResourceVersion:"24701", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441578, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008a3920), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008a3940)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30200}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.101.45", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:12:58.016-0500
2021-02-20T13:12:58.016-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [INFO] Checking service flask-app: timestamp=2021-02-20T13:12:58.016-0500
2021-02-20T13:12:58.016-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:58.016-0500
2021-02-20T13:12:58.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:58 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "453c3877-b21e-496c-8625-ba4acd282f13",
  "resourceVersion": "24701",
  "creationTimestamp": "2021-02-20T18:12:58Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:58Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30200
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.101.45",
  "clusterIPs": [
   "10.96.101.45"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:58.027-0500
2021-02-20T13:12:58.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [INFO] Reading service flask-app: timestamp=2021-02-20T13:12:58.027-0500
2021-02-20T13:12:58.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:12:58.027-0500
2021-02-20T13:12:58.035-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:12:58 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "453c3877-b21e-496c-8625-ba4acd282f13",
  "resourceVersion": "24701",
  "creationTimestamp": "2021-02-20T18:12:58Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:58Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30200
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.101.45",
  "clusterIPs": [
   "10.96.101.45"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:12:58.035-0500
2021-02-20T13:12:58.035-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"453c3877-b21e-496c-8625-ba4acd282f13", ResourceVersion:"24701", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441578, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000730620), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000730640)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30200}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.101.45", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:12:58.035-0500
2021-02-20T13:12:58.035-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:12:58 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.101.45", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30200, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:12:58.035-0500
2021/02/20 13:12:58 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:12:58 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:12:58 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:12:58 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:12:58 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 27
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:58 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:12:58 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:12:58 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:12:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:12:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:12:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:12:58 [TRACE] GRPCProvider: Close
2021-02-20T13:12:58.077-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:12:58.083-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51248
2021-02-20T13:12:58.083-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:12:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:12:58 [TRACE] dag/walk: visiting "root"
2021/02/20 13:12:58 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:12:58 [TRACE] vertex "root": visit complete
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 28
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:12:58 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:13:44 [INFO] Terraform version: 0.14.6  
2021/02/20 13:13:44 [INFO] Go runtime version: go1.15.6
2021/02/20 13:13:44 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:13:44 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:13:44 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:13:44 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:13:44 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:13:44 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:13:44 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:13:44 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:13:44 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:13:44 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:13:44 [DEBUG] New state was assigned lineage "1601103a-9ba0-f069-363f-f2ee4d6681b1"
2021/02/20 13:13:44 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:13:44 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:13:44 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:13:44 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:13:44 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:13:44 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:13:44 [DEBUG] checking for provisioner in "."
2021/02/20 13:13:44 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:13:44 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:13:44 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:13:44 [INFO] backend/local: starting Apply operation
2021/02/20 13:13:44 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:13:44 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:13:44 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:13:44 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:13:44 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 28
2021/02/20 13:13:44 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:13:44 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:13:44 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:13:44 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:13:44 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 28
2021/02/20 13:13:44 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:13:44 [TRACE] backend/local: building context for current working directory
2021/02/20 13:13:44 [TRACE] terraform.NewContext: starting
2021/02/20 13:13:44 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:13:44 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:13:44.324-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:13:44.363-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:13:44.371-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51328
2021-02-20T13:13:44.371-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:13:44.416-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:13:44.416-0500
2021-02-20T13:13:44.445-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin114832079 network=unix timestamp=2021-02-20T13:13:44.445-0500
2021-02-20T13:13:44.445-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:13:44 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:13:44.518-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:13:44 [TRACE] GRPCProvider: Close
2021-02-20T13:13:44.561-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:13:44.564-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51328
2021-02-20T13:13:44.564-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:13:44 [TRACE] terraform.NewContext: complete
2021/02/20 13:13:44 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:13:44 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:13:44 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:13:44 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:13:44 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:13:44 [TRACE] backend/local: running validation operation
2021/02/20 13:13:44 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:13:44 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:13:44 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:13:44 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:13:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:13:44 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:13:44 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:13:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:13:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:13:44 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:13:44 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:13:44 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:13:44 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:13:44 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:13:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:13:44.576-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:13:44.604-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:13:44.612-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51329
2021-02-20T13:13:44.612-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:13:44.663-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:13:44.663-0500
2021-02-20T13:13:44.690-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:13:44.690-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin608089956 network=unix timestamp=2021-02-20T13:13:44.690-0500
2021/02/20 13:13:44 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:13:44.743-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:13:44 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:13:44 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:13:44 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:13:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:13:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:13:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:13:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:13:44 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:13:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:13:44 [TRACE] GRPCProvider: Close
2021/02/20 13:13:44 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:13:44.811-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:13:44.814-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51329
2021-02-20T13:13:44.814-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:13:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "root"
2021/02/20 13:13:44 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:13:44 [TRACE] vertex "root": visit complete
2021/02/20 13:13:44 [INFO] backend/local: apply calling Plan
2021/02/20 13:13:44 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:13:44 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:13:44 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:13:44 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_namespace.flaskapp current object
2021/02/20 13:13:44 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:13:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:13:44 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:13:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:13:44 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:13:44 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:13:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:13:44 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:13:44 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:13:44 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:13:44 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:13:44 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:13:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:13:44.815-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:13:44.840-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:13:44.846-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51330
2021-02-20T13:13:44.846-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:13:44.887-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:13:44.887-0500
2021-02-20T13:13:44.912-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin860518145 timestamp=2021-02-20T13:13:44.912-0500
2021-02-20T13:13:44.913-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:13:44 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:13:44.965-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:13:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:13:44 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:13:44 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:13:44 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:13:44 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:13:44 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:13:44 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:13:44 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_namespace.flaskapp
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:13:44 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:13:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:13:44 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:13:44 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:13:44 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:13:44 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:13:45 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:13:45 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:13:45 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:13:45 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:13:45 [TRACE] GRPCProvider: Close
2021-02-20T13:13:45.008-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:13:45.010-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51330
2021-02-20T13:13:45.010-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:13:45 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:13:45 [TRACE] dag/walk: visiting "root"
2021/02/20 13:13:45 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:13:45 [TRACE] vertex "root": visit complete
2021/02/20 13:13:45 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:13:47 [INFO] backend/local: apply calling Apply
2021/02/20 13:13:47 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:13:47 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:13:47 [TRACE] DiffTransformer starting
2021/02/20 13:13:47 [TRACE] DiffTransformer: found Delete change for kubernetes_namespace.flaskapp 
2021/02/20 13:13:47 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented for destruction by kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:13:47 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:13:47 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:13:47 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] DiffTransformer complete
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:13:47 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:13:47 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:13:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:13:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:13:47 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:13:47 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:13:47 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:13:47 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:13:47 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:13:47 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:13:47 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:13:47 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:13:47 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:13:47 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:13:47 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:13:47 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:13:47 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:13:47 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:13:47 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:13:47 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:13:47 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:13:47 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:13:47 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:13:47 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:13:47 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:13:47 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:13:47 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:13:47 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:13:47 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:13:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:13:47.594-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:13:47.637-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:13:47.649-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51332
2021-02-20T13:13:47.649-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:13:47.704-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:13:47.704-0500
2021-02-20T13:13:47.735-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin779921467 network=unix timestamp=2021-02-20T13:13:47.735-0500
2021-02-20T13:13:47.735-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:13:47 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:13:47 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:13:47 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:13:47.798-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:13:47 [TRACE] GRPCProvider: Configure
2021-02-20T13:13:47.837-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:13:47.837-0500
2021-02-20T13:13:47.844-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:13:47.844-0500
2021/02/20 13:13:47 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:13:47 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:13:47 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:13:47 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:13:47 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:13:47 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:13:47 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:13:47 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:13:47 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:13:47 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:13:47 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:13:47 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:13:47 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:13:47 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:13:47 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:13:47 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:13:47 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Delete change
2021/02/20 13:13:47 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:13:47 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:13:47.850-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [INFO] Deleting namespace: "flask-app": timestamp=2021-02-20T13:13:47.850-0500
2021-02-20T13:13:47.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:47.850-0500
2021-02-20T13:13:47.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:13:47.851-0500
2021-02-20T13:13:47.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:47.851-0500
2021-02-20T13:13:47.882-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:47 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24794",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "deletionTimestamp": "2021-02-20T18:13:47Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:47.882-0500
2021-02-20T13:13:47.882-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Waiting for state to become: []: timestamp=2021-02-20T13:13:47.882-0500
2021-02-20T13:13:47.883-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:47.883-0500
2021-02-20T13:13:47.890-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:47 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24794",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "deletionTimestamp": "2021-02-20T18:13:47Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:47.890-0500
2021-02-20T13:13:47.891-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:13:47.891-0500
2021-02-20T13:13:47.891-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [TRACE] Waiting 200ms before next try: timestamp=2021-02-20T13:13:47.891-0500
2021-02-20T13:13:47.925-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:47 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "453c3877-b21e-496c-8625-ba4acd282f13"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:47.925-0500
2021-02-20T13:13:47.926-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:13:47.925-0500
2021-02-20T13:13:47.926-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:47.926-0500
2021-02-20T13:13:47.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:47 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:47.945-0500
2021-02-20T13:13:47.945-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:47 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:13:47.945-0500
2021/02/20 13:13:47 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:13:47 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:13:47 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 29
2021/02/20 13:13:47 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:13:47 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:13:47 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:13:47 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:13:47 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:13:47 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:13:47 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:13:47 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:13:48 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:13:48 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:13:48 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:13:48.005-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [INFO] Deleting deployment: "flask-app": timestamp=2021-02-20T13:13:48.005-0500
2021-02-20T13:13:48.006-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:48.005-0500
2021-02-20T13:13:48.020-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 181
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "d911fee4-ea17-4c8a-ae09-d2420d3baf04"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:48.020-0500
2021-02-20T13:13:48.020-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:13:48.020-0500
2021-02-20T13:13:48.020-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:48.020-0500
2021-02-20T13:13:48.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 220
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:48.027-0500
2021-02-20T13:13:48.027-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [INFO] Deployment flask-app deleted: timestamp=2021-02-20T13:13:48.027-0500
2021/02/20 13:13:48 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:13:48 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:13:48 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 30
2021/02/20 13:13:48 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:13:48 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021-02-20T13:13:48.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:48.092-0500
2021-02-20T13:13:48.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24794",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "deletionTimestamp": "2021-02-20T18:13:47Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:48.098-0500
2021-02-20T13:13:48.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:13:48.098-0500
2021-02-20T13:13:48.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [TRACE] Waiting 400ms before next try: timestamp=2021-02-20T13:13:48.098-0500
2021-02-20T13:13:48.502-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:48.502-0500
2021-02-20T13:13:48.509-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24794",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "deletionTimestamp": "2021-02-20T18:13:47Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:48.509-0500
2021-02-20T13:13:48.509-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:13:48.509-0500
2021-02-20T13:13:48.509-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:48 [TRACE] Waiting 800ms before next try: timestamp=2021-02-20T13:13:48.509-0500
2021-02-20T13:13:49.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:49 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:49.314-0500
2021-02-20T13:13:49.322-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:49 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:49 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24794",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "deletionTimestamp": "2021-02-20T18:13:47Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:49.322-0500
2021-02-20T13:13:49.322-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:49 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:13:49.322-0500
2021-02-20T13:13:49.322-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:49 [TRACE] Waiting 1.6s before next try: timestamp=2021-02-20T13:13:49.322-0500
2021-02-20T13:13:50.926-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:50 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:50.926-0500
2021-02-20T13:13:50.933-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:50 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:50 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "fe3d5ba3-4f18-4b5c-82cd-5b567406900a",
  "resourceVersion": "24794",
  "creationTimestamp": "2021-02-20T18:12:54Z",
  "deletionTimestamp": "2021-02-20T18:13:47Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:12:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:50.933-0500
2021-02-20T13:13:50.933-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:50 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:13:50.933-0500
2021-02-20T13:13:50.933-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:50 [TRACE] Waiting 3.2s before next try: timestamp=2021-02-20T13:13:50.933-0500
2021/02/20 13:13:52 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 13:13:52 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:13:52 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021-02-20T13:13:54.135-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:13:54.135-0500
2021-02-20T13:13:54.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 198
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:13:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "namespaces \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "namespaces"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:13:54.143-0500
2021-02-20T13:13:54.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:13:54 [INFO] Namespace flask-app deleted: timestamp=2021-02-20T13:13:54.143-0500
2021/02/20 13:13:54 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 31
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:13:54 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": visit complete
2021/02/20 13:13:54 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:13:54 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:13:54 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:13:54 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:13:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:13:54 [TRACE] GRPCProvider: Close
2021-02-20T13:13:54.169-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:13:54.172-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51332
2021-02-20T13:13:54.172-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:13:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:13:54 [TRACE] dag/walk: visiting "root"
2021/02/20 13:13:54 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:13:54 [TRACE] vertex "root": visit complete
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 32
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:13:54 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:14:51 [INFO] Terraform version: 0.14.6  
2021/02/20 13:14:51 [INFO] Go runtime version: go1.15.6
2021/02/20 13:14:51 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:14:51 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:14:51 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:14:51 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:14:51 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:14:51 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:14:51 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:14:51 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:14:51 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:14:51 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:14:51 [DEBUG] New state was assigned lineage "8303e872-486d-cb26-6bf8-e083fa305761"
2021/02/20 13:14:51 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:14:51 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:14:51 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:14:51 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:14:51 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:14:51 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:14:51 [DEBUG] checking for provisioner in "."
2021/02/20 13:14:51 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:14:51 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:14:51 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:14:51 [INFO] backend/local: starting Apply operation
2021/02/20 13:14:51 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:14:51 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:14:51 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:14:51 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:14:51 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 32
2021/02/20 13:14:51 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:14:51 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:14:51 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:14:51 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:14:51 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 32
2021/02/20 13:14:51 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:14:51 [TRACE] backend/local: building context for current working directory
2021/02/20 13:14:51 [TRACE] terraform.NewContext: starting
2021/02/20 13:14:51 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:14:51 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:14:51.241-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:14:51.274-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:14:51.279-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51445
2021-02-20T13:14:51.280-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:14:51.325-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:14:51.324-0500
2021-02-20T13:14:51.351-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin964518608 network=unix timestamp=2021-02-20T13:14:51.351-0500
2021-02-20T13:14:51.351-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:14:51 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:14:51.422-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:14:51 [TRACE] GRPCProvider: Close
2021-02-20T13:14:51.464-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:14:51.466-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51445
2021-02-20T13:14:51.466-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:14:51 [TRACE] terraform.NewContext: complete
2021/02/20 13:14:51 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:14:51 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:14:51 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:14:51 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:14:51 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:14:51 [TRACE] backend/local: running validation operation
2021/02/20 13:14:51 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:14:51 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:14:51 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:14:51 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:14:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:14:51 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:14:51 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:14:51 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:14:51.477-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:14:51.500-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:14:51.506-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51446
2021-02-20T13:14:51.506-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:14:51.547-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:14:51.547-0500
2021-02-20T13:14:51.573-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin820603373 network=unix timestamp=2021-02-20T13:14:51.573-0500
2021-02-20T13:14:51.573-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:14:51 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:14:51.626-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:14:51 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:14:51 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:14:51 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:14:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:14:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:14:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:14:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:14:51 [TRACE] GRPCProvider: Close
2021/02/20 13:14:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:14:51.692-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:14:51.694-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51446
2021-02-20T13:14:51.694-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "root"
2021/02/20 13:14:51 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:14:51 [TRACE] vertex "root": visit complete
2021/02/20 13:14:51 [INFO] backend/local: apply calling Plan
2021/02/20 13:14:51 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:14:51 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:14:51 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:14:51 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:14:51 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:14:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:14:51 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:14:51 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:14:51 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:14:51 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:14:51 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:14:51 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:14:51 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:14:51 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:14:51 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:14:51 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:14:51 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:14:51 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:14:51.696-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:14:51.720-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:14:51.727-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51447
2021-02-20T13:14:51.727-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:14:51.766-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:14:51.766-0500
2021-02-20T13:14:51.792-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin821668466 network=unix timestamp=2021-02-20T13:14:51.792-0500
2021-02-20T13:14:51.792-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:14:51 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:51 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:14:51 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:14:51.845-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:14:51 [TRACE] GRPCProvider: Configure
2021-02-20T13:14:51.876-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:51 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:14:51.876-0500
2021-02-20T13:14:51.877-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:51 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:14:51.877-0500
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:14:51 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:14:51 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:14:51 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:14:51 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:14:51 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:14:51 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:14:51 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:14:51 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:14:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:51 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:14:51 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:14:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:51 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:14:51 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:14:51 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:14:51 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:14:51 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:14:51 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:14:51 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:14:51 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:14:51 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:14:51 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:14:51 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:14:51 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:14:51 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:51 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:14:51 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:14:51 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:14:51 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:14:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:14:51 [TRACE] GRPCProvider: Close
2021/02/20 13:14:51 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:14:51.900-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:14:51.902-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51447
2021-02-20T13:14:51.902-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:14:51 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:14:51 [TRACE] dag/walk: visiting "root"
2021/02/20 13:14:51 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:14:51 [TRACE] vertex "root": visit complete
2021/02/20 13:14:51 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:14:53 [INFO] backend/local: apply calling Apply
2021/02/20 13:14:53 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:14:53 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:14:53 [TRACE] DiffTransformer starting
2021/02/20 13:14:53 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:14:53 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:14:53 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:14:53 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:14:53 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:14:53 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:14:53 [TRACE] DiffTransformer complete
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:14:53 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:14:53 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:14:53 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:14:53 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:14:53 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:14:53 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:14:53 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:14:53 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:14:53 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:14:53 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:14:53 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:14:53 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:14:53 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:14:53 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app kubernetes_deployment.flask-app kubernetes_deployment.flask-app (expand)]
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:14:53 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:14:53 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:14:53 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:14:53 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:14:53 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:14:53 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:14:53 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:14:53 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:14:53 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:14:53 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:14:53 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:14:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:14:53.867-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:14:53.896-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:14:53.905-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51448
2021-02-20T13:14:53.905-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:14:53.951-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:14:53.951-0500
2021-02-20T13:14:53.977-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin159275719 network=unix timestamp=2021-02-20T13:14:53.977-0500
2021-02-20T13:14:53.977-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:14:54 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:14:54.031-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:14:54 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:14:54 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:14:54 [TRACE] GRPCProvider: Configure
2021-02-20T13:14:54.065-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:14:54.065-0500
2021-02-20T13:14:54.066-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:14:54.066-0500
2021/02/20 13:14:54 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:14:54 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:14:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:14:54 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:14:54 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:14:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:14:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:14:54 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:54 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:14:54 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:14:54 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:54 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:14:54 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:14:54 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:14:54 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:14:54.073-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:14:54.073-0500
2021-02-20T13:14:54.076-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.076-0500
2021/02/20 13:14:54 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:14:54 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:14:54 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:14:54 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:14:54 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:14:54 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:14:54 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:14:54 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:14:54.091-0500
2021-02-20T13:14:54.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:14:54.092-0500
2021-02-20T13:14:54.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:14:54.092-0500
2021-02-20T13:14:54.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:14:54.092-0500
2021-02-20T13:14:54.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:14:54.092-0500
2021-02-20T13:14:54.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:14:54.092-0500
2021-02-20T13:14:54.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:14:54.092-0500
2021-02-20T13:14:54.093-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:14:54.093-0500
2021-02-20T13:14:54.093-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:14:54.093-0500
2021-02-20T13:14:54.093-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:14:54.093-0500
2021-02-20T13:14:54.093-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:14:54.093-0500
2021-02-20T13:14:54.094-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00094d34c), Selector:(*v1.LabelSelector)(0xc00046e880), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00094d360), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00094d354), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00094d359), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00094d358), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00094d350), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00094d348)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:14:54.094-0500
2021-02-20T13:14:54.096-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.096-0500
2021-02-20T13:14:54.104-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "24929",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.104-0500
2021-02-20T13:14:54.105-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"ba2e60b5-f830-4c6f-8861-84f01e90d4a7", ResourceVersion:"24929", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441694, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0001a2de0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001a2e00)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:14:54.105-0500
2021-02-20T13:14:54.105-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:14:54.105-0500
2021-02-20T13:14:54.106-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:54.106-0500
2021-02-20T13:14:54.118-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "24929",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.118-0500
2021-02-20T13:14:54.118-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:14:54.118-0500
2021-02-20T13:14:54.118-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:14:54.118-0500
2021-02-20T13:14:54.118-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:54.118-0500
2021-02-20T13:14:54.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "24929",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.134-0500
2021-02-20T13:14:54.134-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"ba2e60b5-f830-4c6f-8861-84f01e90d4a7", ResourceVersion:"24929", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441694, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000732a60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000732a80)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:14:54.134-0500
2021/02/20 13:14:54 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:14:54 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:14:54 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:14:54 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 33
2021/02/20 13:14:54 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-20T13:14:54.139-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24932",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.139-0500
2021-02-20T13:14:54.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:14:54.143-0500
2021-02-20T13:14:54.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:14:54.143-0500
2021-02-20T13:14:54.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:14:54.143-0500
2021-02-20T13:14:54.143-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:54.143-0500
2021/02/20 13:14:54 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:14:54.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24932",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.184-0500
2021-02-20T13:14:54.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:14:54.185-0500
2021-02-20T13:14:54.689-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:54.689-0500
2021-02-20T13:14:54.702-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24950",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:14:54Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:54Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:54.701-0500
2021-02-20T13:14:54.702-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:54 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:14:54.701-0500
2021-02-20T13:14:55.706-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:55 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:55.705-0500
2021-02-20T13:14:55.719-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:55 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3527
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:55 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24964",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:55Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 1,
  "availableReplicas": 1,
  "unavailableReplicas": 1,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:14:54Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:55Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:55.718-0500
2021-02-20T13:14:55.719-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:55 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:14:55.719-0500
2021-02-20T13:14:57.722-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:57.722-0500
2021-02-20T13:14:57.736-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24968",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:56Z",
    "lastTransitionTime": "2021-02-20T18:14:56Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:56Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.736-0500
2021-02-20T13:14:57.737-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"698ed9a9-e208-4c00-9d70-5d9b7f0d320c", ResourceVersion:"24932", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441694, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc00105c9c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00105c9e0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0008dfb88), Selector:(*v1.LabelSelector)(0xc00105ca00), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0008dfc70), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0008dfc78), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0008dfc79), SecurityContext:(*v1.PodSecurityContext)(0xc00127ae00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0008dfc7a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000f80ed0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0008dfcd4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0008dfcd8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:14:57.737-0500
2021-02-20T13:14:57.737-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:14:57.737-0500
2021-02-20T13:14:57.737-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:57.737-0500
2021-02-20T13:14:57.747-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24968",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:56Z",
    "lastTransitionTime": "2021-02-20T18:14:56Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:56Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.747-0500
2021-02-20T13:14:57.747-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:14:57.747-0500
2021-02-20T13:14:57.747-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:57.747-0500
2021-02-20T13:14:57.753-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c",
  "resourceVersion": "24968",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:14:56Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:56Z",
    "lastTransitionTime": "2021-02-20T18:14:56Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:14:56Z",
    "lastTransitionTime": "2021-02-20T18:14:54Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.753-0500
2021-02-20T13:14:57.754-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"698ed9a9-e208-4c00-9d70-5d9b7f0d320c", ResourceVersion:"24968", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441694, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000b38ba0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b38bc0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000b38be0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b38c00)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000cab710), Selector:(*v1.LabelSelector)(0xc000b38c20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000cab7d0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000cab7d8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000cab7d9), SecurityContext:(*v1.PodSecurityContext)(0xc0003b8380), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000cab7da), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc001140f30)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000cab834), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000cab838)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441696, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441696, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441696, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441694, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:14:57.754-0500
2021/02/20 13:14:57 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:14:57 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:14:57 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:14:57 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:14:57 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 34
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:14:57 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:14:57 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:14:57 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:14:57 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:14:57 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:14:57 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:14:57 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:14:57 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:14:57 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:14:57 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:14:57 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:14:57 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:14:57.793-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:14:57.793-0500
2021-02-20T13:14:57.794-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:14:57.794-0500
2021-02-20T13:14:57.795-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.794-0500
2021-02-20T13:14:57.816-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "a4992b9f-b378-4532-93bc-9be02caf29a6",
  "resourceVersion": "24976",
  "creationTimestamp": "2021-02-20T18:14:57Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:57Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.24.231",
  "clusterIPs": [
   "10.96.24.231"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.816-0500
2021-02-20T13:14:57.817-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"a4992b9f-b378-4532-93bc-9be02caf29a6", ResourceVersion:"24976", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441697, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000fe3f20), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fe3f40)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.24.231", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:14:57.817-0500
2021-02-20T13:14:57.818-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Checking service flask-app: timestamp=2021-02-20T13:14:57.817-0500
2021-02-20T13:14:57.818-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:57.818-0500
2021-02-20T13:14:57.827-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "a4992b9f-b378-4532-93bc-9be02caf29a6",
  "resourceVersion": "24976",
  "creationTimestamp": "2021-02-20T18:14:57Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:57Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.24.231",
  "clusterIPs": [
   "10.96.24.231"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.827-0500
2021-02-20T13:14:57.828-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Reading service flask-app: timestamp=2021-02-20T13:14:57.827-0500
2021-02-20T13:14:57.828-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:14:57.828-0500
2021-02-20T13:14:57.839-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:14:57 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "a4992b9f-b378-4532-93bc-9be02caf29a6",
  "resourceVersion": "24976",
  "creationTimestamp": "2021-02-20T18:14:57Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:57Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.24.231",
  "clusterIPs": [
   "10.96.24.231"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:14:57.839-0500
2021-02-20T13:14:57.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"a4992b9f-b378-4532-93bc-9be02caf29a6", ResourceVersion:"24976", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441697, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0011d87c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011d87e0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.24.231", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:14:57.839-0500
2021-02-20T13:14:57.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:14:57 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.24.231", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:14:57.840-0500
2021/02/20 13:14:57 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:14:57 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 35
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:14:57 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:14:57 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:14:57 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:14:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:14:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:14:57 [TRACE] GRPCProvider: Close
2021/02/20 13:14:57 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:14:57.869-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:14:57.873-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51448
2021-02-20T13:14:57.873-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:14:57 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:14:57 [TRACE] dag/walk: visiting "root"
2021/02/20 13:14:57 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:14:57 [TRACE] vertex "root": visit complete
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 36
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:14:57 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:15:34 [INFO] Terraform version: 0.14.6  
2021/02/20 13:15:34 [INFO] Go runtime version: go1.15.6
2021/02/20 13:15:34 [INFO] CLI args: []string{"/usr/local/bin/terraform", "terraform", "de", "terraform"}
2021/02/20 13:15:34 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:15:34 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:15:34 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:15:34 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:15:34 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:15:34 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:15:34 [INFO] CLI command args: []string{"terraform", "de", "terraform"}
2021/02/20 13:15:35 [INFO] Terraform version: 0.14.6  
2021/02/20 13:15:35 [INFO] Go runtime version: go1.15.6
2021/02/20 13:15:35 [INFO] CLI args: []string{"/usr/local/bin/terraform", "terraform", "s", "destroy"}
2021/02/20 13:15:35 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:15:35 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:15:35 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:15:35 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:15:35 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:15:35 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:15:35 [INFO] CLI command args: []string{"terraform", "s", "destroy"}
2021/02/20 13:15:37 [INFO] Terraform version: 0.14.6  
2021/02/20 13:15:37 [INFO] Go runtime version: go1.15.6
2021/02/20 13:15:37 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:15:37 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:15:37 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:15:37 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:15:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:15:37 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:15:37 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:15:37 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:15:37 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:15:37 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:15:37 [DEBUG] New state was assigned lineage "53d427d9-15d0-75aa-1a03-1c9774a0dff0"
2021/02/20 13:15:37 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:15:37 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:15:37 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:15:37 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:15:37 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:15:37 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:15:37 [DEBUG] checking for provisioner in "."
2021/02/20 13:15:37 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:15:37 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:15:37 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:15:37 [INFO] backend/local: starting Apply operation
2021/02/20 13:15:37 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:15:37 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:15:37 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:15:37 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:15:37 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 36
2021/02/20 13:15:37 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:15:37 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:15:37 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:15:37 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:15:37 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 36
2021/02/20 13:15:37 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:15:37 [TRACE] backend/local: building context for current working directory
2021/02/20 13:15:37 [TRACE] terraform.NewContext: starting
2021/02/20 13:15:37 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:15:37 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:15:37.566-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:15:37.604-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:15:37.611-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51516
2021-02-20T13:15:37.611-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:15:37.659-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:15:37.659-0500
2021-02-20T13:15:37.694-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin839397307 network=unix timestamp=2021-02-20T13:15:37.694-0500
2021-02-20T13:15:37.694-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:15:37 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:15:37.772-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:15:37 [TRACE] GRPCProvider: Close
2021-02-20T13:15:37.820-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:15:37.823-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51516
2021-02-20T13:15:37.824-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:15:37 [TRACE] terraform.NewContext: complete
2021/02/20 13:15:37 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:15:37 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:15:37 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:15:37 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:15:37 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:15:37 [TRACE] backend/local: running validation operation
2021/02/20 13:15:37 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:15:37 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:15:37 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:15:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:15:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:15:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:15:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:15:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:15:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:15:37 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:15:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:15:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:15:37 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:15:37 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:15:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:15:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:15:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:15:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:15:37 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:15:37 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:15:37 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:15:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:37 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:15:37 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:37 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:15:37 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:15:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:15:37.837-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:15:37.864-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:15:37.870-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51517
2021-02-20T13:15:37.870-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:15:37.913-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:15:37.913-0500
2021-02-20T13:15:37.943-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin724481504 network=unix timestamp=2021-02-20T13:15:37.943-0500
2021-02-20T13:15:37.943-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:15:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:15:38.000-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:15:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:15:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:15:38 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:15:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:15:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:15:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:15:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:15:38 [TRACE] GRPCProvider: Close
2021/02/20 13:15:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:15:38.069-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:15:38.072-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51517
2021-02-20T13:15:38.072-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "root"
2021/02/20 13:15:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:15:38 [TRACE] vertex "root": visit complete
2021/02/20 13:15:38 [INFO] backend/local: apply calling Plan
2021/02/20 13:15:38 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:15:38 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:15:38 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:15:38 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:15:38 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_namespace.flaskapp current object
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:15:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:15:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:15:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:15:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:15:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:15:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:15:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:15:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:15:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:15:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:15:38 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:15:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:15:38 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:15:38 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:15:38 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:15:38 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:15:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:38 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:15:38.073-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:15:38.099-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:15:38.106-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51518
2021-02-20T13:15:38.106-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:15:38.148-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:15:38.148-0500
2021-02-20T13:15:38.174-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:15:38.174-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin064609877 network=unix timestamp=2021-02-20T13:15:38.174-0500
2021-02-20T13:15:38.230-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:15:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:15:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:15:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:15:38 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:15:38 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:15:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:15:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:15:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:15:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:15:38 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_namespace.flaskapp
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:15:38 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:15:38 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:15:38 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:15:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:15:38 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:15:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:15:38 [TRACE] GRPCProvider: Close
2021-02-20T13:15:38.275-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:15:38.277-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51518
2021-02-20T13:15:38.277-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:15:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:15:38 [TRACE] dag/walk: visiting "root"
2021/02/20 13:15:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:15:38 [TRACE] vertex "root": visit complete
2021/02/20 13:15:38 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:15:40 [INFO] backend/local: apply calling Apply
2021/02/20 13:15:40 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:15:40 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:15:40 [TRACE] DiffTransformer starting
2021/02/20 13:15:40 [TRACE] DiffTransformer: found Delete change for kubernetes_namespace.flaskapp 
2021/02/20 13:15:40 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented for destruction by kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:15:40 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:15:40 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:15:40 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] DiffTransformer complete
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:15:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:15:40 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:15:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:15:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:15:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:15:40 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:15:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:15:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:15:40 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:15:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:15:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:15:40 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:15:40 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:15:40 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:15:40 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:15:40 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:15:40 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:15:40 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:15:40 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:15:40 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:15:40 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:15:40 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:15:40 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:15:40 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:15:40 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:40 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:15:40 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:40 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:15:40 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:15:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:15:40.255-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:15:40.280-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:15:40.287-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51520
2021-02-20T13:15:40.287-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:15:40.329-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:15:40.328-0500
2021-02-20T13:15:40.359-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:15:40.359-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin706023551 network=unix timestamp=2021-02-20T13:15:40.359-0500
2021/02/20 13:15:40 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:15:40.412-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:15:40 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:15:40 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:15:40 [TRACE] GRPCProvider: Configure
2021-02-20T13:15:40.443-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:15:40.443-0500
2021-02-20T13:15:40.445-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:15:40.445-0500
2021/02/20 13:15:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:15:40 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:15:40 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:15:40 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:15:40 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:15:40 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:15:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:15:40 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:15:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:15:40 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:15:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:15:40 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:15:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:15:40 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:15:40 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Delete change
2021/02/20 13:15:40 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:15:40 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:15:40 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:15:40 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:15:40.448-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [INFO] Deleting namespace: "flask-app": timestamp=2021-02-20T13:15:40.448-0500
2021-02-20T13:15:40.448-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:15:40.448-0500
2021-02-20T13:15:40.448-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.448-0500
2021-02-20T13:15:40.448-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.448-0500
2021-02-20T13:15:40.474-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "25050",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "deletionTimestamp": "2021-02-20T18:15:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.474-0500
2021-02-20T13:15:40.474-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Waiting for state to become: []: timestamp=2021-02-20T13:15:40.474-0500
2021-02-20T13:15:40.474-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:40.474-0500
2021-02-20T13:15:40.486-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "25050",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "deletionTimestamp": "2021-02-20T18:15:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.485-0500
2021-02-20T13:15:40.487-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:15:40.487-0500
2021-02-20T13:15:40.487-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [TRACE] Waiting 200ms before next try: timestamp=2021-02-20T13:15:40.487-0500
2021-02-20T13:15:40.519-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "a4992b9f-b378-4532-93bc-9be02caf29a6"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.519-0500
2021-02-20T13:15:40.519-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:15:40.519-0500
2021-02-20T13:15:40.519-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:40.519-0500
2021-02-20T13:15:40.543-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.543-0500
2021-02-20T13:15:40.543-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:15:40.543-0500
2021/02/20 13:15:40 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:15:40 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:15:40 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 37
2021/02/20 13:15:40 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:15:40 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:15:40 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:15:40 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:15:40 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:15:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:15:40 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:15:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:15:40 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:15:40 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:15:40 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:15:40.590-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [INFO] Deleting deployment: "flask-app": timestamp=2021-02-20T13:15:40.590-0500
2021-02-20T13:15:40.590-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.590-0500
2021-02-20T13:15:40.622-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 181
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "698ed9a9-e208-4c00-9d70-5d9b7f0d320c"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.622-0500
2021-02-20T13:15:40.623-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:15:40.622-0500
2021-02-20T13:15:40.623-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:40.623-0500
2021-02-20T13:15:40.634-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 220
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.633-0500
2021-02-20T13:15:40.634-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [INFO] Deployment flask-app deleted: timestamp=2021-02-20T13:15:40.634-0500
2021/02/20 13:15:40 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:15:40 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:15:40 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 38
2021/02/20 13:15:40 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:15:40 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021-02-20T13:15:40.689-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:40.689-0500
2021-02-20T13:15:40.695-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "25050",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "deletionTimestamp": "2021-02-20T18:15:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:40.695-0500
2021-02-20T13:15:40.696-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:15:40.695-0500
2021-02-20T13:15:40.696-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:40 [TRACE] Waiting 400ms before next try: timestamp=2021-02-20T13:15:40.695-0500
2021-02-20T13:15:41.100-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:41.100-0500
2021-02-20T13:15:41.108-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "25050",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "deletionTimestamp": "2021-02-20T18:15:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:41.108-0500
2021-02-20T13:15:41.108-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:15:41.108-0500
2021-02-20T13:15:41.108-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [TRACE] Waiting 800ms before next try: timestamp=2021-02-20T13:15:41.108-0500
2021-02-20T13:15:41.913-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:41.912-0500
2021-02-20T13:15:41.933-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "25050",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "deletionTimestamp": "2021-02-20T18:15:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:41.933-0500
2021-02-20T13:15:41.934-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:15:41.933-0500
2021-02-20T13:15:41.934-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:41 [TRACE] Waiting 1.6s before next try: timestamp=2021-02-20T13:15:41.934-0500
2021-02-20T13:15:43.537-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:43 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:43.537-0500
2021-02-20T13:15:43.545-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:43 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:43 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "ba2e60b5-f830-4c6f-8861-84f01e90d4a7",
  "resourceVersion": "25050",
  "creationTimestamp": "2021-02-20T18:14:54Z",
  "deletionTimestamp": "2021-02-20T18:15:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:14:54Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:43.545-0500
2021-02-20T13:15:43.545-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:43 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:15:43.545-0500
2021-02-20T13:15:43.545-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:43 [TRACE] Waiting 3.2s before next try: timestamp=2021-02-20T13:15:43.545-0500
2021/02/20 13:15:45 [TRACE] dag/walk: vertex "root" is waiting for "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:15:45 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:15:45 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021-02-20T13:15:46.745-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:46 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:15:46.745-0500
2021-02-20T13:15:46.752-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:46 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 198
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:15:46 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "namespaces \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "namespaces"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:15:46.752-0500
2021-02-20T13:15:46.752-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:15:46 [INFO] Namespace flask-app deleted: timestamp=2021-02-20T13:15:46.752-0500
2021/02/20 13:15:46 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 39
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:15:46 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": visit complete
2021/02/20 13:15:46 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:15:46 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:15:46 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:15:46 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:15:46 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:15:46 [TRACE] GRPCProvider: Close
2021-02-20T13:15:46.780-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:15:46.783-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51520
2021-02-20T13:15:46.783-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:15:46 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:15:46 [TRACE] dag/walk: visiting "root"
2021/02/20 13:15:46 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:15:46 [TRACE] vertex "root": visit complete
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 40
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:15:46 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:15:53 [INFO] Terraform version: 0.14.6  
2021/02/20 13:15:53 [INFO] Go runtime version: go1.15.6
2021/02/20 13:15:53 [INFO] CLI args: []string{"/usr/local/bin/terraform", "fmt"}
2021/02/20 13:15:53 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:15:53 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:15:53 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:15:53 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:15:53 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:15:53 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:15:53 [INFO] CLI command args: []string{"fmt"}
2021/02/20 13:15:53 [TRACE] terraform fmt: looking for files in .
2021/02/20 13:15:53 [TRACE] terraform fmt: Formatting kubernetes.tf
2021/02/20 13:15:57 [INFO] Terraform version: 0.14.6  
2021/02/20 13:15:57 [INFO] Go runtime version: go1.15.6
2021/02/20 13:15:57 [INFO] CLI args: []string{"/usr/local/bin/terraform", "terraform", "vali", "terraform"}
2021/02/20 13:15:57 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:15:57 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:15:57 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:15:57 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:15:57 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:15:57 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:15:57 [INFO] CLI command args: []string{"terraform", "vali", "terraform"}
2021/02/20 13:15:58 [INFO] Terraform version: 0.14.6  
2021/02/20 13:15:58 [INFO] Go runtime version: go1.15.6
2021/02/20 13:15:58 [INFO] CLI args: []string{"/usr/local/bin/terraform", "validate"}
2021/02/20 13:15:58 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:15:58 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:15:58 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:15:58 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:15:58 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:15:58 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:15:58 [INFO] CLI command args: []string{"validate"}
2021/02/20 13:15:58 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:15:58 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:15:58 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:15:58 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:15:58 [DEBUG] checking for provisioner in "."
2021/02/20 13:15:58 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:15:58 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:15:58 [TRACE] terraform.NewContext: starting
2021/02/20 13:15:58 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:15:58 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:15:58.321-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:15:58.349-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:15:58.354-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51617
2021-02-20T13:15:58.354-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:15:58.399-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:15:58.399-0500
2021-02-20T13:15:58.428-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin541407996 network=unix timestamp=2021-02-20T13:15:58.427-0500
2021-02-20T13:15:58.428-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:15:58 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:15:58.485-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:15:58 [TRACE] GRPCProvider: Close
2021-02-20T13:15:58.521-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:15:58.524-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51617
2021-02-20T13:15:58.524-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:15:58 [TRACE] terraform.NewContext: complete
2021/02/20 13:15:58 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:15:58 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:15:58 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:15:58 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:15:58 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:15:58 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:15:58 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:15:58 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:15:58 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:15:58 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:15:58 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:15:58 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:58 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:15:58 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:58 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:15:58 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:15:58 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:15:58 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:15:58 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:15:58 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:58 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:15:58 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:15:58 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:15:58 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:15:58 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:58 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:15:58 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:15:58 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:15:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:15:58.527-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:15:58.553-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:15:58.559-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51618
2021-02-20T13:15:58.559-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:15:58.603-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:15:58.603-0500
2021-02-20T13:15:58.629-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin319071553 timestamp=2021-02-20T13:15:58.629-0500
2021-02-20T13:15:58.629-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:15:58.684-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:15:58 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:15:58 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:15:58 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:15:58 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:15:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:15:58 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:15:58 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:15:58 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:15:58 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:15:58 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:15:58 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:15:58 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:15:58 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:15:58 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:15:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:15:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:15:58 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:15:58 [TRACE] GRPCProvider: Close
2021-02-20T13:15:58.750-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:15:58.754-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51618
2021-02-20T13:15:58.754-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:15:58 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:15:58 [TRACE] dag/walk: visiting "root"
2021/02/20 13:15:58 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:15:58 [TRACE] vertex "root": visit complete
2021/02/20 13:16:05 [INFO] Terraform version: 0.14.6  
2021/02/20 13:16:05 [INFO] Go runtime version: go1.15.6
2021/02/20 13:16:05 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2021/02/20 13:16:05 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:16:05 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:16:05 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:16:05 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:16:05 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:16:05 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:16:05 [INFO] CLI command args: []string{"init"}
2021/02/20 13:16:05 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:16:05 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:16:05 [DEBUG] New state was assigned lineage "897a6f4a-aba5-274d-64b4-e8b98769160f"
2021/02/20 13:16:05 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:16:05 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:16:05 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:16:05 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:16:05 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:16:05 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:16:05 [DEBUG] checking for provisioner in "."
2021/02/20 13:16:05 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:16:05 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:16:05 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:16:05 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:16:05 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 13:16:05 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 40
2021/02/20 13:16:05 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2021/02/20 13:16:05 [TRACE] HTTP client GET request to https://registry.terraform.io/.well-known/terraform.json
2021/02/20 13:16:05 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/02/20 13:16:05 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/hashicorp/kubernetes/versions
2021/02/20 13:16:05 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:16:05 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:16:05 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:16:05 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:16:11 [INFO] Terraform version: 0.14.6  
2021/02/20 13:16:11 [INFO] Go runtime version: go1.15.6
2021/02/20 13:16:11 [INFO] CLI args: []string{"/usr/local/bin/terraform", "terraform", "app", "terraform"}
2021/02/20 13:16:11 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:16:11 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:16:11 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:16:11 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:16:11 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:16:11 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:16:11 [INFO] CLI command args: []string{"terraform", "app", "terraform"}
2021/02/20 13:16:12 [INFO] Terraform version: 0.14.6  
2021/02/20 13:16:12 [INFO] Go runtime version: go1.15.6
2021/02/20 13:16:12 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:16:12 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:16:12 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:16:12 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:16:12 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:16:12 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:16:12 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:16:12 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:16:12 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:16:12 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:16:12 [DEBUG] New state was assigned lineage "59afb080-d426-4a63-1099-b773967c7adc"
2021/02/20 13:16:12 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:16:12 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:16:12 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:16:12 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:16:12 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:16:12 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:16:12 [DEBUG] checking for provisioner in "."
2021/02/20 13:16:12 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:16:12 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:16:12 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:16:12 [INFO] backend/local: starting Apply operation
2021/02/20 13:16:12 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:16:12 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:16:12 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:16:12 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:16:12 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 40
2021/02/20 13:16:12 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:16:12 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:16:12 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:16:12 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:16:12 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 40
2021/02/20 13:16:12 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:16:12 [TRACE] backend/local: building context for current working directory
2021/02/20 13:16:12 [TRACE] terraform.NewContext: starting
2021/02/20 13:16:12 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:16:12 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:16:12.180-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:16:12.207-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:16:12.213-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51699
2021-02-20T13:16:12.213-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:16:12.253-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:16:12.253-0500
2021-02-20T13:16:12.281-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin833896382 network=unix timestamp=2021-02-20T13:16:12.281-0500
2021-02-20T13:16:12.281-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:16:12 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:16:12.346-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:16:12 [TRACE] GRPCProvider: Close
2021-02-20T13:16:12.378-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:16:12.381-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51699
2021-02-20T13:16:12.381-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:16:12 [TRACE] terraform.NewContext: complete
2021/02/20 13:16:12 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:16:12 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:16:12 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:16:12 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:16:12 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:16:12 [TRACE] backend/local: running validation operation
2021/02/20 13:16:12 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:16:12 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:16:12 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:16:12 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:16:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:16:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:16:12 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:16:12 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:16:12.384-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:16:12.410-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:16:12.417-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51700
2021-02-20T13:16:12.417-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:16:12.459-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:16:12.459-0500
2021-02-20T13:16:12.488-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:16:12.488-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin532959507 timestamp=2021-02-20T13:16:12.488-0500
2021/02/20 13:16:12 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:16:12.542-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:16:12 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:16:12 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:16:12 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:16:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:16:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:16:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:16:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:16:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:16:12 [TRACE] GRPCProvider: Close
2021-02-20T13:16:12.604-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:16:12.606-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51700
2021-02-20T13:16:12.606-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "root"
2021/02/20 13:16:12 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:16:12 [TRACE] vertex "root": visit complete
2021/02/20 13:16:12 [INFO] backend/local: apply calling Plan
2021/02/20 13:16:12 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:16:12 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:16:12 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:16:12 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:16:12 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:16:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:16:12 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:16:12 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:16:12 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:16:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:16:12 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:16:12 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:16:12 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:16:12 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:16:12 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:16:12 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:16:12 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:16:12 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:16:12.609-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:16:12.633-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:16:12.638-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51701
2021-02-20T13:16:12.638-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:16:12.682-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:16:12.682-0500
2021-02-20T13:16:12.707-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin107610744 network=unix timestamp=2021-02-20T13:16:12.707-0500
2021-02-20T13:16:12.707-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:16:12 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:12 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021-02-20T13:16:12.763-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:16:12 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:16:12 [TRACE] GRPCProvider: Configure
2021-02-20T13:16:12.791-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:12 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:16:12.791-0500
2021-02-20T13:16:12.793-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:12 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:16:12.793-0500
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:16:12 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:16:12 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:16:12 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:16:12 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:16:12 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:16:12 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:16:12 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:16:12 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:16:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:12 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:16:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:16:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:16:12 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:16:12 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:16:12 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:16:12 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:16:12 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:16:12 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:16:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:16:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:16:12 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:16:12 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:16:12 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:16:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:12 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:16:12 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:16:12 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:16:12 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:16:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:16:12 [TRACE] GRPCProvider: Close
2021-02-20T13:16:12.827-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 13:16:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:16:12.830-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51701
2021-02-20T13:16:12.830-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:16:12 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:16:12 [TRACE] dag/walk: visiting "root"
2021/02/20 13:16:12 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:16:12 [TRACE] vertex "root": visit complete
2021/02/20 13:16:12 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:16:14 [INFO] backend/local: apply calling Apply
2021/02/20 13:16:14 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:16:14 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:16:14 [TRACE] DiffTransformer starting
2021/02/20 13:16:14 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:16:14 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:16:14 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:16:14 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:16:14 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:16:14 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:16:14 [TRACE] DiffTransformer complete
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:16:14 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:16:14 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:16:14 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:16:14 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:16:14 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:16:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:16:14 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:16:14 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:16:14 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:16:14 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:16:14 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:16:14 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:16:14 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:16:14 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:16:14 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:16:14 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:16:14 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:16:14 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:16:14 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:16:14 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:16:14 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:16:14 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:16:14 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:16:14 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:16:14 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:16:14 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:16:14.980-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:16:15.008-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:16:15.016-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51702
2021-02-20T13:16:15.016-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:16:15.065-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:16:15.065-0500
2021-02-20T13:16:15.092-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin589738821 network=unix timestamp=2021-02-20T13:16:15.092-0500
2021-02-20T13:16:15.092-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:16:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:16:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:16:15 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:16:15.144-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:16:15 [TRACE] GRPCProvider: Configure
2021-02-20T13:16:15.176-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:16:15.176-0500
2021-02-20T13:16:15.177-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:16:15.177-0500
2021/02/20 13:16:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:16:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:16:15 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:16:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:15 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:16:15 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:16:15 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:16:15 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:16:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:16:15 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:16:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:15 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:16:15 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:16:15 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:16:15 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:16:15.182-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:16:15.182-0500
2021-02-20T13:16:15.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.183-0500
2021/02/20 13:16:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:16:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
2021/02/20 13:16:15 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:16:15 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:16:15 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:16:15 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:16:15 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:16:15 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:16:15.202-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:16:15.202-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.203-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.204-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:16:15.203-0500
2021-02-20T13:16:15.204-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:16:15.204-0500
2021-02-20T13:16:15.204-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:16:15.204-0500
2021-02-20T13:16:15.204-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:16:15.204-0500
2021-02-20T13:16:15.204-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:16:15.204-0500
2021-02-20T13:16:15.205-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:16:15.205-0500
2021-02-20T13:16:15.205-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:16:15.205-0500
2021-02-20T13:16:15.205-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:16:15.205-0500
2021-02-20T13:16:15.205-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:16:15.205-0500
2021-02-20T13:16:15.206-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000093b00), Selector:(*v1.LabelSelector)(0xc000825ac0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000093b10), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000093b08), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000093b0d), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000093b0c), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000093b04), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000093adc)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:16:15.206-0500
2021-02-20T13:16:15.207-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.207-0500
2021-02-20T13:16:15.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25132",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.216-0500
2021-02-20T13:16:15.217-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"57797832-a61c-4dc0-af91-9fe7370a85fa", ResourceVersion:"25132", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441775, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00040cac0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00040cb00)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:16:15.217-0500
2021-02-20T13:16:15.217-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:16:15.217-0500
2021-02-20T13:16:15.217-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:15.217-0500
2021-02-20T13:16:15.224-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25132",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.223-0500
2021-02-20T13:16:15.224-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:16:15.224-0500
2021-02-20T13:16:15.224-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:16:15.224-0500
2021-02-20T13:16:15.224-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:15.224-0500
2021-02-20T13:16:15.229-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25132",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.229-0500
2021-02-20T13:16:15.230-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"57797832-a61c-4dc0-af91-9fe7370a85fa", ResourceVersion:"25132", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441775, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0011968a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011968c0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:16:15.229-0500
2021/02/20 13:16:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:16:15 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:16:15 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:16:15 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 41
2021/02/20 13:16:15 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-20T13:16:15.237-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25134",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.237-0500
2021-02-20T13:16:15.242-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:16:15.242-0500
2021-02-20T13:16:15.242-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:16:15.242-0500
2021-02-20T13:16:15.242-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:16:15.242-0500
2021-02-20T13:16:15.243-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:15.243-0500
2021/02/20 13:16:15 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:16:15.286-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25134",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.286-0500
2021-02-20T13:16:15.286-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:16:15.286-0500
2021-02-20T13:16:15.789-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:15.789-0500
2021-02-20T13:16:15.796-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:15 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25153",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:16:15Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:15Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:15.795-0500
2021-02-20T13:16:15.796-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:15 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:16:15.796-0500
2021-02-20T13:16:16.800-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:16 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:16.799-0500
2021-02-20T13:16:16.807-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:16 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:16 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25153",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:16:15Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:15Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:16.807-0500
2021-02-20T13:16:16.807-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:16 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:16:16.807-0500
2021-02-20T13:16:18.811-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:18.811-0500
2021-02-20T13:16:18.819-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25171",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:16Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:16Z",
    "lastTransitionTime": "2021-02-20T18:16:16Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:16Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.818-0500
2021-02-20T13:16:18.819-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"d0b62f2e-ac57-40b8-92c5-b3644dd8071c", ResourceVersion:"25134", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441775, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000816440), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000816460)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0008355b8), Selector:(*v1.LabelSelector)(0xc000816480), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0008356f0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0008356f8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0008356f9), SecurityContext:(*v1.PodSecurityContext)(0xc000532bd0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0008356fa), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000af69d0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000835764), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000835768)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:16:18.819-0500
2021-02-20T13:16:18.819-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:16:18.819-0500
2021-02-20T13:16:18.819-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:18.819-0500
2021-02-20T13:16:18.827-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25171",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:16Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:16Z",
    "lastTransitionTime": "2021-02-20T18:16:16Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:16Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.827-0500
2021-02-20T13:16:18.827-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:16:18.827-0500
2021-02-20T13:16:18.827-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:18.827-0500
2021-02-20T13:16:18.833-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c",
  "resourceVersion": "25171",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:16:16Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:16Z",
    "lastTransitionTime": "2021-02-20T18:16:16Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:16:16Z",
    "lastTransitionTime": "2021-02-20T18:16:15Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.833-0500
2021-02-20T13:16:18.834-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"d0b62f2e-ac57-40b8-92c5-b3644dd8071c", ResourceVersion:"25171", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441775, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0009b5060), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009b5080)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0009b50a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009b50c0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0005e41f0), Selector:(*v1.LabelSelector)(0xc0009b50e0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0005e42b0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0005e42b8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0005e42b9), SecurityContext:(*v1.PodSecurityContext)(0xc000f0e690), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0005e42ba), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000d8f040)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0005e4314), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0005e4318)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441776, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441776, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441776, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441775, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:16:18.833-0500
2021/02/20 13:16:18 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:16:18 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:16:18 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:16:18 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:16:18 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 42
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:16:18 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:16:18 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:16:18 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:16:18 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:16:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:16:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:16:18 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:16:18 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:16:18 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:16:18 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:16:18 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:16:18 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:16:18.873-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:16:18.873-0500
2021-02-20T13:16:18.874-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:16:18.874-0500
2021-02-20T13:16:18.875-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.875-0500
2021-02-20T13:16:18.900-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 869
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "0c5b0a12-fd21-4aa2-a52f-14d79b830559",
  "resourceVersion": "25178",
  "creationTimestamp": "2021-02-20T18:16:18Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.243.1",
  "clusterIPs": [
   "10.96.243.1"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.900-0500
2021-02-20T13:16:18.901-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"0c5b0a12-fd21-4aa2-a52f-14d79b830559", ResourceVersion:"25178", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441778, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001113080), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011130a0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.243.1", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:16:18.901-0500
2021-02-20T13:16:18.901-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Checking service flask-app: timestamp=2021-02-20T13:16:18.901-0500
2021-02-20T13:16:18.902-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:18.901-0500
2021-02-20T13:16:18.916-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 869
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "0c5b0a12-fd21-4aa2-a52f-14d79b830559",
  "resourceVersion": "25178",
  "creationTimestamp": "2021-02-20T18:16:18Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.243.1",
  "clusterIPs": [
   "10.96.243.1"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.916-0500
2021-02-20T13:16:18.917-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Reading service flask-app: timestamp=2021-02-20T13:16:18.917-0500
2021-02-20T13:16:18.917-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:16:18.917-0500
2021-02-20T13:16:18.924-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 869
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:16:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "0c5b0a12-fd21-4aa2-a52f-14d79b830559",
  "resourceVersion": "25178",
  "creationTimestamp": "2021-02-20T18:16:18Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.243.1",
  "clusterIPs": [
   "10.96.243.1"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:16:18.924-0500
2021-02-20T13:16:18.925-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"0c5b0a12-fd21-4aa2-a52f-14d79b830559", ResourceVersion:"25178", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441778, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000d96760), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96780)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.243.1", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:16:18.924-0500
2021-02-20T13:16:18.925-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:16:18 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.243.1", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:16:18.925-0500
2021/02/20 13:16:18 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:16:18 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 43
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:16:18 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:16:18 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:16:18 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:16:18 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:16:18 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:16:18 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:16:18 [TRACE] GRPCProvider: Close
2021-02-20T13:16:18.954-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:16:18.959-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51702
2021-02-20T13:16:18.959-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:16:18 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:16:18 [TRACE] dag/walk: visiting "root"
2021/02/20 13:16:18 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:16:18 [TRACE] vertex "root": visit complete
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 44
2021/02/20 13:16:18 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:16:19 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:16:19 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:17:36 [INFO] Terraform version: 0.14.6  
2021/02/20 13:17:36 [INFO] Go runtime version: go1.15.6
2021/02/20 13:17:36 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:17:36 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:17:36 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:17:36 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:17:36 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:17:36 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:17:36 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:17:36 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:17:36 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:17:36 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:17:36 [DEBUG] New state was assigned lineage "51d4982d-3aaa-a1aa-b53f-822c23d8736f"
2021/02/20 13:17:36 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:17:36 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:17:36 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:17:36 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:17:36 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:17:36 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:17:36 [DEBUG] checking for provisioner in "."
2021/02/20 13:17:36 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:17:36 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:17:36 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:17:36 [INFO] backend/local: starting Apply operation
2021/02/20 13:17:36 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:17:36 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:17:36 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:17:36 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:17:36 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 44
2021/02/20 13:17:36 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:17:36 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:17:36 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:17:36 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:17:36 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 44
2021/02/20 13:17:36 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:17:36 [TRACE] backend/local: building context for current working directory
2021/02/20 13:17:36 [TRACE] terraform.NewContext: starting
2021/02/20 13:17:36 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:17:36 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:17:36.838-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:17:36.876-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:17:36.882-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51791
2021-02-20T13:17:36.883-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:17:36.927-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:17:36.927-0500
2021-02-20T13:17:36.953-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin581888018 network=unix timestamp=2021-02-20T13:17:36.952-0500
2021-02-20T13:17:36.953-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:17:37 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:17:37.024-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:17:37 [TRACE] GRPCProvider: Close
2021-02-20T13:17:37.068-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:17:37.071-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51791
2021-02-20T13:17:37.071-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:17:37 [TRACE] terraform.NewContext: complete
2021/02/20 13:17:37 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:17:37 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:17:37 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:17:37 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:17:37 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:17:37 [TRACE] backend/local: running validation operation
2021/02/20 13:17:37 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:17:37 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:17:37 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:17:37 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:17:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:17:37 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:17:37 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:17:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:17:37 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:17:37 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:17:37 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:17:37 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:17:37 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:17:37.083-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:17:37.110-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:17:37.116-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51792
2021-02-20T13:17:37.116-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:17:37.158-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:17:37.158-0500
2021-02-20T13:17:37.184-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin656448519 timestamp=2021-02-20T13:17:37.184-0500
2021-02-20T13:17:37.184-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:17:37 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:17:37.239-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:17:37 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:17:37 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:17:37 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:17:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:17:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:17:37 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:17:37 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:17:37 [TRACE] GRPCProvider: Close
2021/02/20 13:17:37 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:17:37.304-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:17:37.306-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51792
2021-02-20T13:17:37.306-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "root"
2021/02/20 13:17:37 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:17:37 [TRACE] vertex "root": visit complete
2021/02/20 13:17:37 [INFO] backend/local: apply calling Plan
2021/02/20 13:17:37 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:17:37 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:17:37 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:17:37 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_namespace.flaskapp current object
2021/02/20 13:17:37 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:17:37 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:17:37 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:17:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:17:37 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:17:37 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:17:37 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:17:37 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:17:37 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:17:37 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:17:37 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:17:37 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:17:37.307-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:17:37.332-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:17:37.339-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51793
2021-02-20T13:17:37.340-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:17:37.384-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:17:37.384-0500
2021-02-20T13:17:37.409-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin592409900 network=unix timestamp=2021-02-20T13:17:37.409-0500
2021-02-20T13:17:37.409-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:17:37 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021-02-20T13:17:37.462-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:17:37 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:17:37 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:17:37 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:17:37 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:17:37 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:17:37 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:17:37 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_namespace.flaskapp
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:17:37 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:17:37 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:17:37 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:17:37 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:17:37 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:17:37 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:17:37 [TRACE] GRPCProvider: Close
2021-02-20T13:17:37.504-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:17:37.506-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51793
2021-02-20T13:17:37.506-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:17:37 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:17:37 [TRACE] dag/walk: visiting "root"
2021/02/20 13:17:37 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:17:37 [TRACE] vertex "root": visit complete
2021/02/20 13:17:37 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:17:40 [INFO] backend/local: apply calling Apply
2021/02/20 13:17:40 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:17:40 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:17:40 [TRACE] DiffTransformer starting
2021/02/20 13:17:40 [TRACE] DiffTransformer: found Delete change for kubernetes_namespace.flaskapp 
2021/02/20 13:17:40 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented for destruction by kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:17:40 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:17:40 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:17:40 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] DiffTransformer complete
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:17:40 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:17:40 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:17:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:17:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:17:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:17:40 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:17:40 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:17:40 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:17:40 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:17:40 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:17:40 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:17:40 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:17:40 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:17:40 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:17:40 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:17:40 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:17:40 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:17:40 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:17:40 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:17:40 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:17:40 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:17:40 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:17:40 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:17:40 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:17:40 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:17:40 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:17:40 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:17:40 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:17:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:17:40.095-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:17:40.120-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:17:40.126-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51794
2021-02-20T13:17:40.126-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:17:40.165-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:17:40.165-0500
2021-02-20T13:17:40.191-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin026000249 network=unix timestamp=2021-02-20T13:17:40.191-0500
2021-02-20T13:17:40.191-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:17:40.245-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:17:40 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:17:40 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:17:40 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:17:40 [TRACE] GRPCProvider: Configure
2021-02-20T13:17:40.278-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:17:40.278-0500
2021-02-20T13:17:40.280-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:17:40.280-0500
2021/02/20 13:17:40 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:17:40 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:17:40 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:17:40 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:17:40 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:17:40 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:17:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:17:40 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:17:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:17:40 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:17:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:17:40 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:17:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:17:40 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:17:40 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Delete change
2021/02/20 13:17:40 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:17:40 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:17:40 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:17:40 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:17:40.285-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [INFO] Deleting namespace: "flask-app": timestamp=2021-02-20T13:17:40.284-0500
2021-02-20T13:17:40.285-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:17:40.285-0500
2021-02-20T13:17:40.286-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.285-0500
2021-02-20T13:17:40.286-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.286-0500
2021-02-20T13:17:40.312-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25317",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "deletionTimestamp": "2021-02-20T18:17:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.312-0500
2021-02-20T13:17:40.312-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Waiting for state to become: []: timestamp=2021-02-20T13:17:40.312-0500
2021-02-20T13:17:40.313-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:40.313-0500
2021-02-20T13:17:40.320-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25317",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "deletionTimestamp": "2021-02-20T18:17:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.320-0500
2021-02-20T13:17:40.321-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:17:40.321-0500
2021-02-20T13:17:40.321-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [TRACE] Waiting 200ms before next try: timestamp=2021-02-20T13:17:40.321-0500
2021-02-20T13:17:40.344-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "0c5b0a12-fd21-4aa2-a52f-14d79b830559"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.344-0500
2021-02-20T13:17:40.344-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:17:40.344-0500
2021-02-20T13:17:40.344-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:40.344-0500
2021-02-20T13:17:40.368-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.368-0500
2021-02-20T13:17:40.368-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:17:40.368-0500
2021/02/20 13:17:40 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:17:40 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:17:40 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 45
2021/02/20 13:17:40 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:17:40 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:17:40 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:17:40 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:17:40 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:17:40 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:17:40 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:17:40 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:17:40 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:17:40 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:17:40 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:17:40.413-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [INFO] Deleting deployment: "flask-app": timestamp=2021-02-20T13:17:40.413-0500
2021-02-20T13:17:40.413-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.413-0500
2021-02-20T13:17:40.457-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 181
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "d0b62f2e-ac57-40b8-92c5-b3644dd8071c"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.457-0500
2021-02-20T13:17:40.457-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:17:40.457-0500
2021-02-20T13:17:40.458-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:40.457-0500
2021-02-20T13:17:40.468-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 220
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.468-0500
2021-02-20T13:17:40.468-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [INFO] Deployment flask-app deleted: timestamp=2021-02-20T13:17:40.468-0500
2021/02/20 13:17:40 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:17:40 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:17:40 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 46
2021/02/20 13:17:40 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:17:40 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021-02-20T13:17:40.522-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:40.522-0500
2021-02-20T13:17:40.533-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25317",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "deletionTimestamp": "2021-02-20T18:17:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.533-0500
2021-02-20T13:17:40.533-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:17:40.533-0500
2021-02-20T13:17:40.533-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [TRACE] Waiting 400ms before next try: timestamp=2021-02-20T13:17:40.533-0500
2021-02-20T13:17:40.936-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:40.935-0500
2021-02-20T13:17:40.949-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:40 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25317",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "deletionTimestamp": "2021-02-20T18:17:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:40.949-0500
2021-02-20T13:17:40.949-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:17:40.949-0500
2021-02-20T13:17:40.949-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:40 [TRACE] Waiting 800ms before next try: timestamp=2021-02-20T13:17:40.949-0500
2021-02-20T13:17:41.754-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:41 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:41.753-0500
2021-02-20T13:17:41.772-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:41 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:41 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25317",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "deletionTimestamp": "2021-02-20T18:17:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:41.771-0500
2021-02-20T13:17:41.772-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:41 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:17:41.771-0500
2021-02-20T13:17:41.772-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:41 [TRACE] Waiting 1.6s before next try: timestamp=2021-02-20T13:17:41.771-0500
2021-02-20T13:17:43.376-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:43 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:43.376-0500
2021-02-20T13:17:43.385-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:43 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:43 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "57797832-a61c-4dc0-af91-9fe7370a85fa",
  "resourceVersion": "25317",
  "creationTimestamp": "2021-02-20T18:16:15Z",
  "deletionTimestamp": "2021-02-20T18:17:40Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:16:15Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:43.385-0500
2021-02-20T13:17:43.385-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:43 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:17:43.385-0500
2021-02-20T13:17:43.385-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:43 [TRACE] Waiting 3.2s before next try: timestamp=2021-02-20T13:17:43.385-0500
2021/02/20 13:17:45 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:17:45 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 13:17:45 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021-02-20T13:17:46.588-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:46 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:17:46.588-0500
2021-02-20T13:17:46.607-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:46 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 198
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:17:46 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "namespaces \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "namespaces"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:17:46.607-0500
2021-02-20T13:17:46.607-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:17:46 [INFO] Namespace flask-app deleted: timestamp=2021-02-20T13:17:46.607-0500
2021/02/20 13:17:46 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 47
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:17:46 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": visit complete
2021/02/20 13:17:46 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:17:46 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:17:46 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:17:46 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:17:46 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:17:46 [TRACE] GRPCProvider: Close
2021-02-20T13:17:46.635-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:17:46.638-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51794
2021-02-20T13:17:46.638-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:17:46 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:17:46 [TRACE] dag/walk: visiting "root"
2021/02/20 13:17:46 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:17:46 [TRACE] vertex "root": visit complete
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 48
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:17:46 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:18:14 [INFO] Terraform version: 0.14.6  
2021/02/20 13:18:14 [INFO] Go runtime version: go1.15.6
2021/02/20 13:18:14 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:18:14 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:18:14 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:18:14 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:18:14 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:18:14 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:18:14 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:18:14 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:18:14 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:18:14 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:18:14 [DEBUG] New state was assigned lineage "a897fb21-460b-6b6c-318f-15da658fbcb4"
2021/02/20 13:18:14 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:18:14 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:18:14 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:18:14 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:18:14 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:18:14 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:18:14 [DEBUG] checking for provisioner in "."
2021/02/20 13:18:14 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:18:14 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:18:14 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:18:14 [INFO] backend/local: starting Apply operation
2021/02/20 13:18:14 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:18:14 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:18:14 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:18:14 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:18:14 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 48
2021/02/20 13:18:14 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:18:14 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:18:14 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:18:14 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:18:14 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 48
2021/02/20 13:18:14 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:18:14 [TRACE] backend/local: building context for current working directory
2021/02/20 13:18:14 [TRACE] terraform.NewContext: starting
2021/02/20 13:18:14 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:18:14 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:18:14.810-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:18:14.837-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:18:14.842-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51870
2021-02-20T13:18:14.842-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:18:14.882-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:18:14.882-0500
2021-02-20T13:18:14.908-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin065912189 timestamp=2021-02-20T13:18:14.908-0500
2021-02-20T13:18:14.908-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:18:14 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:18:14.969-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:18:15 [TRACE] GRPCProvider: Close
2021-02-20T13:18:15.004-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:18:15.007-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51870
2021-02-20T13:18:15.007-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:18:15 [TRACE] terraform.NewContext: complete
2021/02/20 13:18:15 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:18:15 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:18:15 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:18:15 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:18:15 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:18:15 [TRACE] backend/local: running validation operation
2021/02/20 13:18:15 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:18:15 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:18:15 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:18:15 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:18:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:18:15 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:18:15 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:18:15 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:18:15.012-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:18:15.037-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:18:15.045-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51871
2021-02-20T13:18:15.045-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:18:15.092-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:18:15.092-0500
2021-02-20T13:18:15.122-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin702566146 network=unix timestamp=2021-02-20T13:18:15.121-0500
2021-02-20T13:18:15.122-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:18:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:18:15.176-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:18:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:18:15 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:18:15 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:18:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:18:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:18:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:18:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:18:15 [TRACE] GRPCProvider: Close
2021-02-20T13:18:15.238-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:18:15.241-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51871
2021-02-20T13:18:15.241-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "root"
2021/02/20 13:18:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:18:15 [TRACE] vertex "root": visit complete
2021/02/20 13:18:15 [INFO] backend/local: apply calling Plan
2021/02/20 13:18:15 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:18:15 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:18:15 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:18:15 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:18:15 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:18:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:18:15 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:18:15 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:18:15 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:18:15 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:18:15 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:18:15 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:18:15 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:18:15 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:18:15 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:18:15 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:18:15 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:18:15 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:18:15.243-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:18:15.267-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:18:15.274-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51872
2021-02-20T13:18:15.274-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:18:15.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:18:15.313-0500
2021-02-20T13:18:15.340-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin976736367 network=unix timestamp=2021-02-20T13:18:15.340-0500
2021-02-20T13:18:15.340-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:18:15 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:18:15.393-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:18:15 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:18:15 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:18:15 [TRACE] GRPCProvider: Configure
2021-02-20T13:18:15.423-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:15 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:18:15.423-0500
2021-02-20T13:18:15.425-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:15 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:18:15.425-0500
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:18:15 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:18:15 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:18:15 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:18:15 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:18:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:18:15 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:18:15 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:18:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:18:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:18:15 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:18:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:18:15 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:18:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:18:15 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:18:15 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:18:15 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:18:15 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:18:15 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:18:15 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:18:15 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:18:15 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:18:15 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:18:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:15 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:18:15 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:18:15 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:18:15 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:18:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:18:15 [TRACE] GRPCProvider: Close
2021-02-20T13:18:15.455-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 13:18:15 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:18:15.457-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51872
2021-02-20T13:18:15.457-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:18:15 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:18:15 [TRACE] dag/walk: visiting "root"
2021/02/20 13:18:15 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:18:15 [TRACE] vertex "root": visit complete
2021/02/20 13:18:15 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:18:17 [INFO] backend/local: apply calling Apply
2021/02/20 13:18:17 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:18:17 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:18:17 [TRACE] DiffTransformer starting
2021/02/20 13:18:17 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:18:17 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:18:17 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:18:17 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:18:17 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:18:17 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:18:17 [TRACE] DiffTransformer complete
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:18:17 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:18:17 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:18:17 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:18:17 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:18:17 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:18:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:18:17 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:18:17 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:18:17 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:18:17 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:18:17 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:18:17 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:18:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:18:17 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app kubernetes_deployment.flask-app kubernetes_deployment.flask-app (expand)]
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:18:17 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:18:17 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:18:17 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:18:17 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:18:17 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:18:17 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:18:17 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:18:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:18:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:18:17 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:18:17 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:18:17 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:18:17.968-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:18:17.994-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:18:18.002-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51873
2021-02-20T13:18:18.002-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:18:18.046-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:18:18.046-0500
2021-02-20T13:18:18.073-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin897119748 network=unix timestamp=2021-02-20T13:18:18.073-0500
2021-02-20T13:18:18.073-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:18:18 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:18:18 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:18:18 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:18:18.126-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:18:18 [TRACE] GRPCProvider: Configure
2021-02-20T13:18:18.157-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:18:18.157-0500
2021-02-20T13:18:18.158-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:18:18.158-0500
2021/02/20 13:18:18 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:18:18 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:18:18 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:18:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:18 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:18:18 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:18:18 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:18:18 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:18:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:18:18 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:18:18 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:18 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:18:18 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:18:18 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:18:18 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:18:18.163-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:18:18.163-0500
2021-02-20T13:18:18.164-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.164-0500
2021/02/20 13:18:18 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:18:18 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:18:18 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:18:18 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:18:18 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:18:18 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:18:18 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:18:18 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.183-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:18:18.183-0500
2021-02-20T13:18:18.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:18:18.184-0500
2021-02-20T13:18:18.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:18:18.184-0500
2021-02-20T13:18:18.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:18:18.184-0500
2021-02-20T13:18:18.184-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:18:18.184-0500
2021-02-20T13:18:18.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:18:18.185-0500
2021-02-20T13:18:18.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:18:18.185-0500
2021-02-20T13:18:18.185-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:18:18.185-0500
2021-02-20T13:18:18.186-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:18:18.186-0500
2021-02-20T13:18:18.186-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:18:18.186-0500
2021-02-20T13:18:18.186-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0005b3690), Selector:(*v1.LabelSelector)(0xc0009bba00), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0005b36b0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0005b3698), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0005b369d), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0005b369c), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0005b3694), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0005b368c)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:18:18.186-0500
2021-02-20T13:18:18.188-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.188-0500
2021-02-20T13:18:18.195-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25401",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.195-0500
2021-02-20T13:18:18.196-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"793fe2e8-5ac6-4cc9-827e-63c39b89bd5a", ResourceVersion:"25401", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441898, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000095060), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0000950c0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:18:18.196-0500
2021-02-20T13:18:18.196-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:18:18.196-0500
2021-02-20T13:18:18.196-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:18.196-0500
2021-02-20T13:18:18.210-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25402",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.210-0500
2021-02-20T13:18:18.211-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25401",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.211-0500
2021-02-20T13:18:18.211-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:18:18.211-0500
2021-02-20T13:18:18.211-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:18:18.211-0500
2021-02-20T13:18:18.212-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:18.212-0500
2021-02-20T13:18:18.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:18:18.215-0500
2021-02-20T13:18:18.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:18:18.215-0500
2021-02-20T13:18:18.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:18:18.216-0500
2021-02-20T13:18:18.216-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:18.216-0500
2021-02-20T13:18:18.221-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25401",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.221-0500
2021-02-20T13:18:18.221-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"793fe2e8-5ac6-4cc9-827e-63c39b89bd5a", ResourceVersion:"25401", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441898, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000f2f7e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f2f800)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:18:18.221-0500
2021/02/20 13:18:18 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:18:18 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:18:18 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:18:18 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 49
2021/02/20 13:18:18 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-20T13:18:18.226-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25402",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.226-0500
2021-02-20T13:18:18.226-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:18:18.226-0500
2021/02/20 13:18:18 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:18:18.729-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:18.729-0500
2021-02-20T13:18:18.738-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:18 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25422",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:18:18Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:18Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:18.738-0500
2021-02-20T13:18:18.738-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:18 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:18:18.738-0500
2021-02-20T13:18:19.738-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:19 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:19.738-0500
2021-02-20T13:18:19.746-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:19 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:19 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25422",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:18:18Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:18Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:19.745-0500
2021-02-20T13:18:19.746-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:19 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:18:19.746-0500
2021-02-20T13:18:21.747-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:21.747-0500
2021-02-20T13:18:21.756-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25440",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:20Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:20Z",
    "lastTransitionTime": "2021-02-20T18:18:20Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:20Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.756-0500
2021-02-20T13:18:21.756-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a", ResourceVersion:"25402", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441898, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000f2ef80), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f2efa0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00087ced8), Selector:(*v1.LabelSelector)(0xc000f2efc0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00087cfc0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00087cfc8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00087cfc9), SecurityContext:(*v1.PodSecurityContext)(0xc0003e8a80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00087cfca), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc001192440)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00087d024), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00087d028)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:18:21.756-0500
2021-02-20T13:18:21.757-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:18:21.757-0500
2021-02-20T13:18:21.757-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:21.757-0500
2021-02-20T13:18:21.769-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25440",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:20Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:20Z",
    "lastTransitionTime": "2021-02-20T18:18:20Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:20Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.768-0500
2021-02-20T13:18:21.769-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:18:21.769-0500
2021-02-20T13:18:21.769-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:21.769-0500
2021-02-20T13:18:21.776-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a",
  "resourceVersion": "25440",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:18:20Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:20Z",
    "lastTransitionTime": "2021-02-20T18:18:20Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:18:20Z",
    "lastTransitionTime": "2021-02-20T18:18:18Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.775-0500
2021-02-20T13:18:21.776-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a", ResourceVersion:"25440", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441898, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000d85ca0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85cc0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000d85ce0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d85d00)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000ba75d0), Selector:(*v1.LabelSelector)(0xc000d85d20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000ba7690), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000ba7698), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000ba7699), SecurityContext:(*v1.PodSecurityContext)(0xc0004c89a0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000ba769a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc001367ff0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000ba76f4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000ba76f8)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441900, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441900, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441900, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441898, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:18:21.776-0500
2021/02/20 13:18:21 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:18:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:18:21 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:18:21 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:18:21 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 50
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:18:21 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:18:21 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:18:21 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:18:21 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:18:21 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:18:21 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:18:21 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:18:21 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:18:21 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:18:21 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:18:21 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:18:21 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:18:21.812-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:18:21.811-0500
2021-02-20T13:18:21.812-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:18:21.812-0500
2021-02-20T13:18:21.813-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.812-0500
2021-02-20T13:18:21.839-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 869
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "09e39f20-d437-4dd3-a07b-0c9ac063e113",
  "resourceVersion": "25444",
  "creationTimestamp": "2021-02-20T18:18:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.30.21",
  "clusterIPs": [
   "10.96.30.21"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.839-0500
2021-02-20T13:18:21.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"09e39f20-d437-4dd3-a07b-0c9ac063e113", ResourceVersion:"25444", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441901, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001087980), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010879a0)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.30.21", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:18:21.840-0500
2021-02-20T13:18:21.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Checking service flask-app: timestamp=2021-02-20T13:18:21.840-0500
2021-02-20T13:18:21.840-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:21.840-0500
2021-02-20T13:18:21.851-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 869
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "09e39f20-d437-4dd3-a07b-0c9ac063e113",
  "resourceVersion": "25444",
  "creationTimestamp": "2021-02-20T18:18:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.30.21",
  "clusterIPs": [
   "10.96.30.21"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.851-0500
2021-02-20T13:18:21.852-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Reading service flask-app: timestamp=2021-02-20T13:18:21.852-0500
2021-02-20T13:18:21.852-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:18:21.852-0500
2021-02-20T13:18:21.858-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 869
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:18:21 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "09e39f20-d437-4dd3-a07b-0c9ac063e113",
  "resourceVersion": "25444",
  "creationTimestamp": "2021-02-20T18:18:21Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:21Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.30.21",
  "clusterIPs": [
   "10.96.30.21"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:18:21.858-0500
2021-02-20T13:18:21.859-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"09e39f20-d437-4dd3-a07b-0c9ac063e113", ResourceVersion:"25444", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441901, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00102c860), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102c880)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.30.21", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:18:21.858-0500
2021-02-20T13:18:21.859-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:18:21 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.30.21", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30201, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:18:21.859-0500
2021/02/20 13:18:21 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:18:21 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 51
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:18:21 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:18:21 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:18:21 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:18:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:18:21 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:18:21 [TRACE] GRPCProvider: Close
2021/02/20 13:18:21 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:18:21.886-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:18:21.890-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51873
2021-02-20T13:18:21.890-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:18:21 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:18:21 [TRACE] dag/walk: visiting "root"
2021/02/20 13:18:21 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:18:21 [TRACE] vertex "root": visit complete
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 52
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:18:21 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:19:28 [INFO] Terraform version: 0.14.6  
2021/02/20 13:19:28 [INFO] Go runtime version: go1.15.6
2021/02/20 13:19:28 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:19:28 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:19:28 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:19:28 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:19:28 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:19:28 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:19:28 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:19:28 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:19:28 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:19:28 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:19:28 [DEBUG] New state was assigned lineage "f17da769-8ce0-3143-2195-965feecd8a12"
2021/02/20 13:19:28 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:19:28 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:19:28 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:19:28 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:19:28 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:19:28 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:19:28 [DEBUG] checking for provisioner in "."
2021/02/20 13:19:28 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:19:28 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:19:28 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:19:28 [INFO] backend/local: starting Apply operation
2021/02/20 13:19:28 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:19:28 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:19:28 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:19:28 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:19:28 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 52
2021/02/20 13:19:28 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:19:28 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:19:28 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:19:28 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:19:28 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 52
2021/02/20 13:19:28 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:19:28 [TRACE] backend/local: building context for current working directory
2021/02/20 13:19:28 [TRACE] terraform.NewContext: starting
2021/02/20 13:19:28 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:19:28 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:19:28.451-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:28.485-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:28.490-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51951
2021-02-20T13:19:28.490-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:28.532-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:28.532-0500
2021-02-20T13:19:28.559-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin027013514 network=unix timestamp=2021-02-20T13:19:28.559-0500
2021-02-20T13:19:28.559-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:19:28.626-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:28 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:19:28 [TRACE] GRPCProvider: Close
2021-02-20T13:19:28.668-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:28.672-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51951
2021-02-20T13:19:28.672-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:28 [TRACE] terraform.NewContext: complete
2021/02/20 13:19:28 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:19:28 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:19:28 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:19:28 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:19:28 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:19:28 [TRACE] backend/local: running validation operation
2021/02/20 13:19:28 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:19:28 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:19:28 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:19:28 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:19:28 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:19:28 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:19:28 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:19:28 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:19:28 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:19:28 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:19:28 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:28 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:19:28 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:19:28 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:19:28 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:28 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:19:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:19:28.684-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:28.716-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:28.722-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51952
2021-02-20T13:19:28.723-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:28.775-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:28.775-0500
2021-02-20T13:19:28.804-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:19:28.804-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin995092863 network=unix timestamp=2021-02-20T13:19:28.804-0500
2021-02-20T13:19:28.856-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:28 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:19:28 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:19:28 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:19:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:28 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:28 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:19:28 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:28 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:19:28 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:28 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:28 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:19:28 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:28 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:28 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:19:28 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:19:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:19:28 [TRACE] GRPCProvider: Close
2021-02-20T13:19:28.928-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:28.931-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51952
2021-02-20T13:19:28.931-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "root"
2021/02/20 13:19:28 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:19:28 [TRACE] vertex "root": visit complete
2021/02/20 13:19:28 [INFO] backend/local: apply calling Plan
2021/02/20 13:19:28 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:19:28 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:19:28 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:19:28 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_namespace.flaskapp current object
2021/02/20 13:19:28 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:19:28 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:19:28 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:19:28 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:19:28 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:19:28 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:19:28 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:19:28 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:19:28 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:19:28 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:19:28 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:19:28 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:28 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:19:28 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:28 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:19:28 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:19:28 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:19:28.934-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:28.957-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:28.966-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51953
2021-02-20T13:19:28.966-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:29.008-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:29.008-0500
2021-02-20T13:19:29.036-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin003474444 network=unix timestamp=2021-02-20T13:19:29.036-0500
2021-02-20T13:19:29.036-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:19:29 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:29 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021-02-20T13:19:29.091-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:29 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:29 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:19:29 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:29 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:19:29 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:19:29 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:19:29 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:19:29 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:19:29 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:19:29 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:19:29 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:19:29 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_namespace.flaskapp
2021/02/20 13:19:29 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:19:29 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:19:29 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:29 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:29 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:19:29 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:19:29 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:19:29 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:19:29 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:19:29 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:29 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:29 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:19:29 [TRACE] GRPCProvider: Close
2021-02-20T13:19:29.133-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:29.135-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51953
2021-02-20T13:19:29.135-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:29 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:19:29 [TRACE] dag/walk: visiting "root"
2021/02/20 13:19:29 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:19:29 [TRACE] vertex "root": visit complete
2021/02/20 13:19:29 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:19:31 [INFO] backend/local: apply calling Apply
2021/02/20 13:19:31 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:19:31 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:19:31 [TRACE] DiffTransformer starting
2021/02/20 13:19:31 [TRACE] DiffTransformer: found Delete change for kubernetes_namespace.flaskapp 
2021/02/20 13:19:31 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented for destruction by kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:19:31 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:19:31 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:19:31 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] DiffTransformer complete
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:19:31 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:19:31 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:19:31 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:19:31 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:19:31 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:19:31 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:31 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:31 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:19:31 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:19:31 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:31 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:31 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:19:31 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:19:31 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:19:31 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:19:31 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:19:31 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:19:31 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:19:31 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:19:31 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:19:31 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:19:31 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:19:31 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:19:31 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:19:31 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:31 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:19:31 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:31 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:19:31 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:19:31 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:19:31.695-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:31.725-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:31.732-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51954
2021-02-20T13:19:31.732-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:31.773-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:31.773-0500
2021-02-20T13:19:31.799-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin911156457 network=unix timestamp=2021-02-20T13:19:31.799-0500
2021-02-20T13:19:31.799-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:19:31.853-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:31 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:31 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:19:31 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:19:31 [TRACE] GRPCProvider: Configure
2021-02-20T13:19:31.886-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:19:31.886-0500
2021-02-20T13:19:31.888-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:19:31.888-0500
2021/02/20 13:19:31 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:19:31 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:19:31 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:19:31 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:19:31 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:19:31 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:19:31 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:19:31 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:19:31 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:19:31 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:19:31 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:19:31 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:19:31 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:19:31 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:19:31 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Delete change
2021/02/20 13:19:31 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:19:31 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:19:31 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:19:31 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:19:31.892-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [INFO] Deleting namespace: "flask-app": timestamp=2021-02-20T13:19:31.892-0500
2021-02-20T13:19:31.893-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:31.893-0500
2021-02-20T13:19:31.893-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:19:31.893-0500
2021-02-20T13:19:31.893-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:31.893-0500
2021-02-20T13:19:31.919-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:31 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25571",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "deletionTimestamp": "2021-02-20T18:19:31Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:31.919-0500
2021-02-20T13:19:31.919-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Waiting for state to become: []: timestamp=2021-02-20T13:19:31.919-0500
2021-02-20T13:19:31.920-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:31.919-0500
2021-02-20T13:19:31.934-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:31 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25571",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "deletionTimestamp": "2021-02-20T18:19:31Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:31.934-0500
2021-02-20T13:19:31.935-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:19:31.935-0500
2021-02-20T13:19:31.935-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [TRACE] Waiting 200ms before next try: timestamp=2021-02-20T13:19:31.935-0500
2021-02-20T13:19:31.993-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:31 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "09e39f20-d437-4dd3-a07b-0c9ac063e113"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:31.992-0500
2021-02-20T13:19:31.993-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:19:31.993-0500
2021-02-20T13:19:31.993-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:31 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:31.993-0500
2021-02-20T13:19:32.008-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:32 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:32.008-0500
2021-02-20T13:19:32.008-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:19:32.008-0500
2021/02/20 13:19:32 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:19:32 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:19:32 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 53
2021/02/20 13:19:32 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:32 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:19:32 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:19:32 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:19:32 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:19:32 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:19:32 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:19:32 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:19:32 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:19:32 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:19:32 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:19:32.051-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [INFO] Deleting deployment: "flask-app": timestamp=2021-02-20T13:19:32.051-0500
2021-02-20T13:19:32.052-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:32.052-0500
2021-02-20T13:19:32.071-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 181
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:32 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "9ce3b163-91c2-4f29-b3a3-4d8d3aa7553a"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:32.071-0500
2021-02-20T13:19:32.071-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:19:32.071-0500
2021-02-20T13:19:32.072-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:32.071-0500
2021-02-20T13:19:32.080-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 220
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:32 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:32.080-0500
2021-02-20T13:19:32.080-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [INFO] Deployment flask-app deleted: timestamp=2021-02-20T13:19:32.080-0500
2021/02/20 13:19:32 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:19:32 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:19:32 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 54
2021/02/20 13:19:32 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:32 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021-02-20T13:19:32.135-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:32.135-0500
2021-02-20T13:19:32.141-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:32 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25571",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "deletionTimestamp": "2021-02-20T18:19:31Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:32.141-0500
2021-02-20T13:19:32.141-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:19:32.141-0500
2021-02-20T13:19:32.141-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [TRACE] Waiting 400ms before next try: timestamp=2021-02-20T13:19:32.141-0500
2021-02-20T13:19:32.543-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:32.543-0500
2021-02-20T13:19:32.557-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:32 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25571",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "deletionTimestamp": "2021-02-20T18:19:31Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:32.557-0500
2021-02-20T13:19:32.557-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:19:32.557-0500
2021-02-20T13:19:32.558-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:32 [TRACE] Waiting 800ms before next try: timestamp=2021-02-20T13:19:32.557-0500
2021-02-20T13:19:33.360-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:33 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:33.360-0500
2021-02-20T13:19:33.373-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:33 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:33 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25571",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "deletionTimestamp": "2021-02-20T18:19:31Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:33.373-0500
2021-02-20T13:19:33.373-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:33 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:19:33.373-0500
2021-02-20T13:19:33.373-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:33 [TRACE] Waiting 1.6s before next try: timestamp=2021-02-20T13:19:33.373-0500
2021-02-20T13:19:34.977-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:34 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:34.977-0500
2021-02-20T13:19:34.984-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:34 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:34 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "793fe2e8-5ac6-4cc9-827e-63c39b89bd5a",
  "resourceVersion": "25571",
  "creationTimestamp": "2021-02-20T18:18:18Z",
  "deletionTimestamp": "2021-02-20T18:19:31Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:18:18Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:34.984-0500
2021-02-20T13:19:34.984-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:34 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:19:34.984-0500
2021-02-20T13:19:34.984-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:34 [TRACE] Waiting 3.2s before next try: timestamp=2021-02-20T13:19:34.984-0500
2021/02/20 13:19:36 [TRACE] dag/walk: vertex "root" is waiting for "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:36 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:19:37 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021-02-20T13:19:38.188-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:38.188-0500
2021-02-20T13:19:38.194-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 198
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "namespaces \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "namespaces"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:38.194-0500
2021-02-20T13:19:38.194-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:38 [INFO] Namespace flask-app deleted: timestamp=2021-02-20T13:19:38.194-0500
2021/02/20 13:19:38 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 55
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:38 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": visit complete
2021/02/20 13:19:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:19:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:19:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:19:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:19:38 [TRACE] GRPCProvider: Close
2021-02-20T13:19:38.223-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:38.225-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51954
2021-02-20T13:19:38.225-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:19:38 [TRACE] dag/walk: visiting "root"
2021/02/20 13:19:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:19:38 [TRACE] vertex "root": visit complete
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 56
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:19:38 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:19:41 [INFO] Terraform version: 0.14.6  
2021/02/20 13:19:41 [INFO] Go runtime version: go1.15.6
2021/02/20 13:19:41 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:19:41 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:19:41 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:19:41 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:19:41 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:19:41 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:19:41 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:19:41 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:19:41 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:19:41 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:19:41 [DEBUG] New state was assigned lineage "25e65d37-d4ba-f57c-270d-1dcda4292ae7"
2021/02/20 13:19:41 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:19:41 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:19:41 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:19:41 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:19:41 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:19:41 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:19:41 [DEBUG] checking for provisioner in "."
2021/02/20 13:19:41 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:19:41 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:19:41 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:19:41 [INFO] backend/local: starting Apply operation
2021/02/20 13:19:41 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:19:41 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:19:41 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:19:41 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:19:41 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 56
2021/02/20 13:19:41 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:19:41 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:19:41 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:19:41 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:19:41 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 56
2021/02/20 13:19:41 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:19:41 [TRACE] backend/local: building context for current working directory
2021/02/20 13:19:41 [TRACE] terraform.NewContext: starting
2021/02/20 13:19:41 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:19:41 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:19:41.171-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:41.197-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:41.202-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51996
2021-02-20T13:19:41.202-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:41.249-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:41.248-0500
2021-02-20T13:19:41.279-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin994548411 network=unix timestamp=2021-02-20T13:19:41.278-0500
2021-02-20T13:19:41.279-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:19:41 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:19:41.343-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:41 [TRACE] GRPCProvider: Close
2021-02-20T13:19:41.385-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:41.388-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51996
2021-02-20T13:19:41.388-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:41 [TRACE] terraform.NewContext: complete
2021/02/20 13:19:41 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:19:41 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:19:41 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:19:41 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:19:41 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:19:41 [TRACE] backend/local: running validation operation
2021/02/20 13:19:41 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:19:41 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:19:41 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:19:41 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:19:41 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:19:41 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:19:41 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:41 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:19:41.391-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:41.417-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:41.424-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51997
2021-02-20T13:19:41.424-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:41.468-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:41.467-0500
2021-02-20T13:19:41.495-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin004184424 timestamp=2021-02-20T13:19:41.494-0500
2021-02-20T13:19:41.495-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:19:41.550-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:41 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:19:41 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:19:41 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:19:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:19:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:19:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:19:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:19:41 [TRACE] GRPCProvider: Close
2021-02-20T13:19:41.615-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:41.618-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51997
2021-02-20T13:19:41.618-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "root"
2021/02/20 13:19:41 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:19:41 [TRACE] vertex "root": visit complete
2021/02/20 13:19:41 [INFO] backend/local: apply calling Plan
2021/02/20 13:19:41 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:19:41 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:19:41 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:19:41 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:19:41 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:19:41 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:19:41 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:41 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:41 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:19:41 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:19:41 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:19:41 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:19:41 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:19:41 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:19:41 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:19:41 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:19:41 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:41 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:19:41.620-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:41.645-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:41.652-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51998
2021-02-20T13:19:41.652-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:41.695-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:41.695-0500
2021-02-20T13:19:41.722-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin302286389 timestamp=2021-02-20T13:19:41.721-0500
2021-02-20T13:19:41.722-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:19:41 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:19:41.776-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:41 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:19:41 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:19:41 [TRACE] GRPCProvider: Configure
2021-02-20T13:19:41.807-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:41 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:19:41.807-0500
2021-02-20T13:19:41.809-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:41 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:19:41.809-0500
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:19:41 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:41 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:19:41 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:41 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:19:41 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:19:41 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:19:41 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:19:41 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:19:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:41 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:19:41 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:19:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:41 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:19:41 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:19:41 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:19:41 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:19:41 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:41 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:41 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:19:41 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:19:41 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:19:41 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:19:41 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:19:41 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:19:41 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:41 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:19:41 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:19:41 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:19:41 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:19:41 [TRACE] GRPCProvider: Close
2021/02/20 13:19:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021-02-20T13:19:41.840-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 13:19:41 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:19:41.842-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51998
2021-02-20T13:19:41.842-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:41 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:19:41 [TRACE] dag/walk: visiting "root"
2021/02/20 13:19:41 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:19:41 [TRACE] vertex "root": visit complete
2021/02/20 13:19:41 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:19:44 [INFO] backend/local: apply calling Apply
2021/02/20 13:19:44 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:19:44 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:19:44 [TRACE] DiffTransformer starting
2021/02/20 13:19:44 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:19:44 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:19:44 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:19:44 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:19:44 [TRACE] DiffTransformer complete
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:19:44 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:19:44 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:19:44 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:19:44 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:19:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:19:44 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:19:44 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:19:44 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:44 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:44 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:19:44 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:19:44 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:19:44 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:19:44 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:19:44 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:19:44 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:19:44 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:19:44 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:19:44 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:44 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:19:44 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:19:44 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:19:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:19:44.248-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:19:44.274-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:19:44.283-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51999
2021-02-20T13:19:44.283-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:19:44.322-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:19:44.322-0500
2021-02-20T13:19:44.351-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:19:44.351-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin247517426 network=unix timestamp=2021-02-20T13:19:44.351-0500
2021/02/20 13:19:44 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:19:44 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:19:44 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:19:44.404-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:19:44 [TRACE] GRPCProvider: Configure
2021-02-20T13:19:44.437-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:19:44.437-0500
2021-02-20T13:19:44.438-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:19:44.438-0500
2021/02/20 13:19:44 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:19:44 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:19:44 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:19:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:44 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:19:44 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:19:44 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:44 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:19:44 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:19:44 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:19:44 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:19:44.443-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:19:44.443-0500
2021-02-20T13:19:44.444-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.443-0500
2021/02/20 13:19:44 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:19:44 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:19:44 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:19:44 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:19:44 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:19:44 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:19:44 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:19:44 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.461-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:19:44.461-0500
2021-02-20T13:19:44.462-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:19:44.462-0500
2021-02-20T13:19:44.462-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:19:44.462-0500
2021-02-20T13:19:44.462-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:19:44.462-0500
2021-02-20T13:19:44.463-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:19:44.463-0500
2021-02-20T13:19:44.463-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:19:44.463-0500
2021-02-20T13:19:44.463-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:19:44.463-0500
2021-02-20T13:19:44.463-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:19:44.463-0500
2021-02-20T13:19:44.463-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:19:44.463-0500
2021-02-20T13:19:44.464-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:19:44.464-0500
2021-02-20T13:19:44.464-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:19:44.464-0500
2021-02-20T13:19:44.464-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:19:44.464-0500
2021-02-20T13:19:44.465-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:19:44.465-0500
2021-02-20T13:19:44.467-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc001076adc), Selector:(*v1.LabelSelector)(0xc00057ed20), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001076af0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc001076ae4), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc001076ae9), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001076ae8), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc001076ae0), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc001076ad8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:19:44.467-0500
2021-02-20T13:19:44.470-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.469-0500
2021-02-20T13:19:44.478-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25614",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.478-0500
2021-02-20T13:19:44.479-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"5d0014fc-57e7-4e71-8f6e-e3498d7eeef0", ResourceVersion:"25614", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441984, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000732b20), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000732b40)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:19:44.479-0500
2021-02-20T13:19:44.480-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:19:44.480-0500
2021-02-20T13:19:44.480-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:44.480-0500
2021-02-20T13:19:44.501-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25614",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.501-0500
2021-02-20T13:19:44.501-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:19:44.501-0500
2021-02-20T13:19:44.501-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:19:44.501-0500
2021-02-20T13:19:44.502-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:44.502-0500
2021-02-20T13:19:44.507-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25615",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.507-0500
2021-02-20T13:19:44.513-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25614",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.512-0500
2021-02-20T13:19:44.513-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"5d0014fc-57e7-4e71-8f6e-e3498d7eeef0", ResourceVersion:"25614", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441984, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0001a2b60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001a2b80)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:19:44.512-0500
2021/02/20 13:19:44 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:19:44 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:19:44 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:19:44 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 57
2021/02/20 13:19:44 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021-02-20T13:19:44.516-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:19:44.516-0500
2021-02-20T13:19:44.516-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:19:44.516-0500
2021-02-20T13:19:44.516-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:19:44.516-0500
2021-02-20T13:19:44.516-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:44.516-0500
2021/02/20 13:19:44 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:19:44.567-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:44 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25615",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:44.566-0500
2021-02-20T13:19:44.567-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:44 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:19:44.567-0500
2021-02-20T13:19:45.067-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:45 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:45.067-0500
2021-02-20T13:19:45.074-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:45 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:45 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25636",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:19:44Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:44Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:45.074-0500
2021-02-20T13:19:45.074-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:45 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:19:45.074-0500
2021-02-20T13:19:46.079-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:46 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:46.079-0500
2021-02-20T13:19:46.088-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:46 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:46 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25636",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:19:44Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:44Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:46.088-0500
2021-02-20T13:19:46.088-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:46 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:19:46.088-0500
2021-02-20T13:19:48.091-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:48.091-0500
2021-02-20T13:19:48.111-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25653",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:46Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:46Z",
    "lastTransitionTime": "2021-02-20T18:19:46Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:46Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.111-0500
2021-02-20T13:19:48.112-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"8306860b-50d3-4ee5-a6db-36c5c3c1a5b4", ResourceVersion:"25615", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441984, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000b8b9c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000b8b9e0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc001245178), Selector:(*v1.LabelSelector)(0xc000b8ba00), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001245260), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc001245268), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc001245269), SecurityContext:(*v1.PodSecurityContext)(0xc00051a690), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00124526a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000b8e860)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0012452c4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0012452c8)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:19:48.111-0500
2021-02-20T13:19:48.112-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:19:48.112-0500
2021-02-20T13:19:48.112-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:48.112-0500
2021-02-20T13:19:48.119-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25653",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:46Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:46Z",
    "lastTransitionTime": "2021-02-20T18:19:46Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:46Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.119-0500
2021-02-20T13:19:48.120-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:19:48.120-0500
2021-02-20T13:19:48.120-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:48.120-0500
2021-02-20T13:19:48.125-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4",
  "resourceVersion": "25653",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:19:46Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:46Z",
    "lastTransitionTime": "2021-02-20T18:19:46Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:19:46Z",
    "lastTransitionTime": "2021-02-20T18:19:44Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.125-0500
2021-02-20T13:19:48.126-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"8306860b-50d3-4ee5-a6db-36c5c3c1a5b4", ResourceVersion:"25653", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441984, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000f17660), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f17680)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000f176a0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f176c0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0003d3e20), Selector:(*v1.LabelSelector)(0xc000f176e0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0003d3ee0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0003d3ee8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0003d3ee9), SecurityContext:(*v1.PodSecurityContext)(0xc0000c8a80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0003d3eea), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000ee8b40)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0003d3f44), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0003d3f48)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441986, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441986, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441986, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749441984, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:19:48.126-0500
2021/02/20 13:19:48 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:19:48 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:19:48 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:19:48 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:19:48 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 58
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:48 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:19:48 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:19:48 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:19:48 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:19:48 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:19:48 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:19:48 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:19:48 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:19:48 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:19:48 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:19:48 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:19:48 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:19:48.162-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:19:48.162-0500
2021-02-20T13:19:48.163-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:19:48.163-0500
2021-02-20T13:19:48.163-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.163-0500
2021-02-20T13:19:48.186-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "bb69d693-41e4-43fd-b745-37fe253815d0",
  "resourceVersion": "25660",
  "creationTimestamp": "2021-02-20T18:19:48Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:48Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.88.249",
  "clusterIPs": [
   "10.96.88.249"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.186-0500
2021-02-20T13:19:48.189-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"bb69d693-41e4-43fd-b745-37fe253815d0", ResourceVersion:"25660", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441988, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001208e00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001208e20)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.88.249", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:19:48.188-0500
2021-02-20T13:19:48.189-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Checking service flask-app: timestamp=2021-02-20T13:19:48.188-0500
2021-02-20T13:19:48.189-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:48.188-0500
2021-02-20T13:19:48.199-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "bb69d693-41e4-43fd-b745-37fe253815d0",
  "resourceVersion": "25660",
  "creationTimestamp": "2021-02-20T18:19:48Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:48Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.88.249",
  "clusterIPs": [
   "10.96.88.249"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.199-0500
2021-02-20T13:19:48.200-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Reading service flask-app: timestamp=2021-02-20T13:19:48.200-0500
2021-02-20T13:19:48.200-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:19:48.200-0500
2021-02-20T13:19:48.208-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 871
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:19:48 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "bb69d693-41e4-43fd-b745-37fe253815d0",
  "resourceVersion": "25660",
  "creationTimestamp": "2021-02-20T18:19:48Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:48Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 31000
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.88.249",
  "clusterIPs": [
   "10.96.88.249"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:19:48.208-0500
2021-02-20T13:19:48.208-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"bb69d693-41e4-43fd-b745-37fe253815d0", ResourceVersion:"25660", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749441988, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001052540), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001052560)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:31000}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.88.249", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:19:48.208-0500
2021-02-20T13:19:48.208-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:19:48 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.88.249", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":31000, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:19:48.208-0500
2021/02/20 13:19:48 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:19:48 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 59
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:48 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:19:48 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:19:48 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:19:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:19:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:19:48 [TRACE] GRPCProvider: Close
2021/02/20 13:19:48 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:19:48.237-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:19:48.240-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=51999
2021-02-20T13:19:48.240-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:19:48 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:19:48 [TRACE] dag/walk: visiting "root"
2021/02/20 13:19:48 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:19:48 [TRACE] vertex "root": visit complete
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 60
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:19:48 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:20:49 [INFO] Terraform version: 0.14.6  
2021/02/20 13:20:49 [INFO] Go runtime version: go1.15.6
2021/02/20 13:20:49 [INFO] CLI args: []string{"/usr/local/bin/terraform", "destroy"}
2021/02/20 13:20:49 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:20:49 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:20:49 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:20:49 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:20:49 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:20:49 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:20:49 [INFO] CLI command args: []string{"destroy"}
2021/02/20 13:20:49 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:20:49 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:20:49 [DEBUG] New state was assigned lineage "849fd289-4496-c068-4faf-cc9585e7cf93"
2021/02/20 13:20:49 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:20:49 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:20:49 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:20:49 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:20:49 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:20:49 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:20:50 [DEBUG] checking for provisioner in "."
2021/02/20 13:20:50 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:20:50 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:20:50 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:20:50 [INFO] backend/local: starting Apply operation
2021/02/20 13:20:50 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:20:50 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:20:50 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:20:50 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:20:50 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 60
2021/02/20 13:20:50 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:20:50 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:20:50 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:20:50 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:20:50 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 60
2021/02/20 13:20:50 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:20:50 [TRACE] backend/local: building context for current working directory
2021/02/20 13:20:50 [TRACE] terraform.NewContext: starting
2021/02/20 13:20:50 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:20:50 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:20:50.186-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:20:50.220-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:20:50.225-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52095
2021-02-20T13:20:50.225-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:20:50.268-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:20:50.267-0500
2021-02-20T13:20:50.293-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin669042170 network=unix timestamp=2021-02-20T13:20:50.293-0500
2021-02-20T13:20:50.293-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:20:50.360-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:20:50 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:20:50 [TRACE] GRPCProvider: Close
2021-02-20T13:20:50.397-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:20:50.399-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52095
2021-02-20T13:20:50.399-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:20:50 [TRACE] terraform.NewContext: complete
2021/02/20 13:20:50 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:20:50 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:20:50 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:20:50 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:20:50 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:20:50 [TRACE] backend/local: running validation operation
2021/02/20 13:20:50 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:20:50 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:20:50 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:20:50 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:20:50 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:20:50 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:20:50 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:20:50 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:20:50 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:20:50 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:20:50 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:20:50 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:20:50 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:20:50 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:20:50.410-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:20:50.434-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:20:50.439-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52096
2021-02-20T13:20:50.439-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:20:50.480-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:20:50.480-0500
2021-02-20T13:20:50.506-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin324824455 network=unix timestamp=2021-02-20T13:20:50.505-0500
2021-02-20T13:20:50.506-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:20:50 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:20:50.558-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:20:50 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:20:50 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:20:50 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:20:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:20:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:20:50 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:20:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:20:50 [TRACE] GRPCProvider: Close
2021/02/20 13:20:50 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:20:50.621-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:20:50.623-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52096
2021-02-20T13:20:50.623-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "root"
2021/02/20 13:20:50 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:20:50 [TRACE] vertex "root": visit complete
2021/02/20 13:20:50 [INFO] backend/local: apply calling Plan
2021/02/20 13:20:50 [INFO] terraform: building graph: GraphTypePlanDestroy
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:20:50 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2021/02/20 13:20:50 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_deployment.flask-app current object
2021/02/20 13:20:50 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_namespace.flaskapp current object
2021/02/20 13:20:50 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for kubernetes_service.flask-app current object
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:20:50 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:20:50 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:20:50 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:20:50 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:20:50 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:20:50 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:20:50 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:20:50 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app" (*terraform.NodePlanDestroyableResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app has stored dependency of kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:20:50 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:20:50 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
  kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodePlanDestroyableResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodePlanDestroyableResourceInstance
    kubernetes_namespace.flaskapp - *terraform.NodePlanDestroyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:20:50 [DEBUG] Starting graph walk: walkPlanDestroy
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:20:50.624-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:20:50.649-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:20:50.654-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52097
2021-02-20T13:20:50.654-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:20:50.693-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:20:50.693-0500
2021-02-20T13:20:50.719-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin772100492 network=unix timestamp=2021-02-20T13:20:50.719-0500
2021-02-20T13:20:50.719-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:20:50 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:20:50 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021-02-20T13:20:50.781-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:20:50 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:20:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:20:50 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:20:50 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:20:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:20:50 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_namespace.flaskapp
2021/02/20 13:20:50 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_service.flask-app
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2021/02/20 13:20:50 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:20:50 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:20:50 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:20:50 [TRACE] EvalWriteDiff: recorded Delete change for kubernetes_deployment.flask-app
2021/02/20 13:20:50 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:20:50 [TRACE] GRPCProvider: Close
2021-02-20T13:20:50.852-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:20:50.856-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52097
2021-02-20T13:20:50.856-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:20:50 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:20:50 [TRACE] dag/walk: visiting "root"
2021/02/20 13:20:50 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:20:50 [TRACE] vertex "root": visit complete
2021/02/20 13:20:50 [DEBUG] command: asking for input: "Do you really want to destroy all resources?"
2021/02/20 13:20:52 [INFO] backend/local: apply calling Apply
2021/02/20 13:20:52 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:20:52 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:20:52 [TRACE] DiffTransformer starting
2021/02/20 13:20:52 [TRACE] DiffTransformer: found Delete change for kubernetes_namespace.flaskapp 
2021/02/20 13:20:52 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented for destruction by kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:20:52 [TRACE] DiffTransformer: found Delete change for kubernetes_service.flask-app 
2021/02/20 13:20:52 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented for destruction by kubernetes_service.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] DiffTransformer: found Delete change for kubernetes_deployment.flask-app 
2021/02/20 13:20:52 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented for destruction by kubernetes_deployment.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] DiffTransformer complete
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:20:52 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:20:52 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:20:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (destroy)
2021/02/20 13:20:52 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (destroy)
2021/02/20 13:20:52 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:20:52 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:20:52 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:20:52 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:20:52 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:20:52 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (destroy)
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:20:52 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:20:52 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:20:52 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:20:52 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:20:52 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:20:52 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:20:52 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:20:52 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:20:52 [TRACE] DestroyEdgeTransformer: "kubernetes_deployment.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_deployment.flask-app
2021/02/20 13:20:52 [TRACE] DestroyEdgeTransformer: "kubernetes_namespace.flaskapp (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_namespace.flaskapp
2021/02/20 13:20:52 [TRACE] DestroyEdgeTransformer: "kubernetes_service.flask-app (destroy)" (*terraform.NodeDestroyResourceInstance) destroys kubernetes_service.flask-app
2021/02/20 13:20:52 [TRACE] DestroyEdgeTransformer: kubernetes_deployment.flask-app (destroy) has stored dependency of kubernetes_service.flask-app (destroy)
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:20:52 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:20:52 [DEBUG] pruneUnusedNodes: kubernetes_deployment.flask-app (expand) is no longer needed, removing
2021/02/20 13:20:52 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:20:52 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:20:52 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
  kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (destroy) - *terraform.NodeDestroyResourceInstance
    kubernetes_namespace.flaskapp (destroy) - *terraform.NodeDestroyResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:20:52 [DEBUG] Starting graph walk: walkDestroy
2021/02/20 13:20:52 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:20:52 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:20:52.879-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:20:52.904-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:20:52.913-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52100
2021-02-20T13:20:52.913-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:20:52.955-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:20:52.955-0500
2021-02-20T13:20:52.984-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin973333835 network=unix timestamp=2021-02-20T13:20:52.984-0500
2021-02-20T13:20:52.984-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:20:53 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:20:53 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:20:53 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:20:53.037-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:20:53 [TRACE] GRPCProvider: Configure
2021-02-20T13:20:53.068-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:20:53.067-0500
2021-02-20T13:20:53.070-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:20:53.070-0500
2021/02/20 13:20:53 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:20:53 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:20:53 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:20:53 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (destroy)"
2021/02/20 13:20:53 [TRACE] vertex "kubernetes_service.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:20:53 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:20:53 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:20:53 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:20:53 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:20:53 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_service.flask-app
2021/02/20 13:20:53 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:20:53 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:20:53 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:20:53 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:20:53 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Delete change
2021/02/20 13:20:53 [TRACE] GRPCProvider: ApplyResourceChange
2021/02/20 13:20:53 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:20:53 [DEBUG] kubernetes_service.flask-app: applying the planned Delete change
2021/02/20 13:20:53 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:20:53.073-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [INFO] Deleting namespace: "flask-app": timestamp=2021-02-20T13:20:53.073-0500
2021-02-20T13:20:53.073-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [INFO] Deleting service: "flask-app": timestamp=2021-02-20T13:20:53.073-0500
2021-02-20T13:20:53.073-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.073-0500
2021-02-20T13:20:53.073-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 43
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.073-0500
2021-02-20T13:20:53.097-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25773",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "deletionTimestamp": "2021-02-20T18:20:53Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.097-0500
2021-02-20T13:20:53.097-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Waiting for state to become: []: timestamp=2021-02-20T13:20:53.097-0500
2021-02-20T13:20:53.097-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:53.097-0500
2021-02-20T13:20:53.107-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25773",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "deletionTimestamp": "2021-02-20T18:20:53Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.107-0500
2021-02-20T13:20:53.108-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:20:53.108-0500
2021-02-20T13:20:53.108-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [TRACE] Waiting 200ms before next try: timestamp=2021-02-20T13:20:53.108-0500
2021-02-20T13:20:53.126-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 163
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "kind": "services",
  "uid": "bb69d693-41e4-43fd-b745-37fe253815d0"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.126-0500
2021-02-20T13:20:53.127-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:20:53.126-0500
2021-02-20T13:20:53.127-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:53.127-0500
2021-02-20T13:20:53.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 194
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "services \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "services"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.135-0500
2021-02-20T13:20:53.136-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [INFO] Service flask-app deleted: timestamp=2021-02-20T13:20:53.136-0500
2021/02/20 13:20:53 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:20:53 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:20:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 61
2021/02/20 13:20:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:20:53 [TRACE] vertex "kubernetes_service.flask-app (destroy)": visit complete
2021/02/20 13:20:53 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (destroy)"
2021/02/20 13:20:53 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2021/02/20 13:20:53 [TRACE] EvalReadDiff: Read Delete change from plan for kubernetes_deployment.flask-app
2021/02/20 13:20:53 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:20:53 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:20:53 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:20:53 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:20:53 [DEBUG] kubernetes_deployment.flask-app: applying the planned Delete change
2021/02/20 13:20:53 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:20:53.179-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [INFO] Deleting deployment: "flask-app": timestamp=2021-02-20T13:20:53.179-0500
2021-02-20T13:20:53.179-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
DELETE /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 48
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "DeleteOptions",
 "apiVersion": "apps/v1"
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.179-0500
2021-02-20T13:20:53.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 181
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Success",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments",
  "uid": "8306860b-50d3-4ee5-a6db-36c5c3c1a5b4"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.192-0500
2021-02-20T13:20:53.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:20:53.192-0500
2021-02-20T13:20:53.192-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:53.192-0500
2021-02-20T13:20:53.199-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 220
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "deployments.apps \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "group": "apps",
  "kind": "deployments"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.199-0500
2021-02-20T13:20:53.199-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [INFO] Deployment flask-app deleted: timestamp=2021-02-20T13:20:53.199-0500
2021/02/20 13:20:53 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:20:53 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:20:53 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 62
2021/02/20 13:20:53 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:20:53 [TRACE] vertex "kubernetes_deployment.flask-app (destroy)": visit complete
2021-02-20T13:20:53.308-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:53.308-0500
2021-02-20T13:20:53.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25773",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "deletionTimestamp": "2021-02-20T18:20:53Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.314-0500
2021-02-20T13:20:53.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:20:53.314-0500
2021-02-20T13:20:53.314-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [TRACE] Waiting 400ms before next try: timestamp=2021-02-20T13:20:53.314-0500
2021-02-20T13:20:53.715-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:53.714-0500
2021-02-20T13:20:53.725-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:53 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25773",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "deletionTimestamp": "2021-02-20T18:20:53Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:53.725-0500
2021-02-20T13:20:53.726-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:20:53.725-0500
2021-02-20T13:20:53.726-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:53 [TRACE] Waiting 800ms before next try: timestamp=2021-02-20T13:20:53.725-0500
2021-02-20T13:20:54.528-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:54 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:54.527-0500
2021-02-20T13:20:54.540-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:54 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:54 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25773",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "deletionTimestamp": "2021-02-20T18:20:53Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:54.540-0500
2021-02-20T13:20:54.540-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:54 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:20:54.540-0500
2021-02-20T13:20:54.540-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:54 [TRACE] Waiting 1.6s before next try: timestamp=2021-02-20T13:20:54.540-0500
2021-02-20T13:20:56.144-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:56 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:56.144-0500
2021-02-20T13:20:56.151-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:56 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 627
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:56 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "5d0014fc-57e7-4e71-8f6e-e3498d7eeef0",
  "resourceVersion": "25773",
  "creationTimestamp": "2021-02-20T18:19:44Z",
  "deletionTimestamp": "2021-02-20T18:20:53Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:19:44Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Terminating"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:56.151-0500
2021-02-20T13:20:56.151-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:56 [DEBUG] Namespace flask-app status received: "Terminating": timestamp=2021-02-20T13:20:56.151-0500
2021-02-20T13:20:56.151-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:56 [TRACE] Waiting 3.2s before next try: timestamp=2021-02-20T13:20:56.151-0500
2021/02/20 13:20:57 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2021/02/20 13:20:58 [TRACE] dag/walk: vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021/02/20 13:20:58 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "kubernetes_namespace.flaskapp (destroy)"
2021-02-20T13:20:59.355-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:59 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:20:59.355-0500
2021-02-20T13:20:59.361-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:59 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 404 Not Found
Content-Length: 198
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:20:59 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Status",
 "apiVersion": "v1",
 "metadata": {},
 "status": "Failure",
 "message": "namespaces \"flask-app\" not found",
 "reason": "NotFound",
 "details": {
  "name": "flask-app",
  "kind": "namespaces"
 },
 "code": 404
}

-----------------------------------------------------: timestamp=2021-02-20T13:20:59.361-0500
2021-02-20T13:20:59.361-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:20:59 [INFO] Namespace flask-app deleted: timestamp=2021-02-20T13:20:59.361-0500
2021/02/20 13:20:59 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 63
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:20:59 [TRACE] vertex "kubernetes_namespace.flaskapp (destroy)": visit complete
2021/02/20 13:20:59 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:20:59 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:20:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:20:59 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:20:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:20:59 [TRACE] GRPCProvider: Close
2021-02-20T13:20:59.389-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:20:59.392-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52100
2021-02-20T13:20:59.392-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:20:59 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:20:59 [TRACE] dag/walk: visiting "root"
2021/02/20 13:20:59 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:20:59 [TRACE] vertex "root": visit complete
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 64
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:20:59 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:21:01 [INFO] Terraform version: 0.14.6  
2021/02/20 13:21:01 [INFO] Go runtime version: go1.15.6
2021/02/20 13:21:01 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:21:01 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:21:01 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:21:01 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:21:01 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:21:01 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:21:01 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:21:01 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:21:01 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:21:01 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:21:01 [DEBUG] New state was assigned lineage "7c7429aa-dd2c-f6e6-d5b3-babd78293660"
2021/02/20 13:21:01 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:21:01 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:21:01 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:21:01 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:21:01 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:21:01 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:21:01 [DEBUG] checking for provisioner in "."
2021/02/20 13:21:01 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:21:01 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:21:01 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:21:01 [INFO] backend/local: starting Apply operation
2021/02/20 13:21:01 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:21:01 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:21:01 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:21:01 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:21:01 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 64
2021/02/20 13:21:01 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:21:01 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:21:01 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:21:01 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:21:01 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 64
2021/02/20 13:21:01 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:21:01 [TRACE] backend/local: building context for current working directory
2021/02/20 13:21:01 [TRACE] terraform.NewContext: starting
2021/02/20 13:21:01 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:21:01 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:21:01.794-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:21:01.821-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:21:01.826-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52141
2021-02-20T13:21:01.826-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:21:01.868-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:21:01.868-0500
2021-02-20T13:21:01.896-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin392041368 network=unix timestamp=2021-02-20T13:21:01.896-0500
2021-02-20T13:21:01.896-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:21:01 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:21:01.956-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:21:01 [TRACE] GRPCProvider: Close
2021-02-20T13:21:01.988-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:21:01.991-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52141
2021-02-20T13:21:01.991-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:21:01 [TRACE] terraform.NewContext: complete
2021/02/20 13:21:01 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:21:01 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:21:01 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:21:01 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:21:01 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:21:01 [TRACE] backend/local: running validation operation
2021/02/20 13:21:01 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:21:01 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:21:01 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:21:01 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:21:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:21:01 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:21:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:21:01 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:21:01 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:21:01 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:21:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:21:01 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:21:01 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:01 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:21:01 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:21:01 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:21:01 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:21:01 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:21:01 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:01 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:21:01 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:21:01 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:21:01 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:21:01 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:21:01 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:21:01 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:21:01 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:21:01 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:21:01 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:21:01.993-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:21:02.019-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:21:02.024-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52142
2021-02-20T13:21:02.025-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:21:02.069-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:21:02.068-0500
2021-02-20T13:21:02.095-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:21:02.095-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin517356669 network=unix timestamp=2021-02-20T13:21:02.095-0500
2021/02/20 13:21:02 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:21:02.149-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:21:02 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:21:02 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:21:02 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:21:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:21:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:21:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:21:02 [TRACE] GRPCProvider: Close
2021/02/20 13:21:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:21:02.209-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:21:02.211-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52142
2021-02-20T13:21:02.211-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "root"
2021/02/20 13:21:02 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:21:02 [TRACE] vertex "root": visit complete
2021/02/20 13:21:02 [INFO] backend/local: apply calling Plan
2021/02/20 13:21:02 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:21:02 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:21:02 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:21:02 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:21:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:21:02 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:21:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:21:02 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:21:02 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:21:02 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:21:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:21:02 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:21:02 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:02 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:21:02 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:21:02 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:21:02 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:21:02 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:21:02 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:21:02 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:21:02 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:21:02 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:21:02 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:21:02 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:21:02 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:21:02 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:21:02 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:21:02.212-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:21:02.235-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:21:02.242-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52143
2021-02-20T13:21:02.242-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:21:02.281-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:21:02.281-0500
2021-02-20T13:21:02.309-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin025300154 network=unix timestamp=2021-02-20T13:21:02.309-0500
2021-02-20T13:21:02.310-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:21:02 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:02 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:21:02 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:21:02.366-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:21:02 [TRACE] GRPCProvider: Configure
2021-02-20T13:21:02.397-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:02 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:21:02.397-0500
2021-02-20T13:21:02.398-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:02 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:21:02.398-0500
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:21:02 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:21:02 [DEBUG] Resource instance state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:21:02 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:21:02 [DEBUG] Resource instance state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:21:02 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] ReadResourceInstanceState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:21:02 [TRACE] ReadResourceInstanceState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:21:02 [DEBUG] refresh: kubernetes_namespace.flaskapp: no state, so not refreshing
2021/02/20 13:21:02 [DEBUG] refresh: kubernetes_deployment.flask-app: no state, so not refreshing
2021/02/20 13:21:02 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:21:02 [TRACE] EvalWriteState: removing state object for kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] EvalWriteState: removing state object for kubernetes_deployment.flask-app
2021/02/20 13:21:02 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:21:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:02 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:21:02 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:21:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:02 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:21:02 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_namespace.flaskapp
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:21:02 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:21:02 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:21:02 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_deployment.flask-app
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:21:02 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:21:02 [DEBUG] Resource instance state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:21:02 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:21:02 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:21:02 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:21:02 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:21:02 [TRACE] ReadResourceInstanceState: no state present for kubernetes_service.flask-app
2021/02/20 13:21:02 [DEBUG] refresh: kubernetes_service.flask-app: no state, so not refreshing
2021/02/20 13:21:02 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:21:02 [TRACE] EvalWriteState: removing state object for kubernetes_service.flask-app
2021/02/20 13:21:02 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:21:02 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:02 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:21:02 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:21:02 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:21:02 [TRACE] EvalWriteDiff: recorded Create change for kubernetes_service.flask-app
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:21:02 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:21:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:21:02 [TRACE] GRPCProvider: Close
2021-02-20T13:21:02.427-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/02/20 13:21:02 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:21:02.430-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52143
2021-02-20T13:21:02.430-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:21:02 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:21:02 [TRACE] dag/walk: visiting "root"
2021/02/20 13:21:02 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:21:02 [TRACE] vertex "root": visit complete
2021/02/20 13:21:02 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:21:04 [INFO] backend/local: apply calling Apply
2021/02/20 13:21:04 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:21:04 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:21:04 [TRACE] DiffTransformer starting
2021/02/20 13:21:04 [TRACE] DiffTransformer: found Create change for kubernetes_namespace.flaskapp 
2021/02/20 13:21:04 [TRACE] DiffTransformer: kubernetes_namespace.flaskapp will be represented by kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] DiffTransformer: found Create change for kubernetes_deployment.flask-app 
2021/02/20 13:21:04 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] DiffTransformer: found Create change for kubernetes_service.flask-app 
2021/02/20 13:21:04 [TRACE] DiffTransformer: kubernetes_service.flask-app will be represented by kubernetes_service.flask-app
2021/02/20 13:21:04 [TRACE] DiffTransformer complete
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:21:04 [DEBUG] Resource state not found for node "kubernetes_namespace.flaskapp", instance kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [DEBUG] Resource state not found for node "kubernetes_deployment.flask-app", instance kubernetes_deployment.flask-app
2021/02/20 13:21:04 [DEBUG] Resource state not found for node "kubernetes_service.flask-app", instance kubernetes_service.flask-app
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:72,1-42
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:13,1-43
2021/02/20 13:21:04 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:21:04 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:21:04 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:21:04 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:21:04 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:21:04 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:21:04 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:21:04 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:21:04 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app (expand) kubernetes_deployment.flask-app kubernetes_deployment.flask-app]
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:21:04 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:21:04 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:21:04 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:21:04 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:21:04 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:21:04 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:21:04 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:21:04 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:21:04 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeApplyableResourceInstance
    kubernetes_service.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:21:04 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:21:04 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:21:04.299-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:21:04.326-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:21:04.333-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52144
2021-02-20T13:21:04.333-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:21:04.374-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:21:04.374-0500
2021-02-20T13:21:04.403-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin065739735 network=unix timestamp=2021-02-20T13:21:04.402-0500
2021-02-20T13:21:04.403-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:21:04 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:21:04 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:21:04 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:21:04.456-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:21:04 [TRACE] GRPCProvider: Configure
2021-02-20T13:21:04.488-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:21:04.488-0500
2021-02-20T13:21:04.489-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:21:04.489-0500
2021/02/20 13:21:04 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:21:04 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:21:04 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:21:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:04 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:21:04 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:21:04 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:04 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:21:04 [TRACE] EvalReadState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalReadState: no state present for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:21:04 [DEBUG] kubernetes_namespace.flaskapp: applying the planned Create change
2021/02/20 13:21:04 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:21:04.494-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Creating new namespace: v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName(nil)}, Status:v1.NamespaceStatus{Phase:"", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:21:04.494-0500
2021-02-20T13:21:04.494-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 186
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "creationTimestamp": null,
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  }
 },
 "spec": {},
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.494-0500
2021/02/20 13:21:04 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:21:04 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_rollout: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].revision_history_limit: planned value cty.NumberIntVal(10) does not match config value cty.NullVal(cty.Number)
      - .spec[0].min_ready_seconds: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .spec[0].paused: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].progress_deadline_seconds: planned value cty.NumberIntVal(600) does not match config value cty.NullVal(cty.Number)
      - .spec[0].strategy: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].restart_policy: planned value cty.StringVal("Always") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].termination_grace_period_seconds: planned value cty.NumberIntVal(30) does not match config value cty.NullVal(cty.Number)
      - .spec[0].template[0].spec[0].automount_service_account_token: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_ipc: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_pid: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].host_network: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].dns_policy: planned value cty.StringVal("ClusterFirst") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].enable_service_links: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].share_process_namespace: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].stdin_once: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].tty: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].template[0].spec[0].container[0].termination_message_path: planned value cty.StringVal("/dev/termination-log") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
      - .spec[0].template[0].spec[0].container[0].volume_mount: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].image_pull_secrets: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].readiness_gate: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .spec[0].template[0].spec[0].volume: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/02/20 13:21:04 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:21:04 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:21:04 [TRACE] EvalReadState: no state present for kubernetes_deployment.flask-app
2021/02/20 13:21:04 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:21:04 [DEBUG] kubernetes_deployment.flask-app: applying the planned Create change
2021/02/20 13:21:04 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.strategy" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.511-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:21:04.511-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.volume" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.512-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.readiness_gate" from ComputedKeys: timestamp=2021-02-20T13:21:04.512-0500
2021-02-20T13:21:04.513-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.image_pull_secrets" from ComputedKeys: timestamp=2021-02-20T13:21:04.513-0500
2021-02-20T13:21:04.513-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:21:04.513-0500
2021-02-20T13:21:04.513-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] setting computed for "spec.0.template.0.spec.0.container.0.volume_mount" from ComputedKeys: timestamp=2021-02-20T13:21:04.513-0500
2021-02-20T13:21:04.517-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Creating new deployment: v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc0011d7400), Selector:(*v1.LabelSelector)(0xc00148ae60), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string{}, Args:[]string{}, WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:5, scale:-1}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"", ImagePullPolicy:"", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0011d7410), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string{}, ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0011d7408), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0011d740d), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference{}, Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0011d740c), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"", RollingUpdate:(*v1.RollingUpdateDeployment)(nil)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0011d7404), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0011d73fc)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:21:04.515-0500
2021-02-20T13:21:04.519-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /apis/apps/v1/namespaces/default/deployments HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 841
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null,
  "labels": {
   "App": "flask-app"
  }
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "enableServiceLinks": true
   }
  },
  "strategy": {},
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.519-0500
2021-02-20T13:21:04.522-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:04 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "afc5da4d-43eb-429c-9c3e-0d201f1785d1",
  "resourceVersion": "25813",
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.522-0500
2021-02-20T13:21:04.523-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Submitted new namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"afc5da4d-43eb-429c-9c3e-0d201f1785d1", ResourceVersion:"25813", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc001062ca0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001062cc0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:21:04.523-0500
2021-02-20T13:21:04.523-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:21:04.523-0500
2021-02-20T13:21:04.523-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:04.523-0500
2021-02-20T13:21:04.538-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:04 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "afc5da4d-43eb-429c-9c3e-0d201f1785d1",
  "resourceVersion": "25813",
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.538-0500
2021-02-20T13:21:04.538-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:21:04.538-0500
2021-02-20T13:21:04.538-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:21:04.538-0500
2021-02-20T13:21:04.538-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:04.538-0500
2021-02-20T13:21:04.548-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:04 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25814",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.548-0500
2021-02-20T13:21:04.552-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Waiting for deployment default/flask-app to schedule 2 replicas: timestamp=2021-02-20T13:21:04.552-0500
2021-02-20T13:21:04.552-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:21:04.552-0500
2021-02-20T13:21:04.552-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:21:04.552-0500
2021-02-20T13:21:04.552-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:04.552-0500
2021-02-20T13:21:04.559-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 2213
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:04 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25814",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {}
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.558-0500
2021-02-20T13:21:04.559-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [TRACE] Waiting 500ms before next try: timestamp=2021-02-20T13:21:04.559-0500
2021-02-20T13:21:04.560-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:04 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "afc5da4d-43eb-429c-9c3e-0d201f1785d1",
  "resourceVersion": "25813",
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:04.560-0500
2021-02-20T13:21:04.560-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:04 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"afc5da4d-43eb-429c-9c3e-0d201f1785d1", ResourceVersion:"25813", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000f786c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f786e0)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:21:04.560-0500
2021/02/20 13:21:04 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_namespace.flaskapp, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:21:04 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:21:04 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:21:04 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 65
2021/02/20 13:21:04 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:21:04 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021-02-20T13:21:05.064-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:05 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:05.064-0500
2021-02-20T13:21:05.075-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:05 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3441
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:05 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25834",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "unavailableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:21:04Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:04Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:05.074-0500
2021-02-20T13:21:05.075-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:05 [TRACE] Waiting 1s before next try: timestamp=2021-02-20T13:21:05.075-0500
2021-02-20T13:21:06.077-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:06 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:06.077-0500
2021-02-20T13:21:06.085-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:06 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3527
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:06 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25846",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:05Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:unavailableReplicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 1,
  "availableReplicas": 1,
  "unavailableReplicas": 1,
  "conditions": [
   {
    "type": "Available",
    "status": "False",
    "lastUpdateTime": "2021-02-20T18:21:04Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "MinimumReplicasUnavailable",
    "message": "Deployment does not have minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:05Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "ReplicaSetUpdated",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" is progressing."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:06.085-0500
2021-02-20T13:21:06.085-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:06 [TRACE] Waiting 2s before next try: timestamp=2021-02-20T13:21:06.085-0500
2021-02-20T13:21:08.086-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:08.086-0500
2021-02-20T13:21:08.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:08 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25852",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.097-0500
2021-02-20T13:21:08.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Submitted new deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f38adf79-81b7-4345-9bb7-a39d3c14b4d5", ResourceVersion:"25814", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000a563e0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a56400)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000095aa8), Selector:(*v1.LabelSelector)(0xc000a56420), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000095e00), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000095e08), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000095e09), SecurityContext:(*v1.PodSecurityContext)(0xc001044620), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000095e0a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000a54140)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00090a054), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00090a058)}, Status:v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:21:08.098-0500
2021-02-20T13:21:08.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:21:08.098-0500
2021-02-20T13:21:08.098-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:08.098-0500
2021-02-20T13:21:08.109-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:08 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25852",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.109-0500
2021-02-20T13:21:08.109-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:21:08.109-0500
2021-02-20T13:21:08.109-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:08.109-0500
2021-02-20T13:21:08.116-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:08 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25852",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.116-0500
2021-02-20T13:21:08.116-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f38adf79-81b7-4345-9bb7-a39d3c14b4d5", ResourceVersion:"25852", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000a56f60), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a56f80)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000a56fa0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000a56fc0)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00090a680), Selector:(*v1.LabelSelector)(0xc000a56fe0), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00090a750), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00090a758), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00090a759), SecurityContext:(*v1.PodSecurityContext)(0xc0010447e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00090a75a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000a54a00)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00090a7b4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00090a7b8)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:21:08.116-0500
2021/02/20 13:21:08 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
2021/02/20 13:21:08 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:21:08 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:21:08 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:21:08 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 66
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:21:08 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:21:08 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:21:08 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:21:08 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalReadDiff: Read Create change from plan for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:21:08 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:21:08 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:21:08 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .wait_for_load_balancer: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .metadata[0].namespace: planned value cty.StringVal("default") does not match config value cty.NullVal(cty.String)
      - .spec[0].session_affinity: planned value cty.StringVal("None") does not match config value cty.NullVal(cty.String)
      - .spec[0].publish_not_ready_addresses: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .spec[0].port[0].protocol: planned value cty.StringVal("TCP") does not match config value cty.NullVal(cty.String)
2021/02/20 13:21:08 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/02/20 13:21:08 [TRACE] EvalReadState: reading state for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalReadState: no state present for kubernetes_service.flask-app
2021/02/20 13:21:08 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:21:08 [DEBUG] kubernetes_service.flask-app: applying the planned Create change
2021/02/20 13:21:08 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:21:08.150-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] setting computed for "status" from ComputedKeys: timestamp=2021-02-20T13:21:08.150-0500
2021-02-20T13:21:08.152-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Creating new service: v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:21:08.151-0500
2021-02-20T13:21:08.152-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
POST /api/v1/namespaces/default/services HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 304
Accept: application/json, */*
Content-Type: application/json
Accept-Encoding: gzip

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "creationTimestamp": null
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "type": "NodePort",
  "sessionAffinity": "None"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.152-0500
2021-02-20T13:21:08.179-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 201 Created
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:08 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9425287b-3f8a-40bc-ab57-bce1682c4982",
  "resourceVersion": "25858",
  "creationTimestamp": "2021-02-20T18:21:08Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:08Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.157.135",
  "clusterIPs": [
   "10.96.157.135"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.179-0500
2021-02-20T13:21:08.180-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Submitted new service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9425287b-3f8a-40bc-ab57-bce1682c4982", ResourceVersion:"25858", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442068, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00153cee0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00153cf00)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.157.135", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:21:08.180-0500
2021-02-20T13:21:08.180-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Checking service flask-app: timestamp=2021-02-20T13:21:08.180-0500
2021-02-20T13:21:08.180-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:08.180-0500
2021-02-20T13:21:08.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:08 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9425287b-3f8a-40bc-ab57-bce1682c4982",
  "resourceVersion": "25858",
  "creationTimestamp": "2021-02-20T18:21:08Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:08Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.157.135",
  "clusterIPs": [
   "10.96.157.135"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.190-0500
2021-02-20T13:21:08.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Reading service flask-app: timestamp=2021-02-20T13:21:08.191-0500
2021-02-20T13:21:08.191-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:21:08.191-0500
2021-02-20T13:21:08.200-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:21:08 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9425287b-3f8a-40bc-ab57-bce1682c4982",
  "resourceVersion": "25858",
  "creationTimestamp": "2021-02-20T18:21:08Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:08Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.157.135",
  "clusterIPs": [
   "10.96.157.135"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:21:08.200-0500
2021-02-20T13:21:08.200-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9425287b-3f8a-40bc-ab57-bce1682c4982", ResourceVersion:"25858", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442068, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc00148ac00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00148ac20)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.157.135", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:21:08.200-0500
2021-02-20T13:21:08.200-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:21:08 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.157.135", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30201, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:21:08.200-0500
2021/02/20 13:21:08 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generate_name: was null, but now cty.StringVal("")
      - .spec[0].external_name: was null, but now cty.StringVal("")
      - .spec[0].load_balancer_ip: was null, but now cty.StringVal("")
      - .spec[0].port[0].name: was null, but now cty.StringVal("")
2021/02/20 13:21:08 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 67
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:21:08 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:21:08 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:21:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:21:08 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:21:08 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:21:08 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:21:08 [TRACE] GRPCProvider: Close
2021-02-20T13:21:08.228-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:21:08.232-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52144
2021-02-20T13:21:08.232-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:21:08 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:21:08 [TRACE] dag/walk: visiting "root"
2021/02/20 13:21:08 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:21:08 [TRACE] vertex "root": visit complete
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 68
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:21:08 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021/02/20 13:22:48 [INFO] Terraform version: 0.14.6  
2021/02/20 13:22:48 [INFO] Go runtime version: go1.15.6
2021/02/20 13:22:48 [INFO] CLI args: []string{"/usr/local/bin/terraform", "show"}
2021/02/20 13:22:48 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:22:48 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:22:48 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:22:48 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:22:48 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:22:48 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:22:48 [INFO] CLI command args: []string{"show"}
2021/02/20 13:22:48 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:22:48 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:22:48 [DEBUG] New state was assigned lineage "119784cb-7ba0-031d-abba-822d8f1d9dcb"
2021/02/20 13:22:48 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:22:48 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:22:48 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:22:48 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:22:48 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:22:48 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:22:49 [DEBUG] checking for provisioner in "."
2021/02/20 13:22:49 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:22:49 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:22:49 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:22:49 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:22:49 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:22:49 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:22:49 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:22:49 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 13:22:49 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 68
2021/02/20 13:22:49 [DEBUG] backend/local: skipping refresh of managed resources
2021/02/20 13:22:49 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:22:49 [TRACE] backend/local: building context for current working directory
2021/02/20 13:22:49 [TRACE] terraform.NewContext: starting
2021/02/20 13:22:49 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:22:49 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:22:49.157-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:22:49.195-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:22:49.202-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52292
2021-02-20T13:22:49.202-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:22:49.252-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:22:49.252-0500
2021-02-20T13:22:49.285-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: network=unix address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin260568419 timestamp=2021-02-20T13:22:49.285-0500
2021-02-20T13:22:49.285-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:22:49 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:22:49.362-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:22:49 [TRACE] GRPCProvider: Close
2021-02-20T13:22:49.406-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:22:49.409-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52292
2021-02-20T13:22:49.409-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:22:49 [TRACE] terraform.NewContext: complete
2021/02/20 13:22:49 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:22:49 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 13:22:49 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 68
2021/02/20 13:22:59 [INFO] Terraform version: 0.14.6  
2021/02/20 13:22:59 [INFO] Go runtime version: go1.15.6
2021/02/20 13:22:59 [INFO] CLI args: []string{"/usr/local/bin/terraform", "state", "list"}
2021/02/20 13:22:59 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:22:59 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:22:59 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:22:59 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:22:59 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:22:59 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:22:59 [INFO] CLI command args: []string{"state", "list"}
2021/02/20 13:22:59 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:22:59 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:22:59 [DEBUG] New state was assigned lineage "ccf2cbf9-4987-e0db-e79e-1ce986888493"
2021/02/20 13:22:59 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:22:59 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:22:59 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:22:59 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:22:59 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:22:59 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:23:00 [DEBUG] checking for provisioner in "."
2021/02/20 13:23:00 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:23:00 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:23:00 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:23:00 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:23:00 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021/02/20 13:23:00 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 68
2021/02/20 13:23:34 [INFO] Terraform version: 0.14.6  
2021/02/20 13:23:34 [INFO] Go runtime version: go1.15.6
2021/02/20 13:23:34 [INFO] CLI args: []string{"/usr/local/bin/terraform", "apply"}
2021/02/20 13:23:34 [DEBUG] Attempting to open CLI config file: /Users/merve/.terraformrc
2021/02/20 13:23:34 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/02/20 13:23:34 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021/02/20 13:23:34 [DEBUG] ignoring non-existing provider search directory /Users/merve/.terraform.d/plugins
2021/02/20 13:23:34 [DEBUG] ignoring non-existing provider search directory /Users/merve/Library/Application Support/io.terraform/plugins
2021/02/20 13:23:34 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021/02/20 13:23:34 [INFO] CLI command args: []string{"apply"}
2021/02/20 13:23:35 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/02/20 13:23:35 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/02/20 13:23:35 [DEBUG] New state was assigned lineage "dc8e8a82-6482-2294-cae6-d29e5cda75a8"
2021/02/20 13:23:35 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/02/20 13:23:35 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/02/20 13:23:35 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021/02/20 13:23:35 [TRACE] getproviders.SearchLocalDirectory: .terraform/providers is a symlink to .terraform/providers
2021/02/20 13:23:35 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/hashicorp/kubernetes v2.0.2 for darwin_amd64 at .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64
2021/02/20 13:23:35 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64 as a candidate package for registry.terraform.io/hashicorp/kubernetes 2.0.2
2021/02/20 13:23:35 [DEBUG] checking for provisioner in "."
2021/02/20 13:23:35 [DEBUG] checking for provisioner in "/usr/local/bin"
2021/02/20 13:23:35 [INFO] Failed to read plugin lock file .terraform/plugins/darwin_amd64/lock.json: open .terraform/plugins/darwin_amd64/lock.json: no such file or directory
2021/02/20 13:23:35 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/02/20 13:23:35 [INFO] backend/local: starting Apply operation
2021/02/20 13:23:35 [TRACE] backend/local: requesting state manager for workspace "default"
2021/02/20 13:23:35 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/02/20 13:23:35 [TRACE] backend/local: requesting state lock for workspace "default"
2021/02/20 13:23:35 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/02/20 13:23:35 [TRACE] statemgr.Filesystem: existing snapshot has lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 68
2021/02/20 13:23:35 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/02/20 13:23:35 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/02/20 13:23:35 [TRACE] backend/local: reading remote state for workspace "default"
2021/02/20 13:23:35 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/02/20 13:23:35 [TRACE] statemgr.Filesystem: read snapshot with lineage "fb7586cc-b23e-2ba1-1fa7-7f623e745739" serial 68
2021/02/20 13:23:35 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/02/20 13:23:35 [TRACE] backend/local: building context for current working directory
2021/02/20 13:23:35 [TRACE] terraform.NewContext: starting
2021/02/20 13:23:35 [TRACE] terraform.NewContext: loading provider schemas
2021/02/20 13:23:35 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/hashicorp/kubernetes"
2021-02-20T13:23:35.225-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:23:35.258-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:23:35.262-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52392
2021-02-20T13:23:35.262-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:23:35.303-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:23:35.302-0500
2021-02-20T13:23:35.328-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin539762631 network=unix timestamp=2021-02-20T13:23:35.328-0500
2021-02-20T13:23:35.328-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:23:35 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:23:35.394-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:23:35 [TRACE] GRPCProvider: Close
2021-02-20T13:23:35.439-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:23:35.442-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52392
2021-02-20T13:23:35.442-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:23:35 [TRACE] terraform.NewContext: complete
2021/02/20 13:23:35 [TRACE] backend/local: finished building terraform.Context
2021/02/20 13:23:35 [TRACE] backend/local: requesting interactive input, if necessary
2021/02/20 13:23:35 [TRACE] Context.Input: Prompting for provider arguments
2021/02/20 13:23:35 [TRACE] Context.Input: Provider provider.kubernetes declared at kubernetes.tf:9,1-22
2021/02/20 13:23:35 [TRACE] Context.Input: Input for provider.kubernetes: map[string]cty.Value{}
2021/02/20 13:23:35 [TRACE] backend/local: running validation operation
2021/02/20 13:23:35 [INFO] terraform: building graph: GraphTypeValidate
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:23:35 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:23:35 [TRACE] StateTransformer: state is empty, so nothing to do
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:23:35 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:23:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:23:35 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app
2021/02/20 13:23:35 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: [kubernetes_deployment.flask-app]
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app - *terraform.NodeValidatableResource
    kubernetes_deployment.flask-app - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp - *terraform.NodeValidatableResource
    kubernetes_service.flask-app - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:23:35 [DEBUG] Starting graph walk: walkValidate
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:23:35.454-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:23:35.485-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:23:35.490-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52393
2021-02-20T13:23:35.490-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:23:35.531-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:23:35.531-0500
2021-02-20T13:23:35.560-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin746803356 network=unix timestamp=2021-02-20T13:23:35.560-0500
2021-02-20T13:23:35.560-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:23:35 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021-02-20T13:23:35.615-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:23:35 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:23:35 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:23:35 [TRACE] GRPCProvider: PrepareProviderConfig
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:23:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:23:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodeValidatableResource)
2021/02/20 13:23:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:23:35 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:23:35 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:23:35 [TRACE] GRPCProvider: Close
2021-02-20T13:23:35.685-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:23:35.688-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52393
2021-02-20T13:23:35.688-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "root"
2021/02/20 13:23:35 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:23:35 [TRACE] vertex "root": visit complete
2021/02/20 13:23:35 [INFO] backend/local: apply calling Plan
2021/02/20 13:23:35 [INFO] terraform: building graph: GraphTypePlan
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:23:35 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.StateTransformer
2021/02/20 13:23:35 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:23:35 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:23:35 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:23:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:23:35 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:23:35 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:23:35 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:23:35 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:23:35 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: [kubernetes_deployment.flask-app (expand)]
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:23:35 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:23:35 [TRACE] AttachDependenciesTransformer: kubernetes_service.flask-app depends on [kubernetes_deployment.flask-app]
2021/02/20 13:23:35 [TRACE] AttachDependenciesTransformer: kubernetes_namespace.flaskapp depends on []
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.attachDataResourceDependenciesTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.attachDataResourceDependenciesTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:23:35 [TRACE] ForcedCBDTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:23:35 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:23:35 [TRACE] ForcedCBDTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandPlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandPlannableResource
    kubernetes_service.flask-app (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:23:35 [DEBUG] Starting graph walk: walkPlan
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:23:35.690-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:23:35.713-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:23:35.719-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52394
2021-02-20T13:23:35.719-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:23:35.762-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:23:35.762-0500
2021-02-20T13:23:35.787-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin329479137 network=unix timestamp=2021-02-20T13:23:35.787-0500
2021-02-20T13:23:35.788-0500 [DEBUG] plugin: using plugin: version=5
2021/02/20 13:23:35 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:35 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:23:35 [TRACE] GRPCProvider: GetSchema
2021-02-20T13:23:35.841-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:23:35 [TRACE] GRPCProvider: Configure
2021-02-20T13:23:35.872-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:23:35.872-0500
2021-02-20T13:23:35.874-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:23:35.874-0500
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp (expand)"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": expanding dynamic subgraph
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": entering dynamic subgraph
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": expanding dynamic subgraph
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": expanding dynamic subgraph
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:23:35 [TRACE] ResourceCountTransformer: adding kubernetes_namespace.flaskapp as *terraform.NodePlannableResourceInstance
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_namespace.flaskapp - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp" references: []
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": entering dynamic subgraph
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:23:35 [TRACE] ResourceCountTransformer: adding kubernetes_deployment.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_namespace.flaskapp"
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:23:35 [TRACE] ReadResourceInstanceState: reading state for kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": entering dynamic subgraph
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:23:35 [TRACE] ReadResourceInstanceState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] UpgradeResourceState: schema version of kubernetes_namespace.flaskapp is still 0; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:23:35 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:23:35 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:23:35 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:23:35 [TRACE] GRPCProvider: ReadResource
2021-02-20T13:23:35.881-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Checking namespace flask-app: timestamp=2021-02-20T13:23:35.881-0500
2021-02-20T13:23:35.881-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:35.881-0500
2021/02/20 13:23:35 [TRACE] GRPCProvider: ReadResource
2021-02-20T13:23:35.888-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:23:35.888-0500
2021-02-20T13:23:35.888-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:35.888-0500
2021-02-20T13:23:35.898-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:35 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "afc5da4d-43eb-429c-9c3e-0d201f1785d1",
  "resourceVersion": "25813",
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:35.898-0500
2021-02-20T13:23:35.898-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Namespace flask-app exists: timestamp=2021-02-20T13:23:35.898-0500
2021-02-20T13:23:35.899-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Reading namespace flask-app: timestamp=2021-02-20T13:23:35.899-0500
2021-02-20T13:23:35.899-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:35.899-0500
2021-02-20T13:23:35.899-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:35 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25852",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:35.899-0500
2021-02-20T13:23:35.903-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:23:35.903-0500
2021-02-20T13:23:35.903-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:35.903-0500
2021-02-20T13:23:35.906-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 579
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:35 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Namespace",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "uid": "afc5da4d-43eb-429c-9c3e-0d201f1785d1",
  "resourceVersion": "25813",
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "mylabel": "flask-app"
  },
  "annotations": {
   "name": "flask-app"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:name": {}
      },
      "f:labels": {
       ".": {},
       "f:mylabel": {}
      }
     },
     "f:status": {
      "f:phase": {}
     }
    }
   }
  ]
 },
 "spec": {
  "finalizers": [
   "kubernetes"
  ]
 },
 "status": {
  "phase": "Active"
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:35.906-0500
2021-02-20T13:23:35.906-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Received namespace: &v1.Namespace{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"", SelfLink:"", UID:"afc5da4d-43eb-429c-9c3e-0d201f1785d1", ResourceVersion:"25813", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"mylabel":"flask-app"}, Annotations:map[string]string{"name":"flask-app"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc000d2db20), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d2db40)}}}, Spec:v1.NamespaceSpec{Finalizers:[]v1.FinalizerName{"kubernetes"}}, Status:v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}}: timestamp=2021-02-20T13:23:35.906-0500
2021/02/20 13:23:35 [TRACE] EvalWriteState: using RefreshState for kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] Re-validating config for "kubernetes_namespace.flaskapp"
2021/02/20 13:23:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:35 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:23:35 [TRACE] EvalWriteState: writing current state object for kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_namespace.flaskapp
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": dynamic subgraph completed successfully
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp": visit complete
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": dynamic subgraph completed successfully
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_namespace.flaskapp (expand)": visit complete
2021-02-20T13:23:35.913-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:35 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "25852",
  "generation": 1,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 2,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:35.912-0500
2021-02-20T13:23:35.913-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f38adf79-81b7-4345-9bb7-a39d3c14b4d5", ResourceVersion:"25852", Generation:1, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000659cc0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000659ce0)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc000659d00), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000659d20)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00028bf90), Selector:(*v1.LabelSelector)(0xc000659d40), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0002e0080), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc0002e0088), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc0002e0089), SecurityContext:(*v1.PodSecurityContext)(0xc000499f10), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0002e008a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc000da1ed0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc0002e00e4), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc0002e00e8)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:23:35.913-0500
2021/02/20 13:23:35 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app during refresh.
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
2021/02/20 13:23:35 [TRACE] EvalWriteState: using RefreshState for kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:23:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:35 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:23:35 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/02/20 13:23:35 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] EvalWriteDiff: recorded Update change for kubernetes_deployment.flask-app
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": dynamic subgraph completed successfully
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_service.flask-app (expand)"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResource)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": expanding dynamic subgraph
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/02/20 13:23:35 [TRACE] ResourceCountTransformer: adding kubernetes_service.flask-app as *terraform.NodePlannableResourceInstance
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  kubernetes_service.flask-app - *terraform.NodePlannableResourceInstance
  ------
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:23:35 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app" references: []
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:23:35 [TRACE] Executing graph transform *terraform.RootTransformer
2021/02/20 13:23:35 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": entering dynamic subgraph
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "kubernetes_service.flask-app"
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": starting visit (*terraform.NodePlannableResourceInstance)
2021/02/20 13:23:35 [TRACE] ReadResourceInstanceState: reading state for kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] UpgradeResourceState: schema version of kubernetes_service.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:23:35 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:23:35 [TRACE] GRPCProvider: ReadResource
2021-02-20T13:23:35.938-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Checking service flask-app: timestamp=2021-02-20T13:23:35.938-0500
2021-02-20T13:23:35.938-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:35.938-0500
2021-02-20T13:23:35.943-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:35 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9425287b-3f8a-40bc-ab57-bce1682c4982",
  "resourceVersion": "25858",
  "creationTimestamp": "2021-02-20T18:21:08Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:08Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.157.135",
  "clusterIPs": [
   "10.96.157.135"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:35.943-0500
2021-02-20T13:23:35.944-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Reading service flask-app: timestamp=2021-02-20T13:23:35.944-0500
2021-02-20T13:23:35.944-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /api/v1/namespaces/default/services/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:35.944-0500
2021-02-20T13:23:35.952-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 873
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:35 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Service",
 "apiVersion": "v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "9425287b-3f8a-40bc-ab57-bce1682c4982",
  "resourceVersion": "25858",
  "creationTimestamp": "2021-02-20T18:21:08Z",
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "v1",
    "time": "2021-02-20T18:21:08Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:spec": {
      "f:externalTrafficPolicy": {},
      "f:ports": {
       ".": {},
       "k:{\"port\":5000,\"protocol\":\"TCP\"}": {
        ".": {},
        "f:nodePort": {},
        "f:port": {},
        "f:protocol": {},
        "f:targetPort": {}
       }
      },
      "f:selector": {
       ".": {},
       "f:App": {}
      },
      "f:sessionAffinity": {},
      "f:type": {}
     }
    }
   }
  ]
 },
 "spec": {
  "ports": [
   {
    "protocol": "TCP",
    "port": 5000,
    "targetPort": 5000,
    "nodePort": 30201
   }
  ],
  "selector": {
   "App": "flask-app"
  },
  "clusterIP": "10.96.157.135",
  "clusterIPs": [
   "10.96.157.135"
  ],
  "type": "NodePort",
  "sessionAffinity": "None",
  "externalTrafficPolicy": "Cluster"
 },
 "status": {
  "loadBalancer": {}
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:35.952-0500
2021-02-20T13:23:35.952-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [INFO] Received service: &v1.Service{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"9425287b-3f8a-40bc-ab57-bce1682c4982", ResourceVersion:"25858", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442068, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"v1", Time:(*v1.Time)(0xc0008e4440), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008e4480)}}}, Spec:v1.ServiceSpec{Ports:[]v1.ServicePort{v1.ServicePort{Name:"", Protocol:"TCP", AppProtocol:(*string)(nil), Port:5000, TargetPort:intstr.IntOrString{Type:0, IntVal:5000, StrVal:""}, NodePort:30201}}, Selector:map[string]string{"App":"flask-app"}, ClusterIP:"10.96.157.135", Type:"NodePort", ExternalIPs:[]string(nil), SessionAffinity:"None", LoadBalancerIP:"", LoadBalancerSourceRanges:[]string(nil), ExternalName:"", ExternalTrafficPolicy:"Cluster", HealthCheckNodePort:0, PublishNotReadyAddresses:false, SessionAffinityConfig:(*v1.SessionAffinityConfig)(nil), IPFamily:(*v1.IPFamily)(nil), TopologyKeys:[]string(nil)}, Status:v1.ServiceStatus{LoadBalancer:v1.LoadBalancerStatus{Ingress:[]v1.LoadBalancerIngress(nil)}}}: timestamp=2021-02-20T13:23:35.952-0500
2021-02-20T13:23:35.952-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:35 [DEBUG] Flattened service spec: []interface {}{map[string]interface {}{"cluster_ip":"10.96.157.135", "external_traffic_policy":"Cluster", "health_check_node_port":0, "port":[]interface {}{map[string]interface {}{"name":"", "node_port":30201, "port":5000, "protocol":"TCP", "target_port":"5000"}}, "publish_not_ready_addresses":false, "selector":map[string]string{"App":"flask-app"}, "session_affinity":"None", "type":"NodePort"}}: timestamp=2021-02-20T13:23:35.952-0500
2021/02/20 13:23:35 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_service.flask-app during refresh.
      - .metadata[0].annotations: was null, but now cty.MapValEmpty(cty.String)
      - .metadata[0].labels: was null, but now cty.MapValEmpty(cty.String)
      - .spec[0].external_ips: was null, but now cty.SetValEmpty(cty.String)
      - .spec[0].load_balancer_source_ranges: was null, but now cty.SetValEmpty(cty.String)
2021/02/20 13:23:35 [TRACE] EvalWriteState: using RefreshState for kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] EvalWriteState: recording 1 dependencies for kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] Re-validating config for "kubernetes_service.flask-app"
2021/02/20 13:23:35 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:35 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:23:35 [TRACE] EvalWriteState: writing current state object for kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] EvalWriteDiff: recorded NoOp change for kubernetes_service.flask-app
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": dynamic subgraph completed successfully
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app": visit complete
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:23:35 [TRACE] vertex "kubernetes_service.flask-app (expand)": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:23:35 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:23:35 [TRACE] GRPCProvider: Close
2021/02/20 13:23:35 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:23:35.957-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:23:35.959-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52394
2021-02-20T13:23:35.959-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:23:35 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:23:35 [TRACE] dag/walk: visiting "root"
2021/02/20 13:23:35 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:23:35 [TRACE] vertex "root": visit complete
2021/02/20 13:23:35 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2021/02/20 13:23:38 [INFO] backend/local: apply calling Apply
2021/02/20 13:23:38 [INFO] terraform: building graph: GraphTypeApply
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/02/20 13:23:38 [TRACE] ConfigTransformer: Starting for path: 
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/02/20 13:23:38 [TRACE] DiffTransformer starting
2021/02/20 13:23:38 [TRACE] DiffTransformer: found NoOp change for kubernetes_namespace.flaskapp 
2021/02/20 13:23:38 [TRACE] DiffTransformer: found Update change for kubernetes_deployment.flask-app 
2021/02/20 13:23:38 [TRACE] DiffTransformer: kubernetes_deployment.flask-app will be represented by kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] DiffTransformer: found NoOp change for kubernetes_service.flask-app 
2021/02/20 13:23:38 [TRACE] DiffTransformer complete
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) config from kubernetes.tf:27,1-45
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:13,1-43
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:27,1-45
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_deployment.flask-app (expand)
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching to "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) config from kubernetes.tf:72,1-42
2021/02/20 13:23:38 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to kubernetes_service.flask-app (expand)
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/02/20 13:23:38 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider configuration from kubernetes.tf:9,1-22
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/02/20 13:23:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_namespace.flaskapp (expand)
2021/02/20 13:23:38 [DEBUG] ProviderTransformer: "kubernetes_namespace.flaskapp (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app (expand)
2021/02/20 13:23:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_service.flask-app (expand)
2021/02/20 13:23:38 [DEBUG] ProviderTransformer: "kubernetes_service.flask-app (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:38 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/hashicorp/kubernetes"] serving kubernetes_deployment.flask-app
2021/02/20 13:23:38 [DEBUG] ProviderTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/02/20 13:23:38 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_namespace.flaskapp (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_service.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/02/20 13:23:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app (expand)
2021/02/20 13:23:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_service.flask-app (expand)
2021/02/20 13:23:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:38 [TRACE] AttachSchemaTransformer: attaching resource schema to kubernetes_namespace.flaskapp (expand)
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/02/20 13:23:38 [DEBUG] ReferenceTransformer: "kubernetes_namespace.flaskapp (expand)" references: []
2021/02/20 13:23:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app (expand)" references: []
2021/02/20 13:23:38 [DEBUG] ReferenceTransformer: "kubernetes_service.flask-app (expand)" references: []
2021/02/20 13:23:38 [DEBUG] ReferenceTransformer: "kubernetes_deployment.flask-app" references: []
2021/02/20 13:23:38 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" references: []
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/02/20 13:23:38 [TRACE] AttachDependenciesTransformer: kubernetes_deployment.flask-app depends on []
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/02/20 13:23:38 [TRACE] ForcedCBDTransformer: "kubernetes_deployment.flask-app" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021/02/20 13:23:38 [DEBUG] pruneUnusedNodes: kubernetes_namespace.flaskapp (expand) is no longer needed, removing
2021/02/20 13:23:38 [DEBUG] pruneUnusedNodes: kubernetes_service.flask-app (expand) is no longer needed, removing
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:23:38 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/02/20 13:23:38 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
    kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
  kubernetes_deployment.flask-app (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
  provider["registry.terraform.io/hashicorp/kubernetes"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
    kubernetes_deployment.flask-app - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider["registry.terraform.io/hashicorp/kubernetes"] (close) - *terraform.graphNodeCloseProvider
  ------
2021/02/20 13:23:38 [DEBUG] Starting graph walk: walkApply
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"]"
2021/02/20 13:23:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": starting visit (*terraform.NodeApplyableProvider)
2021-02-20T13:23:38.272-0500 [INFO]  plugin: configuring client automatic mTLS
2021-02-20T13:23:38.304-0500 [DEBUG] plugin: starting plugin: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 args=[.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5]
2021-02-20T13:23:38.310-0500 [DEBUG] plugin: plugin started: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52395
2021-02-20T13:23:38.311-0500 [DEBUG] plugin: waiting for RPC address: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5
2021-02-20T13:23:38.355-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: configuring server automatic mTLS: timestamp=2021-02-20T13:23:38.354-0500
2021-02-20T13:23:38.380-0500 [DEBUG] plugin.terraform-provider-kubernetes_v2.0.2_x5: plugin address: address=/var/folders/jt/d0b4ml1x16x8gc88fk3f43rh0000gn/T/plugin501429262 network=unix timestamp=2021-02-20T13:23:38.380-0500
2021-02-20T13:23:38.380-0500 [DEBUG] plugin: using plugin: version=5
2021-02-20T13:23:38.436-0500 [TRACE] plugin.stdio: waiting for stdio data
2021/02/20 13:23:38 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/hashicorp/kubernetes\"]" provider for provider["registry.terraform.io/hashicorp/kubernetes"]
2021/02/20 13:23:38 [TRACE] buildProviderConfig for provider["registry.terraform.io/hashicorp/kubernetes"]: using explicit config only
2021/02/20 13:23:38 [TRACE] GRPCProvider: GetSchema
2021/02/20 13:23:38 [TRACE] GRPCProvider: Configure
2021-02-20T13:23:38.468-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Using kubeconfig: /Users/merve/.kube/config: timestamp=2021-02-20T13:23:38.468-0500
2021-02-20T13:23:38.469-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Enabling HTTP requests/responses tracing: timestamp=2021-02-20T13:23:38.469-0500
2021/02/20 13:23:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"]": visit complete
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app (expand)"
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": expanding dynamic subgraph
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": entering dynamic subgraph
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResource)
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": dynamic subgraph completed successfully
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app (expand)": visit complete
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "kubernetes_deployment.flask-app"
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app": starting visit (*terraform.NodeApplyableResourceInstance)
2021/02/20 13:23:38 [TRACE] EvalReadDiff: Read Update change from plan for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:23:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:23:38 [TRACE] EvalReadDiff: Read Update change from plan for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] Re-validating config for "kubernetes_deployment.flask-app"
2021/02/20 13:23:38 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/02/20 13:23:38 [TRACE] GRPCProvider: PlanResourceChange
2021/02/20 13:23:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an invalid plan for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .spec[0].strategy: block count in plan (1) disagrees with count in config (0)
2021/02/20 13:23:38 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Update) matches planned change (action Update)
2021/02/20 13:23:38 [TRACE] EvalReadState: reading state for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] UpgradeResourceState: schema version of kubernetes_deployment.flask-app is still 1; calling provider "kubernetes" for any other minor fixups
2021/02/20 13:23:38 [TRACE] GRPCProvider: UpgradeResourceState
2021/02/20 13:23:38 [DEBUG] EvalApply: ProviderMeta config value set
2021/02/20 13:23:38 [DEBUG] kubernetes_deployment.flask-app: applying the planned Update change
2021/02/20 13:23:38 [TRACE] GRPCProvider: ApplyResourceChange
2021-02-20T13:23:38.509-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [INFO] Updating deployment "flask-app": [{"path":"/spec","value":{"replicas":3,"selector":{"matchLabels":{"App":"flask-app"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"App":"flask-app"}},"spec":{"containers":[{"name":"flask-app","image":"vakkasoglu/capstone-project","ports":[{"containerPort":5000,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"250m","memory":"50Mi"}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","automountServiceAccountToken":true,"shareProcessNamespace":false,"enableServiceLinks":true}},"strategy":{"type":"RollingUpdate","rollingUpdate":{"maxUnavailable":"25%","maxSurge":"25%"}},"revisionHistoryLimit":10,"progressDeadlineSeconds":600},"op":"replace"}]: timestamp=2021-02-20T13:23:38.509-0500
2021-02-20T13:23:38.509-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
PATCH /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Content-Length: 851
Accept: application/json, */*
Content-Type: application/json-patch+json
Accept-Encoding: gzip

[
 {
  "path": "/spec",
  "value": {
   "replicas": 3,
   "selector": {
    "matchLabels": {
     "App": "flask-app"
    }
   },
   "template": {
    "metadata": {
     "creationTimestamp": null,
     "labels": {
      "App": "flask-app"
     }
    },
    "spec": {
     "containers": [
      {
       "name": "flask-app",
       "image": "vakkasoglu/capstone-project",
       "ports": [
        {
         "containerPort": 5000,
         "protocol": "TCP"
        }
       ],
       "resources": {
        "limits": {
         "cpu": "500m",
         "memory": "512Mi"
        },
        "requests": {
         "cpu": "250m",
         "memory": "50Mi"
        }
       },
       "terminationMessagePath": "/dev/termination-log",
       "terminationMessagePolicy": "File",
       "imagePullPolicy": "Always"
      }
     ],
     "restartPolicy": "Always",
     "terminationGracePeriodSeconds": 30,
     "dnsPolicy": "ClusterFirst",
     "automountServiceAccountToken": true,
     "shareProcessNamespace": false,
     "enableServiceLinks": true
    }
   },
   "strategy": {
    "type": "RollingUpdate",
    "rollingUpdate": {
     "maxUnavailable": "25%",
     "maxSurge": "25%"
    }
   },
   "revisionHistoryLimit": 10,
   "progressDeadlineSeconds": 600
  },
  "op": "replace"
 }
]
-----------------------------------------------------: timestamp=2021-02-20T13:23:38.509-0500
2021-02-20T13:23:38.539-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "26118",
  "generation": 2,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:38.539-0500
2021-02-20T13:23:38.546-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [INFO] Submitted updated deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f38adf79-81b7-4345-9bb7-a39d3c14b4d5", ResourceVersion:"26118", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc001062940), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001062980)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0010629c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001062a00)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc00125fff0), Selector:(*v1.LabelSelector)(0xc001062a40), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00031c4c0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc00031c4c8), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc00031c4c9), SecurityContext:(*v1.PodSecurityContext)(0xc0005061c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00031c4ca), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0010edea0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc00031c524), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc00031c528)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:23:38.545-0500
2021-02-20T13:23:38.546-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [INFO] Waiting for deployment default/flask-app to rollout: timestamp=2021-02-20T13:23:38.546-0500
2021-02-20T13:23:38.546-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Waiting for state to become: [success]: timestamp=2021-02-20T13:23:38.546-0500
2021-02-20T13:23:38.546-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:38.546-0500
2021-02-20T13:23:38.566-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "26118",
  "generation": 2,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:38.566-0500
2021-02-20T13:23:38.567-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [INFO] Checking deployment flask-app: timestamp=2021-02-20T13:23:38.567-0500
2021-02-20T13:23:38.567-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:38.567-0500
2021-02-20T13:23:38.575-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "26118",
  "generation": 2,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:38.574-0500
2021-02-20T13:23:38.575-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [INFO] Reading deployment flask-app: timestamp=2021-02-20T13:23:38.575-0500
2021-02-20T13:23:38.575-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Request Details:
---[ REQUEST ]---------------------------------------
GET /apis/apps/v1/namespaces/default/deployments/flask-app HTTP/1.1
Host: 127.0.0.1:59980
User-Agent: HashiCorp/1.0 Terraform/0.14.6
Accept: application/json, */*
Accept-Encoding: gzip


-----------------------------------------------------: timestamp=2021-02-20T13:23:38.575-0500
2021-02-20T13:23:38.582-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [DEBUG] Kubernetes API Response Details:
---[ RESPONSE ]--------------------------------------
HTTP/2.0 200 OK
Content-Length: 3481
Cache-Control: no-cache, private
Content-Type: application/json
Date: Sat, 20 Feb 2021 18:23:38 GMT
X-Kubernetes-Pf-Flowschema-Uid: 576dfad0-6803-41ca-9541-bfc4ce861da2
X-Kubernetes-Pf-Prioritylevel-Uid: 20156dd6-f72e-402f-b418-c3f7029b291c

{
 "kind": "Deployment",
 "apiVersion": "apps/v1",
 "metadata": {
  "name": "flask-app",
  "namespace": "default",
  "uid": "f38adf79-81b7-4345-9bb7-a39d3c14b4d5",
  "resourceVersion": "26118",
  "generation": 2,
  "creationTimestamp": "2021-02-20T18:21:04Z",
  "labels": {
   "App": "flask-app"
  },
  "annotations": {
   "deployment.kubernetes.io/revision": "1"
  },
  "managedFields": [
   {
    "manager": "HashiCorp",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:04Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:labels": {
       ".": {},
       "f:App": {}
      }
     },
     "f:spec": {
      "f:progressDeadlineSeconds": {},
      "f:replicas": {},
      "f:revisionHistoryLimit": {},
      "f:selector": {},
      "f:strategy": {
       "f:rollingUpdate": {
        ".": {},
        "f:maxSurge": {},
        "f:maxUnavailable": {}
       },
       "f:type": {}
      },
      "f:template": {
       "f:metadata": {
        "f:labels": {
         ".": {},
         "f:App": {}
        }
       },
       "f:spec": {
        "f:automountServiceAccountToken": {},
        "f:containers": {
         "k:{\"name\":\"flask-app\"}": {
          ".": {},
          "f:image": {},
          "f:imagePullPolicy": {},
          "f:name": {},
          "f:ports": {
           ".": {},
           "k:{\"containerPort\":5000,\"protocol\":\"TCP\"}": {
            ".": {},
            "f:containerPort": {},
            "f:protocol": {}
           }
          },
          "f:resources": {
           ".": {},
           "f:limits": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           },
           "f:requests": {
            ".": {},
            "f:cpu": {},
            "f:memory": {}
           }
          },
          "f:terminationMessagePath": {},
          "f:terminationMessagePolicy": {}
         }
        },
        "f:dnsPolicy": {},
        "f:enableServiceLinks": {},
        "f:restartPolicy": {},
        "f:schedulerName": {},
        "f:securityContext": {},
        "f:shareProcessNamespace": {},
        "f:terminationGracePeriodSeconds": {}
       }
      }
     }
    }
   },
   {
    "manager": "kube-controller-manager",
    "operation": "Update",
    "apiVersion": "apps/v1",
    "time": "2021-02-20T18:21:06Z",
    "fieldsType": "FieldsV1",
    "fieldsV1": {
     "f:metadata": {
      "f:annotations": {
       ".": {},
       "f:deployment.kubernetes.io/revision": {}
      }
     },
     "f:status": {
      "f:availableReplicas": {},
      "f:conditions": {
       ".": {},
       "k:{\"type\":\"Available\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       },
       "k:{\"type\":\"Progressing\"}": {
        ".": {},
        "f:lastTransitionTime": {},
        "f:lastUpdateTime": {},
        "f:message": {},
        "f:reason": {},
        "f:status": {},
        "f:type": {}
       }
      },
      "f:observedGeneration": {},
      "f:readyReplicas": {},
      "f:replicas": {},
      "f:updatedReplicas": {}
     }
    }
   }
  ]
 },
 "spec": {
  "replicas": 3,
  "selector": {
   "matchLabels": {
    "App": "flask-app"
   }
  },
  "template": {
   "metadata": {
    "creationTimestamp": null,
    "labels": {
     "App": "flask-app"
    }
   },
   "spec": {
    "containers": [
     {
      "name": "flask-app",
      "image": "vakkasoglu/capstone-project",
      "ports": [
       {
        "containerPort": 5000,
        "protocol": "TCP"
       }
      ],
      "resources": {
       "limits": {
        "cpu": "500m",
        "memory": "512Mi"
       },
       "requests": {
        "cpu": "250m",
        "memory": "50Mi"
       }
      },
      "terminationMessagePath": "/dev/termination-log",
      "terminationMessagePolicy": "File",
      "imagePullPolicy": "Always"
     }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "automountServiceAccountToken": true,
    "shareProcessNamespace": false,
    "securityContext": {},
    "schedulerName": "default-scheduler",
    "enableServiceLinks": true
   }
  },
  "strategy": {
   "type": "RollingUpdate",
   "rollingUpdate": {
    "maxUnavailable": "25%",
    "maxSurge": "25%"
   }
  },
  "revisionHistoryLimit": 10,
  "progressDeadlineSeconds": 600
 },
 "status": {
  "observedGeneration": 1,
  "replicas": 2,
  "updatedReplicas": 2,
  "readyReplicas": 2,
  "availableReplicas": 2,
  "conditions": [
   {
    "type": "Available",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:06Z",
    "reason": "MinimumReplicasAvailable",
    "message": "Deployment has minimum availability."
   },
   {
    "type": "Progressing",
    "status": "True",
    "lastUpdateTime": "2021-02-20T18:21:06Z",
    "lastTransitionTime": "2021-02-20T18:21:04Z",
    "reason": "NewReplicaSetAvailable",
    "message": "ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."
   }
  ]
 }
}

-----------------------------------------------------: timestamp=2021-02-20T13:23:38.582-0500
2021-02-20T13:23:38.582-0500 [INFO]  plugin.terraform-provider-kubernetes_v2.0.2_x5: 2021/02/20 13:23:38 [INFO] Received deployment: &v1.Deployment{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"flask-app", GenerateName:"", Namespace:"default", SelfLink:"", UID:"f38adf79-81b7-4345-9bb7-a39d3c14b4d5", ResourceVersion:"26118", Generation:2, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string{"deployment.kubernetes.io/revision":"1"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"HashiCorp", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc001063840), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001063880)}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"apps/v1", Time:(*v1.Time)(0xc0010638c0), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001063900)}}}, Spec:v1.DeploymentSpec{Replicas:(*int32)(0xc000f66170), Selector:(*v1.LabelSelector)(0xc001063920), Template:v1.PodTemplateSpec{ObjectMeta:v1.ObjectMeta{Name:"", GenerateName:"", Namespace:"", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"App":"flask-app"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container{v1.Container{Name:"flask-app", Image:"vakkasoglu/capstone-project", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort{v1.ContainerPort{Name:"", HostPort:0, ContainerPort:5000, Protocol:"TCP", HostIP:""}}, EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:536870912, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"", Format:"BinarySI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:250, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"250m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:52428800, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"50Mi", Format:"BinarySI"}}}, VolumeMounts:[]v1.VolumeMount(nil), VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"Always", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000f66230), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"", DeprecatedServiceAccount:"", AutomountServiceAccountToken:(*bool)(0xc000f66238), NodeName:"", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(0xc000f66239), SecurityContext:(*v1.PodSecurityContext)(0xc000506620), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000f6623a), PreemptionPolicy:(*v1.PreemptionPolicy)(nil), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil)}}, Strategy:v1.DeploymentStrategy{Type:"RollingUpdate", RollingUpdate:(*v1.RollingUpdateDeployment)(0xc0012c58b0)}, MinReadySeconds:0, RevisionHistoryLimit:(*int32)(0xc000f66294), Paused:false, ProgressDeadlineSeconds:(*int32)(0xc000f66298)}, Status:v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:2, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442066, loc:(*time.Location)(0x3e97ec0)}}, LastTransitionTime:v1.Time{Time:time.Time{wall:0x0, ext:63749442064, loc:(*time.Location)(0x3e97ec0)}}, Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"flask-app-77d7666dcc\" has successfully progressed."}}, CollisionCount:(*int32)(nil)}}: timestamp=2021-02-20T13:23:38.582-0500
2021/02/20 13:23:38 [WARN] Provider "registry.terraform.io/hashicorp/kubernetes" produced an unexpected new value for kubernetes_deployment.flask-app, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .metadata[0].generation: was cty.NumberIntVal(1), but now cty.NumberIntVal(2)
      - .metadata[0].resource_version: was cty.StringVal("25852"), but now cty.StringVal("26118")
2021/02/20 13:23:38 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] EvalApplyProvisioners: kubernetes_deployment.flask-app is not freshly-created, so no provisioning is required
2021/02/20 13:23:38 [TRACE] EvalWriteState: recording 0 dependencies for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] EvalWriteState: writing current state object for kubernetes_deployment.flask-app
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 69
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:23:38 [TRACE] vertex "kubernetes_deployment.flask-app": visit complete
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/02/20 13:23:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)"
2021/02/20 13:23:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/02/20 13:23:38 [TRACE] GRPCProvider: Close
2021/02/20 13:23:38 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-02-20T13:23:38.635-0500 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-02-20T13:23:38.641-0500 [DEBUG] plugin: plugin process exited: path=.terraform/providers/registry.terraform.io/hashicorp/kubernetes/2.0.2/darwin_amd64/terraform-provider-kubernetes_v2.0.2_x5 pid=52395
2021-02-20T13:23:38.641-0500 [DEBUG] plugin: plugin exited
2021/02/20 13:23:38 [TRACE] vertex "provider[\"registry.terraform.io/hashicorp/kubernetes\"] (close)": visit complete
2021/02/20 13:23:38 [TRACE] dag/walk: visiting "root"
2021/02/20 13:23:38 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021/02/20 13:23:38 [TRACE] vertex "root": visit complete
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 70
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/02/20 13:23:38 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
